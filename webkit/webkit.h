#pragma once

#ifndef GO_QTWEBKIT_H
#define GO_QTWEBKIT_H

#ifdef __cplusplus
extern "C" {
#endif

void* QGraphicsWebView_Icon(void* ptr);
int QGraphicsWebView_IsModified(void* ptr);
int QGraphicsWebView_IsTiledBackingStoreFrozen(void* ptr);
void QGraphicsWebView_Load2(void* ptr, void* request, int operation, char* body);
int QGraphicsWebView_ResizesToContents(void* ptr);
void QGraphicsWebView_SetResizesToContents(void* ptr, int enabled);
void QGraphicsWebView_SetTiledBackingStoreFrozen(void* ptr, int frozen);
void QGraphicsWebView_SetUrl(void* ptr, void* vqu);
void QGraphicsWebView_SetZoomFactor(void* ptr, double vqr);
char* QGraphicsWebView_Title(void* ptr);
void* QGraphicsWebView_Url(void* ptr);
double QGraphicsWebView_ZoomFactor(void* ptr);
void* QGraphicsWebView_NewQGraphicsWebView(void* parent);
void QGraphicsWebView_Back(void* ptr);
void QGraphicsWebView_ContextMenuEvent(void* ptr, void* ev);
void QGraphicsWebView_ContextMenuEventDefault(void* ptr, void* ev);
void QGraphicsWebView_DragEnterEvent(void* ptr, void* ev);
void QGraphicsWebView_DragEnterEventDefault(void* ptr, void* ev);
void QGraphicsWebView_DragLeaveEvent(void* ptr, void* ev);
void QGraphicsWebView_DragLeaveEventDefault(void* ptr, void* ev);
void QGraphicsWebView_DragMoveEvent(void* ptr, void* ev);
void QGraphicsWebView_DragMoveEventDefault(void* ptr, void* ev);
void QGraphicsWebView_DropEvent(void* ptr, void* ev);
void QGraphicsWebView_DropEventDefault(void* ptr, void* ev);
int QGraphicsWebView_Event(void* ptr, void* event);
int QGraphicsWebView_EventDefault(void* ptr, void* event);
int QGraphicsWebView_FindText(void* ptr, char* subString, int options);
void QGraphicsWebView_FocusInEvent(void* ptr, void* ev);
void QGraphicsWebView_FocusInEventDefault(void* ptr, void* ev);
int QGraphicsWebView_FocusNextPrevChild(void* ptr, int next);
int QGraphicsWebView_FocusNextPrevChildDefault(void* ptr, int next);
void QGraphicsWebView_FocusOutEvent(void* ptr, void* ev);
void QGraphicsWebView_FocusOutEventDefault(void* ptr, void* ev);
void QGraphicsWebView_Forward(void* ptr);
void* QGraphicsWebView_History(void* ptr);
void QGraphicsWebView_HoverLeaveEvent(void* ptr, void* ev);
void QGraphicsWebView_HoverLeaveEventDefault(void* ptr, void* ev);
void QGraphicsWebView_HoverMoveEvent(void* ptr, void* ev);
void QGraphicsWebView_HoverMoveEventDefault(void* ptr, void* ev);
void QGraphicsWebView_ConnectIconChanged(void* ptr);
void QGraphicsWebView_DisconnectIconChanged(void* ptr);
void QGraphicsWebView_IconChanged(void* ptr);
void QGraphicsWebView_InputMethodEvent(void* ptr, void* ev);
void QGraphicsWebView_InputMethodEventDefault(void* ptr, void* ev);
void* QGraphicsWebView_InputMethodQuery(void* ptr, int query);
void* QGraphicsWebView_InputMethodQueryDefault(void* ptr, int query);
void* QGraphicsWebView_ItemChange(void* ptr, int change, void* value);
void* QGraphicsWebView_ItemChangeDefault(void* ptr, int change, void* value);
void QGraphicsWebView_KeyPressEvent(void* ptr, void* ev);
void QGraphicsWebView_KeyPressEventDefault(void* ptr, void* ev);
void QGraphicsWebView_KeyReleaseEvent(void* ptr, void* ev);
void QGraphicsWebView_KeyReleaseEventDefault(void* ptr, void* ev);
void QGraphicsWebView_ConnectLinkClicked(void* ptr);
void QGraphicsWebView_DisconnectLinkClicked(void* ptr);
void QGraphicsWebView_LinkClicked(void* ptr, void* url);
void QGraphicsWebView_Load(void* ptr, void* url);
void QGraphicsWebView_ConnectLoadFinished(void* ptr);
void QGraphicsWebView_DisconnectLoadFinished(void* ptr);
void QGraphicsWebView_LoadFinished(void* ptr, int ok);
void QGraphicsWebView_ConnectLoadProgress(void* ptr);
void QGraphicsWebView_DisconnectLoadProgress(void* ptr);
void QGraphicsWebView_LoadProgress(void* ptr, int progress);
void QGraphicsWebView_ConnectLoadStarted(void* ptr);
void QGraphicsWebView_DisconnectLoadStarted(void* ptr);
void QGraphicsWebView_LoadStarted(void* ptr);
void QGraphicsWebView_MouseDoubleClickEvent(void* ptr, void* ev);
void QGraphicsWebView_MouseDoubleClickEventDefault(void* ptr, void* ev);
void QGraphicsWebView_MouseMoveEvent(void* ptr, void* ev);
void QGraphicsWebView_MouseMoveEventDefault(void* ptr, void* ev);
void QGraphicsWebView_MousePressEvent(void* ptr, void* ev);
void QGraphicsWebView_MousePressEventDefault(void* ptr, void* ev);
void QGraphicsWebView_MouseReleaseEvent(void* ptr, void* ev);
void QGraphicsWebView_MouseReleaseEventDefault(void* ptr, void* ev);
void* QGraphicsWebView_Page(void* ptr);
void* QGraphicsWebView_PageAction(void* ptr, int action);
void QGraphicsWebView_Paint(void* ptr, void* painter, void* option, void* widget);
void QGraphicsWebView_PaintDefault(void* ptr, void* painter, void* option, void* widget);
void QGraphicsWebView_Reload(void* ptr);
int QGraphicsWebView_RenderHints(void* ptr);
int QGraphicsWebView_SceneEvent(void* ptr, void* event);
int QGraphicsWebView_SceneEventDefault(void* ptr, void* event);
void QGraphicsWebView_SetContent(void* ptr, char* data, char* mimeType, void* baseUrl);
void QGraphicsWebView_SetGeometry(void* ptr, void* rect);
void QGraphicsWebView_SetGeometryDefault(void* ptr, void* rect);
void QGraphicsWebView_SetHtml(void* ptr, char* html, void* baseUrl);
void QGraphicsWebView_SetPage(void* ptr, void* page);
void QGraphicsWebView_SetRenderHint(void* ptr, int hint, int enabled);
void QGraphicsWebView_SetRenderHints(void* ptr, int hints);
void* QGraphicsWebView_Settings(void* ptr);
void* QGraphicsWebView_SizeHint(void* ptr, int which, void* constraint);
void* QGraphicsWebView_SizeHintDefault(void* ptr, int which, void* constraint);
void QGraphicsWebView_ConnectStatusBarMessage(void* ptr);
void QGraphicsWebView_DisconnectStatusBarMessage(void* ptr);
void QGraphicsWebView_StatusBarMessage(void* ptr, char* text);
void QGraphicsWebView_Stop(void* ptr);
void QGraphicsWebView_ConnectTitleChanged(void* ptr);
void QGraphicsWebView_DisconnectTitleChanged(void* ptr);
void QGraphicsWebView_TitleChanged(void* ptr, char* vqs);
void QGraphicsWebView_TriggerPageAction(void* ptr, int action, int checked);
void QGraphicsWebView_UpdateGeometry(void* ptr);
void QGraphicsWebView_UpdateGeometryDefault(void* ptr);
void QGraphicsWebView_ConnectUrlChanged(void* ptr);
void QGraphicsWebView_DisconnectUrlChanged(void* ptr);
void QGraphicsWebView_UrlChanged(void* ptr, void* vqu);
void QGraphicsWebView_WheelEvent(void* ptr, void* ev);
void QGraphicsWebView_WheelEventDefault(void* ptr, void* ev);
void QGraphicsWebView_DestroyQGraphicsWebView(void* ptr);
void* QGraphicsWebView_BoundingRect(void* ptr);
void* QGraphicsWebView_BoundingRectDefault(void* ptr);
void QGraphicsWebView_ChangeEvent(void* ptr, void* event);
void QGraphicsWebView_ChangeEventDefault(void* ptr, void* event);
int QGraphicsWebView_Close(void* ptr);
int QGraphicsWebView_CloseDefault(void* ptr);
void QGraphicsWebView_CloseEvent(void* ptr, void* event);
void QGraphicsWebView_CloseEventDefault(void* ptr, void* event);
void QGraphicsWebView_GetContentsMargins(void* ptr, double left, double top, double right, double bottom);
void QGraphicsWebView_GetContentsMarginsDefault(void* ptr, double left, double top, double right, double bottom);
void QGraphicsWebView_GrabKeyboardEvent(void* ptr, void* event);
void QGraphicsWebView_GrabKeyboardEventDefault(void* ptr, void* event);
void QGraphicsWebView_GrabMouseEvent(void* ptr, void* event);
void QGraphicsWebView_GrabMouseEventDefault(void* ptr, void* event);
void QGraphicsWebView_HideEvent(void* ptr, void* event);
void QGraphicsWebView_HideEventDefault(void* ptr, void* event);
void QGraphicsWebView_InitStyleOption(void* ptr, void* option);
void QGraphicsWebView_InitStyleOptionDefault(void* ptr, void* option);
void QGraphicsWebView_MoveEvent(void* ptr, void* event);
void QGraphicsWebView_MoveEventDefault(void* ptr, void* event);
void QGraphicsWebView_PaintWindowFrame(void* ptr, void* painter, void* option, void* widget);
void QGraphicsWebView_PaintWindowFrameDefault(void* ptr, void* painter, void* option, void* widget);
void QGraphicsWebView_PolishEvent(void* ptr);
void QGraphicsWebView_PolishEventDefault(void* ptr);
void QGraphicsWebView_ResizeEvent(void* ptr, void* event);
void QGraphicsWebView_ResizeEventDefault(void* ptr, void* event);
void* QGraphicsWebView_Shape(void* ptr);
void* QGraphicsWebView_ShapeDefault(void* ptr);
void QGraphicsWebView_ShowEvent(void* ptr, void* event);
void QGraphicsWebView_ShowEventDefault(void* ptr, void* event);
int QGraphicsWebView_Type(void* ptr);
int QGraphicsWebView_TypeDefault(void* ptr);
void QGraphicsWebView_UngrabKeyboardEvent(void* ptr, void* event);
void QGraphicsWebView_UngrabKeyboardEventDefault(void* ptr, void* event);
void QGraphicsWebView_UngrabMouseEvent(void* ptr, void* event);
void QGraphicsWebView_UngrabMouseEventDefault(void* ptr, void* event);
int QGraphicsWebView_WindowFrameEvent(void* ptr, void* event);
int QGraphicsWebView_WindowFrameEventDefault(void* ptr, void* event);
int QGraphicsWebView_WindowFrameSectionAt(void* ptr, void* pos);
int QGraphicsWebView_WindowFrameSectionAtDefault(void* ptr, void* pos);
void QGraphicsWebView_UpdateMicroFocus(void* ptr);
void QGraphicsWebView_UpdateMicroFocusDefault(void* ptr);
void QGraphicsWebView_Advance(void* ptr, int phase);
void QGraphicsWebView_AdvanceDefault(void* ptr, int phase);
int QGraphicsWebView_CollidesWithItem(void* ptr, void* other, int mode);
int QGraphicsWebView_CollidesWithItemDefault(void* ptr, void* other, int mode);
int QGraphicsWebView_CollidesWithPath(void* ptr, void* path, int mode);
int QGraphicsWebView_CollidesWithPathDefault(void* ptr, void* path, int mode);
int QGraphicsWebView_Contains(void* ptr, void* point);
int QGraphicsWebView_ContainsDefault(void* ptr, void* point);
void QGraphicsWebView_HoverEnterEvent(void* ptr, void* event);
void QGraphicsWebView_HoverEnterEventDefault(void* ptr, void* event);
int QGraphicsWebView_IsObscuredBy(void* ptr, void* item);
int QGraphicsWebView_IsObscuredByDefault(void* ptr, void* item);
void* QGraphicsWebView_OpaqueArea(void* ptr);
void* QGraphicsWebView_OpaqueAreaDefault(void* ptr);
int QGraphicsWebView_SceneEventFilter(void* ptr, void* watched, void* event);
int QGraphicsWebView_SceneEventFilterDefault(void* ptr, void* watched, void* event);
void QGraphicsWebView_TimerEvent(void* ptr, void* event);
void QGraphicsWebView_TimerEventDefault(void* ptr, void* event);
void QGraphicsWebView_ChildEvent(void* ptr, void* event);
void QGraphicsWebView_ChildEventDefault(void* ptr, void* event);
void QGraphicsWebView_ConnectNotify(void* ptr, void* sign);
void QGraphicsWebView_ConnectNotifyDefault(void* ptr, void* sign);
void QGraphicsWebView_CustomEvent(void* ptr, void* event);
void QGraphicsWebView_CustomEventDefault(void* ptr, void* event);
void QGraphicsWebView_DeleteLater(void* ptr);
void QGraphicsWebView_DeleteLaterDefault(void* ptr);
void QGraphicsWebView_DisconnectNotify(void* ptr, void* sign);
void QGraphicsWebView_DisconnectNotifyDefault(void* ptr, void* sign);
int QGraphicsWebView_EventFilter(void* ptr, void* watched, void* event);
int QGraphicsWebView_EventFilterDefault(void* ptr, void* watched, void* event);
void* QGraphicsWebView_MetaObject(void* ptr);
void* QGraphicsWebView_MetaObjectDefault(void* ptr);
void* QWebDatabase_NewQWebDatabase(void* other);
char* QWebDatabase_DisplayName(void* ptr);
long long QWebDatabase_ExpectedSize(void* ptr);
char* QWebDatabase_FileName(void* ptr);
char* QWebDatabase_Name(void* ptr);
void* QWebDatabase_Origin(void* ptr);
void QWebDatabase_QWebDatabase_RemoveAllDatabases();
void QWebDatabase_QWebDatabase_RemoveDatabase(void* db);
long long QWebDatabase_Size(void* ptr);
void QWebDatabase_DestroyQWebDatabase(void* ptr);
void* QWebElement_NewQWebElement();
void* QWebElement_NewQWebElement2(void* other);
void QWebElement_AddClass(void* ptr, char* name);
void QWebElement_AppendInside(void* ptr, char* markup);
void QWebElement_AppendInside2(void* ptr, void* element);
void QWebElement_AppendOutside(void* ptr, char* markup);
void QWebElement_AppendOutside2(void* ptr, void* element);
char* QWebElement_Attribute(void* ptr, char* name, char* defaultValue);
char* QWebElement_AttributeNS(void* ptr, char* namespaceUri, char* name, char* defaultValue);
char* QWebElement_AttributeNames(void* ptr, char* namespaceUri);
char* QWebElement_Classes(void* ptr);
void* QWebElement_Clone(void* ptr);
void* QWebElement_Document(void* ptr);
void QWebElement_EncloseContentsWith2(void* ptr, char* markup);
void QWebElement_EncloseContentsWith(void* ptr, void* element);
void QWebElement_EncloseWith(void* ptr, char* markup);
void QWebElement_EncloseWith2(void* ptr, void* element);
void* QWebElement_EvaluateJavaScript(void* ptr, char* scriptSource);
void* QWebElement_FindAll(void* ptr, char* selectorQuery);
void* QWebElement_FindFirst(void* ptr, char* selectorQuery);
void* QWebElement_FirstChild(void* ptr);
void* QWebElement_Geometry(void* ptr);
int QWebElement_HasAttribute(void* ptr, char* name);
int QWebElement_HasAttributeNS(void* ptr, char* namespaceUri, char* name);
int QWebElement_HasAttributes(void* ptr);
int QWebElement_HasClass(void* ptr, char* name);
int QWebElement_HasFocus(void* ptr);
int QWebElement_IsNull(void* ptr);
void* QWebElement_LastChild(void* ptr);
char* QWebElement_LocalName(void* ptr);
char* QWebElement_NamespaceUri(void* ptr);
void* QWebElement_NextSibling(void* ptr);
void* QWebElement_Parent(void* ptr);
char* QWebElement_Prefix(void* ptr);
void QWebElement_PrependInside(void* ptr, char* markup);
void QWebElement_PrependInside2(void* ptr, void* element);
void QWebElement_PrependOutside(void* ptr, char* markup);
void QWebElement_PrependOutside2(void* ptr, void* element);
void* QWebElement_PreviousSibling(void* ptr);
void QWebElement_RemoveAllChildren(void* ptr);
void QWebElement_RemoveAttribute(void* ptr, char* name);
void QWebElement_RemoveAttributeNS(void* ptr, char* namespaceUri, char* name);
void QWebElement_RemoveClass(void* ptr, char* name);
void QWebElement_RemoveFromDocument(void* ptr);
void QWebElement_Render(void* ptr, void* painter);
void QWebElement_Render2(void* ptr, void* painter, void* clip);
void QWebElement_Replace(void* ptr, char* markup);
void QWebElement_Replace2(void* ptr, void* element);
void QWebElement_SetAttribute(void* ptr, char* name, char* value);
void QWebElement_SetAttributeNS(void* ptr, char* namespaceUri, char* name, char* value);
void QWebElement_SetFocus(void* ptr);
void QWebElement_SetInnerXml(void* ptr, char* markup);
void QWebElement_SetOuterXml(void* ptr, char* markup);
void QWebElement_SetPlainText(void* ptr, char* text);
void QWebElement_SetStyleProperty(void* ptr, char* name, char* value);
char* QWebElement_StyleProperty(void* ptr, char* name, int strategy);
char* QWebElement_TagName(void* ptr);
void* QWebElement_TakeFromDocument(void* ptr);
char* QWebElement_ToInnerXml(void* ptr);
char* QWebElement_ToOuterXml(void* ptr);
char* QWebElement_ToPlainText(void* ptr);
void QWebElement_ToggleClass(void* ptr, char* name);
void* QWebElement_WebFrame(void* ptr);
void QWebElement_DestroyQWebElement(void* ptr);
void* QWebElementCollection_NewQWebElementCollection();
void* QWebElementCollection_NewQWebElementCollection2(void* contextElement, char* query);
void* QWebElementCollection_NewQWebElementCollection3(void* other);
void QWebElementCollection_Append(void* ptr, void* other);
void* QWebElementCollection_At(void* ptr, int i);
int QWebElementCollection_Count(void* ptr);
void* QWebElementCollection_First(void* ptr);
void* QWebElementCollection_Last(void* ptr);
void QWebElementCollection_DestroyQWebElementCollection(void* ptr);
void QWebFrame_AddToJavaScriptWindowObject(void* ptr, char* name, void* object, int own);
void* QWebFrame_BaseUrl(void* ptr);
void* QWebFrame_ContentsSize(void* ptr);
int QWebFrame_HasFocus(void* ptr);
void* QWebFrame_Icon(void* ptr);
void* QWebFrame_RequestedUrl(void* ptr);
void* QWebFrame_ScrollPosition(void* ptr);
void QWebFrame_SetScrollPosition(void* ptr, void* pos);
void QWebFrame_SetUrl(void* ptr, void* url);
void QWebFrame_SetZoomFactor(void* ptr, double factor);
char* QWebFrame_Title(void* ptr);
void* QWebFrame_Url(void* ptr);
double QWebFrame_ZoomFactor(void* ptr);
void QWebFrame_ConnectContentsSizeChanged(void* ptr);
void QWebFrame_DisconnectContentsSizeChanged(void* ptr);
void QWebFrame_ContentsSizeChanged(void* ptr, void* size);
void* QWebFrame_DocumentElement(void* ptr);
void* QWebFrame_EvaluateJavaScript(void* ptr, char* scriptSource);
int QWebFrame_Event(void* ptr, void* e);
int QWebFrame_EventDefault(void* ptr, void* e);
void* QWebFrame_FindAllElements(void* ptr, char* selectorQuery);
void* QWebFrame_FindFirstElement(void* ptr, char* selectorQuery);
char* QWebFrame_FrameName(void* ptr);
void* QWebFrame_Geometry(void* ptr);
void* QWebFrame_HitTestContent(void* ptr, void* pos);
void QWebFrame_ConnectIconChanged(void* ptr);
void QWebFrame_DisconnectIconChanged(void* ptr);
void QWebFrame_IconChanged(void* ptr);
void QWebFrame_ConnectInitialLayoutCompleted(void* ptr);
void QWebFrame_DisconnectInitialLayoutCompleted(void* ptr);
void QWebFrame_InitialLayoutCompleted(void* ptr);
void QWebFrame_ConnectJavaScriptWindowObjectCleared(void* ptr);
void QWebFrame_DisconnectJavaScriptWindowObjectCleared(void* ptr);
void QWebFrame_JavaScriptWindowObjectCleared(void* ptr);
void QWebFrame_Load2(void* ptr, void* req, int operation, char* body);
void QWebFrame_Load(void* ptr, void* url);
void QWebFrame_ConnectLoadFinished(void* ptr);
void QWebFrame_DisconnectLoadFinished(void* ptr);
void QWebFrame_LoadFinished(void* ptr, int ok);
void QWebFrame_ConnectLoadStarted(void* ptr);
void QWebFrame_DisconnectLoadStarted(void* ptr);
void QWebFrame_LoadStarted(void* ptr);
void* QWebFrame_Page(void* ptr);
void QWebFrame_ConnectPageChanged(void* ptr);
void QWebFrame_DisconnectPageChanged(void* ptr);
void QWebFrame_PageChanged(void* ptr);
void* QWebFrame_ParentFrame(void* ptr);
void* QWebFrame_Pos(void* ptr);
void QWebFrame_Print(void* ptr, void* printer);
void QWebFrame_Render2(void* ptr, void* painter, int layer, void* clip);
void QWebFrame_Render(void* ptr, void* painter, void* clip);
void QWebFrame_Scroll(void* ptr, int dx, int dy);
void* QWebFrame_ScrollBarGeometry(void* ptr, int orientation);
int QWebFrame_ScrollBarMaximum(void* ptr, int orientation);
int QWebFrame_ScrollBarMinimum(void* ptr, int orientation);
int QWebFrame_ScrollBarPolicy(void* ptr, int orientation);
int QWebFrame_ScrollBarValue(void* ptr, int orientation);
void QWebFrame_ScrollToAnchor(void* ptr, char* anchor);
void* QWebFrame_SecurityOrigin(void* ptr);
void QWebFrame_SetContent(void* ptr, char* data, char* mimeType, void* baseUrl);
void QWebFrame_SetFocus(void* ptr);
void QWebFrame_SetHtml(void* ptr, char* html, void* baseUrl);
void QWebFrame_SetScrollBarPolicy(void* ptr, int orientation, int policy);
void QWebFrame_SetScrollBarValue(void* ptr, int orientation, int value);
void QWebFrame_SetTextSizeMultiplier(void* ptr, double factor);
double QWebFrame_TextSizeMultiplier(void* ptr);
void QWebFrame_ConnectTitleChanged(void* ptr);
void QWebFrame_DisconnectTitleChanged(void* ptr);
void QWebFrame_TitleChanged(void* ptr, char* title);
char* QWebFrame_ToHtml(void* ptr);
char* QWebFrame_ToPlainText(void* ptr);
void QWebFrame_ConnectUrlChanged(void* ptr);
void QWebFrame_DisconnectUrlChanged(void* ptr);
void QWebFrame_UrlChanged(void* ptr, void* url);
void QWebFrame_TimerEvent(void* ptr, void* event);
void QWebFrame_TimerEventDefault(void* ptr, void* event);
void QWebFrame_ChildEvent(void* ptr, void* event);
void QWebFrame_ChildEventDefault(void* ptr, void* event);
void QWebFrame_ConnectNotify(void* ptr, void* sign);
void QWebFrame_ConnectNotifyDefault(void* ptr, void* sign);
void QWebFrame_CustomEvent(void* ptr, void* event);
void QWebFrame_CustomEventDefault(void* ptr, void* event);
void QWebFrame_DeleteLater(void* ptr);
void QWebFrame_DeleteLaterDefault(void* ptr);
void QWebFrame_DisconnectNotify(void* ptr, void* sign);
void QWebFrame_DisconnectNotifyDefault(void* ptr, void* sign);
int QWebFrame_EventFilter(void* ptr, void* watched, void* event);
int QWebFrame_EventFilterDefault(void* ptr, void* watched, void* event);
void* QWebFrame_MetaObject(void* ptr);
void* QWebFrame_MetaObjectDefault(void* ptr);
void QWebHistory_Back(void* ptr);
void* QWebHistory_BackItem(void* ptr);
int QWebHistory_CanGoBack(void* ptr);
int QWebHistory_CanGoForward(void* ptr);
void QWebHistory_Clear(void* ptr);
int QWebHistory_Count(void* ptr);
void* QWebHistory_CurrentItem(void* ptr);
int QWebHistory_CurrentItemIndex(void* ptr);
void QWebHistory_Forward(void* ptr);
void* QWebHistory_ForwardItem(void* ptr);
void QWebHistory_GoToItem(void* ptr, void* item);
void* QWebHistory_ItemAt(void* ptr, int i);
int QWebHistory_MaximumItemCount(void* ptr);
void QWebHistory_SetMaximumItemCount(void* ptr, int count);
void* QWebHistoryInterface_NewQWebHistoryInterface(void* parent);
void QWebHistoryInterface_AddHistoryEntry(void* ptr, char* url);
void* QWebHistoryInterface_QWebHistoryInterface_DefaultInterface();
int QWebHistoryInterface_HistoryContains(void* ptr, char* url);
void QWebHistoryInterface_QWebHistoryInterface_SetDefaultInterface(void* defaultInterface);
void QWebHistoryInterface_DestroyQWebHistoryInterface(void* ptr);
void QWebHistoryInterface_TimerEvent(void* ptr, void* event);
void QWebHistoryInterface_TimerEventDefault(void* ptr, void* event);
void QWebHistoryInterface_ChildEvent(void* ptr, void* event);
void QWebHistoryInterface_ChildEventDefault(void* ptr, void* event);
void QWebHistoryInterface_ConnectNotify(void* ptr, void* sign);
void QWebHistoryInterface_ConnectNotifyDefault(void* ptr, void* sign);
void QWebHistoryInterface_CustomEvent(void* ptr, void* event);
void QWebHistoryInterface_CustomEventDefault(void* ptr, void* event);
void QWebHistoryInterface_DeleteLater(void* ptr);
void QWebHistoryInterface_DeleteLaterDefault(void* ptr);
void QWebHistoryInterface_DisconnectNotify(void* ptr, void* sign);
void QWebHistoryInterface_DisconnectNotifyDefault(void* ptr, void* sign);
int QWebHistoryInterface_Event(void* ptr, void* e);
int QWebHistoryInterface_EventDefault(void* ptr, void* e);
int QWebHistoryInterface_EventFilter(void* ptr, void* watched, void* event);
int QWebHistoryInterface_EventFilterDefault(void* ptr, void* watched, void* event);
void* QWebHistoryInterface_MetaObject(void* ptr);
void* QWebHistoryInterface_MetaObjectDefault(void* ptr);
void* QWebHistoryItem_NewQWebHistoryItem(void* other);
void* QWebHistoryItem_Icon(void* ptr);
int QWebHistoryItem_IsValid(void* ptr);
void* QWebHistoryItem_LastVisited(void* ptr);
void* QWebHistoryItem_OriginalUrl(void* ptr);
void QWebHistoryItem_SetUserData(void* ptr, void* userData);
char* QWebHistoryItem_Title(void* ptr);
void* QWebHistoryItem_Url(void* ptr);
void* QWebHistoryItem_UserData(void* ptr);
void QWebHistoryItem_DestroyQWebHistoryItem(void* ptr);
void* QWebHitTestResult_NewQWebHitTestResult();
void* QWebHitTestResult_NewQWebHitTestResult2(void* other);
char* QWebHitTestResult_AlternateText(void* ptr);
void* QWebHitTestResult_BoundingRect(void* ptr);
void* QWebHitTestResult_Element(void* ptr);
void* QWebHitTestResult_EnclosingBlockElement(void* ptr);
void* QWebHitTestResult_Frame(void* ptr);
void* QWebHitTestResult_ImageUrl(void* ptr);
int QWebHitTestResult_IsContentEditable(void* ptr);
int QWebHitTestResult_IsContentSelected(void* ptr);
int QWebHitTestResult_IsNull(void* ptr);
void* QWebHitTestResult_LinkElement(void* ptr);
void* QWebHitTestResult_LinkTargetFrame(void* ptr);
char* QWebHitTestResult_LinkText(void* ptr);
char* QWebHitTestResult_LinkTitleString(void* ptr);
void* QWebHitTestResult_LinkUrl(void* ptr);
void* QWebHitTestResult_MediaUrl(void* ptr);
void* QWebHitTestResult_Pixmap(void* ptr);
void* QWebHitTestResult_Pos(void* ptr);
char* QWebHitTestResult_Title(void* ptr);
void QWebHitTestResult_DestroyQWebHitTestResult(void* ptr);
void* QWebInspector_NewQWebInspector(void* parent);
void QWebInspector_CloseEvent(void* ptr, void* event);
void QWebInspector_CloseEventDefault(void* ptr, void* event);
int QWebInspector_Event(void* ptr, void* ev);
int QWebInspector_EventDefault(void* ptr, void* ev);
void QWebInspector_HideEvent(void* ptr, void* event);
void QWebInspector_HideEventDefault(void* ptr, void* event);
void* QWebInspector_Page(void* ptr);
void QWebInspector_ResizeEvent(void* ptr, void* event);
void QWebInspector_ResizeEventDefault(void* ptr, void* event);
void QWebInspector_SetPage(void* ptr, void* page);
void QWebInspector_ShowEvent(void* ptr, void* event);
void QWebInspector_ShowEventDefault(void* ptr, void* event);
void* QWebInspector_SizeHint(void* ptr);
void* QWebInspector_SizeHintDefault(void* ptr);
void QWebInspector_DestroyQWebInspector(void* ptr);
void QWebInspector_ActionEvent(void* ptr, void* event);
void QWebInspector_ActionEventDefault(void* ptr, void* event);
void QWebInspector_DragEnterEvent(void* ptr, void* event);
void QWebInspector_DragEnterEventDefault(void* ptr, void* event);
void QWebInspector_DragLeaveEvent(void* ptr, void* event);
void QWebInspector_DragLeaveEventDefault(void* ptr, void* event);
void QWebInspector_DragMoveEvent(void* ptr, void* event);
void QWebInspector_DragMoveEventDefault(void* ptr, void* event);
void QWebInspector_DropEvent(void* ptr, void* event);
void QWebInspector_DropEventDefault(void* ptr, void* event);
void QWebInspector_EnterEvent(void* ptr, void* event);
void QWebInspector_EnterEventDefault(void* ptr, void* event);
void QWebInspector_FocusInEvent(void* ptr, void* event);
void QWebInspector_FocusInEventDefault(void* ptr, void* event);
void QWebInspector_FocusOutEvent(void* ptr, void* event);
void QWebInspector_FocusOutEventDefault(void* ptr, void* event);
void QWebInspector_LeaveEvent(void* ptr, void* event);
void QWebInspector_LeaveEventDefault(void* ptr, void* event);
int QWebInspector_Metric(void* ptr, int m);
int QWebInspector_MetricDefault(void* ptr, int m);
void* QWebInspector_MinimumSizeHint(void* ptr);
void* QWebInspector_MinimumSizeHintDefault(void* ptr);
void QWebInspector_MoveEvent(void* ptr, void* event);
void QWebInspector_MoveEventDefault(void* ptr, void* event);
void* QWebInspector_PaintEngine(void* ptr);
void* QWebInspector_PaintEngineDefault(void* ptr);
void QWebInspector_PaintEvent(void* ptr, void* event);
void QWebInspector_PaintEventDefault(void* ptr, void* event);
void QWebInspector_SetEnabled(void* ptr, int vbo);
void QWebInspector_SetEnabledDefault(void* ptr, int vbo);
void QWebInspector_SetStyleSheet(void* ptr, char* styleSheet);
void QWebInspector_SetStyleSheetDefault(void* ptr, char* styleSheet);
void QWebInspector_SetVisible(void* ptr, int visible);
void QWebInspector_SetVisibleDefault(void* ptr, int visible);
void QWebInspector_SetWindowModified(void* ptr, int vbo);
void QWebInspector_SetWindowModifiedDefault(void* ptr, int vbo);
void QWebInspector_SetWindowTitle(void* ptr, char* vqs);
void QWebInspector_SetWindowTitleDefault(void* ptr, char* vqs);
void QWebInspector_ChangeEvent(void* ptr, void* event);
void QWebInspector_ChangeEventDefault(void* ptr, void* event);
int QWebInspector_Close(void* ptr);
int QWebInspector_CloseDefault(void* ptr);
void QWebInspector_ContextMenuEvent(void* ptr, void* event);
void QWebInspector_ContextMenuEventDefault(void* ptr, void* event);
int QWebInspector_FocusNextPrevChild(void* ptr, int next);
int QWebInspector_FocusNextPrevChildDefault(void* ptr, int next);
int QWebInspector_HasHeightForWidth(void* ptr);
int QWebInspector_HasHeightForWidthDefault(void* ptr);
int QWebInspector_HeightForWidth(void* ptr, int w);
int QWebInspector_HeightForWidthDefault(void* ptr, int w);
void QWebInspector_Hide(void* ptr);
void QWebInspector_HideDefault(void* ptr);
void QWebInspector_InitPainter(void* ptr, void* painter);
void QWebInspector_InitPainterDefault(void* ptr, void* painter);
void QWebInspector_InputMethodEvent(void* ptr, void* event);
void QWebInspector_InputMethodEventDefault(void* ptr, void* event);
void* QWebInspector_InputMethodQuery(void* ptr, int query);
void* QWebInspector_InputMethodQueryDefault(void* ptr, int query);
void QWebInspector_KeyPressEvent(void* ptr, void* event);
void QWebInspector_KeyPressEventDefault(void* ptr, void* event);
void QWebInspector_KeyReleaseEvent(void* ptr, void* event);
void QWebInspector_KeyReleaseEventDefault(void* ptr, void* event);
void QWebInspector_Lower(void* ptr);
void QWebInspector_LowerDefault(void* ptr);
void QWebInspector_MouseDoubleClickEvent(void* ptr, void* event);
void QWebInspector_MouseDoubleClickEventDefault(void* ptr, void* event);
void QWebInspector_MouseMoveEvent(void* ptr, void* event);
void QWebInspector_MouseMoveEventDefault(void* ptr, void* event);
void QWebInspector_MousePressEvent(void* ptr, void* event);
void QWebInspector_MousePressEventDefault(void* ptr, void* event);
void QWebInspector_MouseReleaseEvent(void* ptr, void* event);
void QWebInspector_MouseReleaseEventDefault(void* ptr, void* event);
int QWebInspector_NativeEvent(void* ptr, char* eventType, void* message, long result);
int QWebInspector_NativeEventDefault(void* ptr, char* eventType, void* message, long result);
void QWebInspector_Raise(void* ptr);
void QWebInspector_RaiseDefault(void* ptr);
void QWebInspector_Repaint(void* ptr);
void QWebInspector_RepaintDefault(void* ptr);
void QWebInspector_SetDisabled(void* ptr, int disable);
void QWebInspector_SetDisabledDefault(void* ptr, int disable);
void QWebInspector_SetFocus2(void* ptr);
void QWebInspector_SetFocus2Default(void* ptr);
void QWebInspector_SetHidden(void* ptr, int hidden);
void QWebInspector_SetHiddenDefault(void* ptr, int hidden);
void QWebInspector_Show(void* ptr);
void QWebInspector_ShowDefault(void* ptr);
void QWebInspector_ShowFullScreen(void* ptr);
void QWebInspector_ShowFullScreenDefault(void* ptr);
void QWebInspector_ShowMaximized(void* ptr);
void QWebInspector_ShowMaximizedDefault(void* ptr);
void QWebInspector_ShowMinimized(void* ptr);
void QWebInspector_ShowMinimizedDefault(void* ptr);
void QWebInspector_ShowNormal(void* ptr);
void QWebInspector_ShowNormalDefault(void* ptr);
void QWebInspector_TabletEvent(void* ptr, void* event);
void QWebInspector_TabletEventDefault(void* ptr, void* event);
void QWebInspector_Update(void* ptr);
void QWebInspector_UpdateDefault(void* ptr);
void QWebInspector_UpdateMicroFocus(void* ptr);
void QWebInspector_UpdateMicroFocusDefault(void* ptr);
void QWebInspector_WheelEvent(void* ptr, void* event);
void QWebInspector_WheelEventDefault(void* ptr, void* event);
void QWebInspector_TimerEvent(void* ptr, void* event);
void QWebInspector_TimerEventDefault(void* ptr, void* event);
void QWebInspector_ChildEvent(void* ptr, void* event);
void QWebInspector_ChildEventDefault(void* ptr, void* event);
void QWebInspector_ConnectNotify(void* ptr, void* sign);
void QWebInspector_ConnectNotifyDefault(void* ptr, void* sign);
void QWebInspector_CustomEvent(void* ptr, void* event);
void QWebInspector_CustomEventDefault(void* ptr, void* event);
void QWebInspector_DeleteLater(void* ptr);
void QWebInspector_DeleteLaterDefault(void* ptr);
void QWebInspector_DisconnectNotify(void* ptr, void* sign);
void QWebInspector_DisconnectNotifyDefault(void* ptr, void* sign);
int QWebInspector_EventFilter(void* ptr, void* watched, void* event);
int QWebInspector_EventFilterDefault(void* ptr, void* watched, void* event);
void* QWebInspector_MetaObject(void* ptr);
void* QWebInspector_MetaObjectDefault(void* ptr);
int QWebPage_AcceptNavigationRequest(void* ptr, void* frame, void* request, int ty);
int QWebPage_AcceptNavigationRequestDefault(void* ptr, void* frame, void* request, int ty);
int QWebPage_ForwardUnsupportedContent(void* ptr);
int QWebPage_HasSelection(void* ptr);
int QWebPage_IsContentEditable(void* ptr);
int QWebPage_IsModified(void* ptr);
int QWebPage_LinkDelegationPolicy(void* ptr);
void* QWebPage_Palette(void* ptr);
void* QWebPage_PreferredContentsSize(void* ptr);
char* QWebPage_SelectedHtml(void* ptr);
char* QWebPage_SelectedText(void* ptr);
void QWebPage_SetActualVisibleContentRect(void* ptr, void* rect);
void QWebPage_SetContentEditable(void* ptr, int editable);
void QWebPage_SetFeaturePermission(void* ptr, void* frame, int feature, int policy);
void QWebPage_SetForwardUnsupportedContent(void* ptr, int forward);
void QWebPage_SetLinkDelegationPolicy(void* ptr, int policy);
void QWebPage_SetPalette(void* ptr, void* palette);
void QWebPage_SetPreferredContentsSize(void* ptr, void* size);
void QWebPage_SetViewportSize(void* ptr, void* size);
void QWebPage_SetVisibilityState(void* ptr, int vvi);
int QWebPage_ShouldInterruptJavaScript(void* ptr);
int QWebPage_ShouldInterruptJavaScriptDefault(void* ptr);
void* QWebPage_ViewportSize(void* ptr);
int QWebPage_VisibilityState(void* ptr);
void* QWebPage_NewQWebPage(void* parent);
void* QWebPage_Action(void* ptr, int action);
char* QWebPage_ChooseFile(void* ptr, void* parentFrame, char* suggestedFile);
char* QWebPage_ChooseFileDefault(void* ptr, void* parentFrame, char* suggestedFile);
void QWebPage_ConnectContentsChanged(void* ptr);
void QWebPage_DisconnectContentsChanged(void* ptr);
void QWebPage_ContentsChanged(void* ptr);
void* QWebPage_CreatePlugin(void* ptr, char* classid, void* url, char* paramNames, char* paramValues);
void* QWebPage_CreatePluginDefault(void* ptr, char* classid, void* url, char* paramNames, char* paramValues);
void* QWebPage_CreateStandardContextMenu(void* ptr);
void* QWebPage_CreateWindow(void* ptr, int ty);
void* QWebPage_CreateWindowDefault(void* ptr, int ty);
void* QWebPage_CurrentFrame(void* ptr);
void QWebPage_ConnectDatabaseQuotaExceeded(void* ptr);
void QWebPage_DisconnectDatabaseQuotaExceeded(void* ptr);
void QWebPage_DatabaseQuotaExceeded(void* ptr, void* frame, char* databaseName);
void QWebPage_ConnectDownloadRequested(void* ptr);
void QWebPage_DisconnectDownloadRequested(void* ptr);
void QWebPage_DownloadRequested(void* ptr, void* request);
int QWebPage_Event(void* ptr, void* ev);
int QWebPage_EventDefault(void* ptr, void* ev);
void QWebPage_ConnectFeaturePermissionRequestCanceled(void* ptr);
void QWebPage_DisconnectFeaturePermissionRequestCanceled(void* ptr);
void QWebPage_FeaturePermissionRequestCanceled(void* ptr, void* frame, int feature);
void QWebPage_ConnectFeaturePermissionRequested(void* ptr);
void QWebPage_DisconnectFeaturePermissionRequested(void* ptr);
void QWebPage_FeaturePermissionRequested(void* ptr, void* frame, int feature);
int QWebPage_FindText(void* ptr, char* subString, int options);
int QWebPage_FocusNextPrevChild(void* ptr, int next);
void* QWebPage_FrameAt(void* ptr, void* pos);
void QWebPage_ConnectFrameCreated(void* ptr);
void QWebPage_DisconnectFrameCreated(void* ptr);
void QWebPage_FrameCreated(void* ptr, void* frame);
void QWebPage_ConnectGeometryChangeRequested(void* ptr);
void QWebPage_DisconnectGeometryChangeRequested(void* ptr);
void QWebPage_GeometryChangeRequested(void* ptr, void* geom);
void* QWebPage_History(void* ptr);
void* QWebPage_InputMethodQuery(void* ptr, int property);
void QWebPage_JavaScriptAlert(void* ptr, void* frame, char* msg);
void QWebPage_JavaScriptAlertDefault(void* ptr, void* frame, char* msg);
int QWebPage_JavaScriptConfirm(void* ptr, void* frame, char* msg);
int QWebPage_JavaScriptConfirmDefault(void* ptr, void* frame, char* msg);
void QWebPage_JavaScriptConsoleMessage(void* ptr, char* message, int lineNumber, char* sourceID);
void QWebPage_JavaScriptConsoleMessageDefault(void* ptr, char* message, int lineNumber, char* sourceID);
int QWebPage_JavaScriptPrompt(void* ptr, void* frame, char* msg, char* defaultValue, char* result);
int QWebPage_JavaScriptPromptDefault(void* ptr, void* frame, char* msg, char* defaultValue, char* result);
void QWebPage_ConnectLinkClicked(void* ptr);
void QWebPage_DisconnectLinkClicked(void* ptr);
void QWebPage_LinkClicked(void* ptr, void* url);
void QWebPage_ConnectLinkHovered(void* ptr);
void QWebPage_DisconnectLinkHovered(void* ptr);
void QWebPage_LinkHovered(void* ptr, char* link, char* title, char* textContent);
void QWebPage_ConnectLoadFinished(void* ptr);
void QWebPage_DisconnectLoadFinished(void* ptr);
void QWebPage_LoadFinished(void* ptr, int ok);
void QWebPage_ConnectLoadProgress(void* ptr);
void QWebPage_DisconnectLoadProgress(void* ptr);
void QWebPage_LoadProgress(void* ptr, int progress);
void QWebPage_ConnectLoadStarted(void* ptr);
void QWebPage_DisconnectLoadStarted(void* ptr);
void QWebPage_LoadStarted(void* ptr);
void* QWebPage_MainFrame(void* ptr);
void QWebPage_ConnectMenuBarVisibilityChangeRequested(void* ptr);
void QWebPage_DisconnectMenuBarVisibilityChangeRequested(void* ptr);
void QWebPage_MenuBarVisibilityChangeRequested(void* ptr, int visible);
void QWebPage_ConnectMicroFocusChanged(void* ptr);
void QWebPage_DisconnectMicroFocusChanged(void* ptr);
void QWebPage_MicroFocusChanged(void* ptr);
void* QWebPage_NetworkAccessManager(void* ptr);
void* QWebPage_PluginFactory(void* ptr);
void QWebPage_ConnectPrintRequested(void* ptr);
void QWebPage_DisconnectPrintRequested(void* ptr);
void QWebPage_PrintRequested(void* ptr, void* frame);
void QWebPage_ConnectRepaintRequested(void* ptr);
void QWebPage_DisconnectRepaintRequested(void* ptr);
void QWebPage_RepaintRequested(void* ptr, void* dirtyRect);
void QWebPage_ConnectRestoreFrameStateRequested(void* ptr);
void QWebPage_DisconnectRestoreFrameStateRequested(void* ptr);
void QWebPage_RestoreFrameStateRequested(void* ptr, void* frame);
void QWebPage_ConnectSaveFrameStateRequested(void* ptr);
void QWebPage_DisconnectSaveFrameStateRequested(void* ptr);
void QWebPage_SaveFrameStateRequested(void* ptr, void* frame, void* item);
void QWebPage_ConnectScrollRequested(void* ptr);
void QWebPage_DisconnectScrollRequested(void* ptr);
void QWebPage_ScrollRequested(void* ptr, int dx, int dy, void* rectToScroll);
void QWebPage_ConnectSelectionChanged(void* ptr);
void QWebPage_DisconnectSelectionChanged(void* ptr);
void QWebPage_SelectionChanged(void* ptr);
void QWebPage_SetNetworkAccessManager(void* ptr, void* manager);
void QWebPage_SetPluginFactory(void* ptr, void* factory);
void QWebPage_SetView(void* ptr, void* view);
void* QWebPage_Settings(void* ptr);
void QWebPage_ConnectStatusBarMessage(void* ptr);
void QWebPage_DisconnectStatusBarMessage(void* ptr);
void QWebPage_StatusBarMessage(void* ptr, char* text);
void QWebPage_ConnectStatusBarVisibilityChangeRequested(void* ptr);
void QWebPage_DisconnectStatusBarVisibilityChangeRequested(void* ptr);
void QWebPage_StatusBarVisibilityChangeRequested(void* ptr, int visible);
char* QWebPage_SupportedContentTypes(void* ptr);
int QWebPage_SupportsContentType(void* ptr, char* mimeType);
int QWebPage_SupportsExtension(void* ptr, int extension);
int QWebPage_SupportsExtensionDefault(void* ptr, int extension);
int QWebPage_SwallowContextMenuEvent(void* ptr, void* event);
void QWebPage_ConnectToolBarVisibilityChangeRequested(void* ptr);
void QWebPage_DisconnectToolBarVisibilityChangeRequested(void* ptr);
void QWebPage_ToolBarVisibilityChangeRequested(void* ptr, int visible);
void QWebPage_TriggerAction(void* ptr, int action, int checked);
void QWebPage_TriggerActionDefault(void* ptr, int action, int checked);
void* QWebPage_UndoStack(void* ptr);
void QWebPage_ConnectUnsupportedContent(void* ptr);
void QWebPage_DisconnectUnsupportedContent(void* ptr);
void QWebPage_UnsupportedContent(void* ptr, void* reply);
void QWebPage_UpdatePositionDependentActions(void* ptr, void* pos);
char* QWebPage_UserAgentForUrl(void* ptr, void* url);
char* QWebPage_UserAgentForUrlDefault(void* ptr, void* url);
void* QWebPage_View(void* ptr);
void QWebPage_ConnectViewportChangeRequested(void* ptr);
void QWebPage_DisconnectViewportChangeRequested(void* ptr);
void QWebPage_ViewportChangeRequested(void* ptr);
void QWebPage_ConnectWindowCloseRequested(void* ptr);
void QWebPage_DisconnectWindowCloseRequested(void* ptr);
void QWebPage_WindowCloseRequested(void* ptr);
void QWebPage_DestroyQWebPage(void* ptr);
void QWebPage_TimerEvent(void* ptr, void* event);
void QWebPage_TimerEventDefault(void* ptr, void* event);
void QWebPage_ChildEvent(void* ptr, void* event);
void QWebPage_ChildEventDefault(void* ptr, void* event);
void QWebPage_ConnectNotify(void* ptr, void* sign);
void QWebPage_ConnectNotifyDefault(void* ptr, void* sign);
void QWebPage_CustomEvent(void* ptr, void* event);
void QWebPage_CustomEventDefault(void* ptr, void* event);
void QWebPage_DeleteLater(void* ptr);
void QWebPage_DeleteLaterDefault(void* ptr);
void QWebPage_DisconnectNotify(void* ptr, void* sign);
void QWebPage_DisconnectNotifyDefault(void* ptr, void* sign);
int QWebPage_EventFilter(void* ptr, void* watched, void* event);
int QWebPage_EventFilterDefault(void* ptr, void* watched, void* event);
void* QWebPage_MetaObject(void* ptr);
void* QWebPage_MetaObjectDefault(void* ptr);
void* QWebPluginFactory_Create(void* ptr, char* mimeType, void* url, char* argumentNames, char* argumentValues);
void QWebPluginFactory_RefreshPlugins(void* ptr);
void QWebPluginFactory_RefreshPluginsDefault(void* ptr);
void QWebPluginFactory_DestroyQWebPluginFactory(void* ptr);
void QWebPluginFactory_TimerEvent(void* ptr, void* event);
void QWebPluginFactory_TimerEventDefault(void* ptr, void* event);
void QWebPluginFactory_ChildEvent(void* ptr, void* event);
void QWebPluginFactory_ChildEventDefault(void* ptr, void* event);
void QWebPluginFactory_ConnectNotify(void* ptr, void* sign);
void QWebPluginFactory_ConnectNotifyDefault(void* ptr, void* sign);
void QWebPluginFactory_CustomEvent(void* ptr, void* event);
void QWebPluginFactory_CustomEventDefault(void* ptr, void* event);
void QWebPluginFactory_DeleteLater(void* ptr);
void QWebPluginFactory_DeleteLaterDefault(void* ptr);
void QWebPluginFactory_DisconnectNotify(void* ptr, void* sign);
void QWebPluginFactory_DisconnectNotifyDefault(void* ptr, void* sign);
int QWebPluginFactory_Event(void* ptr, void* e);
int QWebPluginFactory_EventDefault(void* ptr, void* e);
int QWebPluginFactory_EventFilter(void* ptr, void* watched, void* event);
int QWebPluginFactory_EventFilterDefault(void* ptr, void* watched, void* event);
void* QWebPluginFactory_MetaObject(void* ptr);
void* QWebPluginFactory_MetaObjectDefault(void* ptr);
void QWebSecurityOrigin_SetApplicationCacheQuota(void* ptr, long long quota);
void* QWebSecurityOrigin_NewQWebSecurityOrigin(void* url);
void* QWebSecurityOrigin_NewQWebSecurityOrigin2(void* other);
void QWebSecurityOrigin_AddAccessWhitelistEntry(void* ptr, char* scheme, char* host, int subdomainSetting);
void QWebSecurityOrigin_QWebSecurityOrigin_AddLocalScheme(char* scheme);
long long QWebSecurityOrigin_DatabaseQuota(void* ptr);
long long QWebSecurityOrigin_DatabaseUsage(void* ptr);
char* QWebSecurityOrigin_Host(void* ptr);
char* QWebSecurityOrigin_QWebSecurityOrigin_LocalSchemes();
int QWebSecurityOrigin_Port(void* ptr);
void QWebSecurityOrigin_RemoveAccessWhitelistEntry(void* ptr, char* scheme, char* host, int subdomainSetting);
void QWebSecurityOrigin_QWebSecurityOrigin_RemoveLocalScheme(char* scheme);
char* QWebSecurityOrigin_Scheme(void* ptr);
void QWebSecurityOrigin_SetDatabaseQuota(void* ptr, long long quota);
void QWebSecurityOrigin_DestroyQWebSecurityOrigin(void* ptr);
int QWebSettings_LocalContentCanAccessRemoteUrls_Type();
int QWebSettings_DnsPrefetchEnabled_Type();
int QWebSettings_XSSAuditingEnabled_Type();
int QWebSettings_AcceleratedCompositingEnabled_Type();
int QWebSettings_SpatialNavigationEnabled_Type();
int QWebSettings_LocalContentCanAccessFileUrls_Type();
int QWebSettings_TiledBackingStoreEnabled_Type();
int QWebSettings_FrameFlatteningEnabled_Type();
int QWebSettings_SiteSpecificQuirksEnabled_Type();
int QWebSettings_JavascriptCanCloseWindows_Type();
int QWebSettings_WebGLEnabled_Type();
int QWebSettings_CSSRegionsEnabled_Type();
int QWebSettings_HyperlinkAuditingEnabled_Type();
int QWebSettings_CSSGridLayoutEnabled_Type();
int QWebSettings_ScrollAnimatorEnabled_Type();
int QWebSettings_CaretBrowsingEnabled_Type();
int QWebSettings_NotificationsEnabled_Type();
int QWebSettings_WebAudioEnabled_Type();
int QWebSettings_Accelerated2dCanvasEnabled_Type();
void QWebSettings_ResetAttribute(void* ptr, int attribute);
void QWebSettings_SetAttribute(void* ptr, int attribute, int on);
int QWebSettings_TestAttribute(void* ptr, int attribute);
void QWebSettings_QWebSettings_ClearIconDatabase();
void QWebSettings_QWebSettings_ClearMemoryCaches();
char* QWebSettings_CssMediaType(void* ptr);
char* QWebSettings_DefaultTextEncoding(void* ptr);
void QWebSettings_QWebSettings_EnablePersistentStorage(char* path);
char* QWebSettings_FontFamily(void* ptr, int which);
int QWebSettings_FontSize(void* ptr, int ty);
void* QWebSettings_QWebSettings_GlobalSettings();
char* QWebSettings_QWebSettings_IconDatabasePath();
void* QWebSettings_QWebSettings_IconForUrl(void* url);
char* QWebSettings_LocalStoragePath(void* ptr);
int QWebSettings_QWebSettings_MaximumPagesInCache();
long long QWebSettings_QWebSettings_OfflineStorageDefaultQuota();
char* QWebSettings_QWebSettings_OfflineStoragePath();
char* QWebSettings_QWebSettings_OfflineWebApplicationCachePath();
long long QWebSettings_QWebSettings_OfflineWebApplicationCacheQuota();
void QWebSettings_ResetFontFamily(void* ptr, int which);
void QWebSettings_ResetFontSize(void* ptr, int ty);
void QWebSettings_SetCSSMediaType(void* ptr, char* ty);
void QWebSettings_SetDefaultTextEncoding(void* ptr, char* encoding);
void QWebSettings_SetFontFamily(void* ptr, int which, char* family);
void QWebSettings_SetFontSize(void* ptr, int ty, int size);
void QWebSettings_QWebSettings_SetIconDatabasePath(char* path);
void QWebSettings_SetLocalStoragePath(void* ptr, char* path);
void QWebSettings_QWebSettings_SetMaximumPagesInCache(int pages);
void QWebSettings_QWebSettings_SetObjectCacheCapacities(int cacheMinDeadCapacity, int cacheMaxDead, int totalCapacity);
void QWebSettings_QWebSettings_SetOfflineStorageDefaultQuota(long long maximumSize);
void QWebSettings_QWebSettings_SetOfflineStoragePath(char* path);
void QWebSettings_QWebSettings_SetOfflineWebApplicationCachePath(char* path);
void QWebSettings_QWebSettings_SetOfflineWebApplicationCacheQuota(long long maximumSize);
void QWebSettings_SetThirdPartyCookiePolicy(void* ptr, int policy);
void QWebSettings_SetUserStyleSheetUrl(void* ptr, void* location);
void QWebSettings_QWebSettings_SetWebGraphic(int ty, void* graphic);
int QWebSettings_ThirdPartyCookiePolicy(void* ptr);
void* QWebSettings_UserStyleSheetUrl(void* ptr);
void* QWebSettings_QWebSettings_WebGraphic(int ty);
int QWebView_HasSelection(void* ptr);
void* QWebView_Icon(void* ptr);
int QWebView_IsModified(void* ptr);
void QWebView_Load2(void* ptr, void* request, int operation, char* body);
char* QWebView_SelectedHtml(void* ptr);
char* QWebView_SelectedText(void* ptr);
void QWebView_SetUrl(void* ptr, void* url);
void QWebView_SetZoomFactor(void* ptr, double factor);
char* QWebView_Title(void* ptr);
void* QWebView_Url(void* ptr);
double QWebView_ZoomFactor(void* ptr);
void* QWebView_NewQWebView(void* parent);
void QWebView_Back(void* ptr);
void QWebView_ChangeEvent(void* ptr, void* e);
void QWebView_ChangeEventDefault(void* ptr, void* e);
void QWebView_ContextMenuEvent(void* ptr, void* ev);
void QWebView_ContextMenuEventDefault(void* ptr, void* ev);
void* QWebView_CreateWindow(void* ptr, int ty);
void* QWebView_CreateWindowDefault(void* ptr, int ty);
void QWebView_DragEnterEvent(void* ptr, void* ev);
void QWebView_DragEnterEventDefault(void* ptr, void* ev);
void QWebView_DragLeaveEvent(void* ptr, void* ev);
void QWebView_DragLeaveEventDefault(void* ptr, void* ev);
void QWebView_DragMoveEvent(void* ptr, void* ev);
void QWebView_DragMoveEventDefault(void* ptr, void* ev);
void QWebView_DropEvent(void* ptr, void* ev);
void QWebView_DropEventDefault(void* ptr, void* ev);
int QWebView_Event(void* ptr, void* e);
int QWebView_EventDefault(void* ptr, void* e);
int QWebView_FindText(void* ptr, char* subString, int options);
void QWebView_FocusInEvent(void* ptr, void* ev);
void QWebView_FocusInEventDefault(void* ptr, void* ev);
int QWebView_FocusNextPrevChild(void* ptr, int next);
int QWebView_FocusNextPrevChildDefault(void* ptr, int next);
void QWebView_FocusOutEvent(void* ptr, void* ev);
void QWebView_FocusOutEventDefault(void* ptr, void* ev);
void QWebView_Forward(void* ptr);
void* QWebView_History(void* ptr);
void QWebView_ConnectIconChanged(void* ptr);
void QWebView_DisconnectIconChanged(void* ptr);
void QWebView_IconChanged(void* ptr);
void QWebView_InputMethodEvent(void* ptr, void* e);
void QWebView_InputMethodEventDefault(void* ptr, void* e);
void* QWebView_InputMethodQuery(void* ptr, int property);
void* QWebView_InputMethodQueryDefault(void* ptr, int property);
void QWebView_KeyPressEvent(void* ptr, void* ev);
void QWebView_KeyPressEventDefault(void* ptr, void* ev);
void QWebView_KeyReleaseEvent(void* ptr, void* ev);
void QWebView_KeyReleaseEventDefault(void* ptr, void* ev);
void QWebView_ConnectLinkClicked(void* ptr);
void QWebView_DisconnectLinkClicked(void* ptr);
void QWebView_LinkClicked(void* ptr, void* url);
void QWebView_Load(void* ptr, void* url);
void QWebView_ConnectLoadFinished(void* ptr);
void QWebView_DisconnectLoadFinished(void* ptr);
void QWebView_LoadFinished(void* ptr, int ok);
void QWebView_ConnectLoadProgress(void* ptr);
void QWebView_DisconnectLoadProgress(void* ptr);
void QWebView_LoadProgress(void* ptr, int progress);
void QWebView_ConnectLoadStarted(void* ptr);
void QWebView_DisconnectLoadStarted(void* ptr);
void QWebView_LoadStarted(void* ptr);
void QWebView_MouseDoubleClickEvent(void* ptr, void* ev);
void QWebView_MouseDoubleClickEventDefault(void* ptr, void* ev);
void QWebView_MouseMoveEvent(void* ptr, void* ev);
void QWebView_MouseMoveEventDefault(void* ptr, void* ev);
void QWebView_MousePressEvent(void* ptr, void* ev);
void QWebView_MousePressEventDefault(void* ptr, void* ev);
void QWebView_MouseReleaseEvent(void* ptr, void* ev);
void QWebView_MouseReleaseEventDefault(void* ptr, void* ev);
void* QWebView_Page(void* ptr);
void* QWebView_PageAction(void* ptr, int action);
void QWebView_PaintEvent(void* ptr, void* ev);
void QWebView_PaintEventDefault(void* ptr, void* ev);
void QWebView_Print(void* ptr, void* printer);
void QWebView_Reload(void* ptr);
int QWebView_RenderHints(void* ptr);
void QWebView_ResizeEvent(void* ptr, void* e);
void QWebView_ResizeEventDefault(void* ptr, void* e);
void QWebView_ConnectSelectionChanged(void* ptr);
void QWebView_DisconnectSelectionChanged(void* ptr);
void QWebView_SelectionChanged(void* ptr);
void QWebView_SetContent(void* ptr, char* data, char* mimeType, void* baseUrl);
void QWebView_SetHtml(void* ptr, char* html, void* baseUrl);
void QWebView_SetPage(void* ptr, void* page);
void QWebView_SetRenderHint(void* ptr, int hint, int enabled);
void QWebView_SetRenderHints(void* ptr, int hints);
void QWebView_SetTextSizeMultiplier(void* ptr, double factor);
void* QWebView_Settings(void* ptr);
void* QWebView_SizeHint(void* ptr);
void* QWebView_SizeHintDefault(void* ptr);
void QWebView_ConnectStatusBarMessage(void* ptr);
void QWebView_DisconnectStatusBarMessage(void* ptr);
void QWebView_StatusBarMessage(void* ptr, char* text);
void QWebView_Stop(void* ptr);
double QWebView_TextSizeMultiplier(void* ptr);
void QWebView_ConnectTitleChanged(void* ptr);
void QWebView_DisconnectTitleChanged(void* ptr);
void QWebView_TitleChanged(void* ptr, char* title);
void QWebView_TriggerPageAction(void* ptr, int action, int checked);
void QWebView_ConnectUrlChanged(void* ptr);
void QWebView_DisconnectUrlChanged(void* ptr);
void QWebView_UrlChanged(void* ptr, void* url);
void QWebView_WheelEvent(void* ptr, void* ev);
void QWebView_WheelEventDefault(void* ptr, void* ev);
void QWebView_DestroyQWebView(void* ptr);
void QWebView_ActionEvent(void* ptr, void* event);
void QWebView_ActionEventDefault(void* ptr, void* event);
void QWebView_EnterEvent(void* ptr, void* event);
void QWebView_EnterEventDefault(void* ptr, void* event);
void QWebView_HideEvent(void* ptr, void* event);
void QWebView_HideEventDefault(void* ptr, void* event);
void QWebView_LeaveEvent(void* ptr, void* event);
void QWebView_LeaveEventDefault(void* ptr, void* event);
int QWebView_Metric(void* ptr, int m);
int QWebView_MetricDefault(void* ptr, int m);
void* QWebView_MinimumSizeHint(void* ptr);
void* QWebView_MinimumSizeHintDefault(void* ptr);
void QWebView_MoveEvent(void* ptr, void* event);
void QWebView_MoveEventDefault(void* ptr, void* event);
void* QWebView_PaintEngine(void* ptr);
void* QWebView_PaintEngineDefault(void* ptr);
void QWebView_SetEnabled(void* ptr, int vbo);
void QWebView_SetEnabledDefault(void* ptr, int vbo);
void QWebView_SetStyleSheet(void* ptr, char* styleSheet);
void QWebView_SetStyleSheetDefault(void* ptr, char* styleSheet);
void QWebView_SetVisible(void* ptr, int visible);
void QWebView_SetVisibleDefault(void* ptr, int visible);
void QWebView_SetWindowModified(void* ptr, int vbo);
void QWebView_SetWindowModifiedDefault(void* ptr, int vbo);
void QWebView_SetWindowTitle(void* ptr, char* vqs);
void QWebView_SetWindowTitleDefault(void* ptr, char* vqs);
void QWebView_ShowEvent(void* ptr, void* event);
void QWebView_ShowEventDefault(void* ptr, void* event);
int QWebView_Close(void* ptr);
int QWebView_CloseDefault(void* ptr);
void QWebView_CloseEvent(void* ptr, void* event);
void QWebView_CloseEventDefault(void* ptr, void* event);
int QWebView_HasHeightForWidth(void* ptr);
int QWebView_HasHeightForWidthDefault(void* ptr);
int QWebView_HeightForWidth(void* ptr, int w);
int QWebView_HeightForWidthDefault(void* ptr, int w);
void QWebView_Hide(void* ptr);
void QWebView_HideDefault(void* ptr);
void QWebView_InitPainter(void* ptr, void* painter);
void QWebView_InitPainterDefault(void* ptr, void* painter);
void QWebView_Lower(void* ptr);
void QWebView_LowerDefault(void* ptr);
int QWebView_NativeEvent(void* ptr, char* eventType, void* message, long result);
int QWebView_NativeEventDefault(void* ptr, char* eventType, void* message, long result);
void QWebView_Raise(void* ptr);
void QWebView_RaiseDefault(void* ptr);
void QWebView_Repaint(void* ptr);
void QWebView_RepaintDefault(void* ptr);
void QWebView_SetDisabled(void* ptr, int disable);
void QWebView_SetDisabledDefault(void* ptr, int disable);
void QWebView_SetFocus2(void* ptr);
void QWebView_SetFocus2Default(void* ptr);
void QWebView_SetHidden(void* ptr, int hidden);
void QWebView_SetHiddenDefault(void* ptr, int hidden);
void QWebView_Show(void* ptr);
void QWebView_ShowDefault(void* ptr);
void QWebView_ShowFullScreen(void* ptr);
void QWebView_ShowFullScreenDefault(void* ptr);
void QWebView_ShowMaximized(void* ptr);
void QWebView_ShowMaximizedDefault(void* ptr);
void QWebView_ShowMinimized(void* ptr);
void QWebView_ShowMinimizedDefault(void* ptr);
void QWebView_ShowNormal(void* ptr);
void QWebView_ShowNormalDefault(void* ptr);
void QWebView_TabletEvent(void* ptr, void* event);
void QWebView_TabletEventDefault(void* ptr, void* event);
void QWebView_Update(void* ptr);
void QWebView_UpdateDefault(void* ptr);
void QWebView_UpdateMicroFocus(void* ptr);
void QWebView_UpdateMicroFocusDefault(void* ptr);
void QWebView_TimerEvent(void* ptr, void* event);
void QWebView_TimerEventDefault(void* ptr, void* event);
void QWebView_ChildEvent(void* ptr, void* event);
void QWebView_ChildEventDefault(void* ptr, void* event);
void QWebView_ConnectNotify(void* ptr, void* sign);
void QWebView_ConnectNotifyDefault(void* ptr, void* sign);
void QWebView_CustomEvent(void* ptr, void* event);
void QWebView_CustomEventDefault(void* ptr, void* event);
void QWebView_DeleteLater(void* ptr);
void QWebView_DeleteLaterDefault(void* ptr);
void QWebView_DisconnectNotify(void* ptr, void* sign);
void QWebView_DisconnectNotifyDefault(void* ptr, void* sign);
int QWebView_EventFilter(void* ptr, void* watched, void* event);
int QWebView_EventFilterDefault(void* ptr, void* watched, void* event);
void* QWebView_MetaObject(void* ptr);
void* QWebView_MetaObjectDefault(void* ptr);

#ifdef __cplusplus
}
#endif

#endif