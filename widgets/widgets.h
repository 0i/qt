#pragma once

#ifndef GO_QTWIDGETS_H
#define GO_QTWIDGETS_H

#ifdef __cplusplus
extern "C" {
#endif

int QAbstractButton_AutoExclusive(void* ptr);
int QAbstractButton_AutoRepeat(void* ptr);
int QAbstractButton_AutoRepeatDelay(void* ptr);
int QAbstractButton_AutoRepeatInterval(void* ptr);
void* QAbstractButton_Icon(void* ptr);
void* QAbstractButton_IconSize(void* ptr);
int QAbstractButton_IsCheckable(void* ptr);
int QAbstractButton_IsChecked(void* ptr);
int QAbstractButton_IsDown(void* ptr);
void QAbstractButton_SetAutoExclusive(void* ptr, int v);
void QAbstractButton_SetAutoRepeat(void* ptr, int v);
void QAbstractButton_SetAutoRepeatDelay(void* ptr, int v);
void QAbstractButton_SetAutoRepeatInterval(void* ptr, int v);
void QAbstractButton_SetCheckable(void* ptr, int v);
void QAbstractButton_SetChecked(void* ptr, int v);
void QAbstractButton_SetDown(void* ptr, int v);
void QAbstractButton_SetIcon(void* ptr, void* icon);
void QAbstractButton_SetIconSize(void* ptr, void* size);
void QAbstractButton_SetShortcut(void* ptr, void* key);
void QAbstractButton_SetText(void* ptr, char* text);
char* QAbstractButton_Text(void* ptr);
void QAbstractButton_Toggle(void* ptr);
void QAbstractButton_AnimateClick(void* ptr, int msec);
void QAbstractButton_ChangeEvent(void* ptr, void* e);
void QAbstractButton_ChangeEventDefault(void* ptr, void* e);
void QAbstractButton_CheckStateSet(void* ptr);
void QAbstractButton_CheckStateSetDefault(void* ptr);
void QAbstractButton_Click(void* ptr);
void QAbstractButton_ConnectClicked(void* ptr);
void QAbstractButton_DisconnectClicked(void* ptr);
void QAbstractButton_Clicked(void* ptr, int checked);
int QAbstractButton_Event(void* ptr, void* e);
int QAbstractButton_EventDefault(void* ptr, void* e);
void QAbstractButton_FocusInEvent(void* ptr, void* e);
void QAbstractButton_FocusInEventDefault(void* ptr, void* e);
void QAbstractButton_FocusOutEvent(void* ptr, void* e);
void QAbstractButton_FocusOutEventDefault(void* ptr, void* e);
void* QAbstractButton_Group(void* ptr);
int QAbstractButton_HitButton(void* ptr, void* pos);
int QAbstractButton_HitButtonDefault(void* ptr, void* pos);
void QAbstractButton_KeyPressEvent(void* ptr, void* e);
void QAbstractButton_KeyPressEventDefault(void* ptr, void* e);
void QAbstractButton_KeyReleaseEvent(void* ptr, void* e);
void QAbstractButton_KeyReleaseEventDefault(void* ptr, void* e);
void QAbstractButton_MouseMoveEvent(void* ptr, void* e);
void QAbstractButton_MouseMoveEventDefault(void* ptr, void* e);
void QAbstractButton_MousePressEvent(void* ptr, void* e);
void QAbstractButton_MousePressEventDefault(void* ptr, void* e);
void QAbstractButton_MouseReleaseEvent(void* ptr, void* e);
void QAbstractButton_MouseReleaseEventDefault(void* ptr, void* e);
void QAbstractButton_NextCheckState(void* ptr);
void QAbstractButton_NextCheckStateDefault(void* ptr);
void QAbstractButton_ConnectPressed(void* ptr);
void QAbstractButton_DisconnectPressed(void* ptr);
void QAbstractButton_Pressed(void* ptr);
void QAbstractButton_ConnectReleased(void* ptr);
void QAbstractButton_DisconnectReleased(void* ptr);
void QAbstractButton_Released(void* ptr);
void QAbstractButton_TimerEvent(void* ptr, void* e);
void QAbstractButton_TimerEventDefault(void* ptr, void* e);
void QAbstractButton_ConnectToggled(void* ptr);
void QAbstractButton_DisconnectToggled(void* ptr);
void QAbstractButton_Toggled(void* ptr, int checked);
void QAbstractButton_DestroyQAbstractButton(void* ptr);
void QAbstractButton_ActionEvent(void* ptr, void* event);
void QAbstractButton_ActionEventDefault(void* ptr, void* event);
void QAbstractButton_DragEnterEvent(void* ptr, void* event);
void QAbstractButton_DragEnterEventDefault(void* ptr, void* event);
void QAbstractButton_DragLeaveEvent(void* ptr, void* event);
void QAbstractButton_DragLeaveEventDefault(void* ptr, void* event);
void QAbstractButton_DragMoveEvent(void* ptr, void* event);
void QAbstractButton_DragMoveEventDefault(void* ptr, void* event);
void QAbstractButton_DropEvent(void* ptr, void* event);
void QAbstractButton_DropEventDefault(void* ptr, void* event);
void QAbstractButton_EnterEvent(void* ptr, void* event);
void QAbstractButton_EnterEventDefault(void* ptr, void* event);
void QAbstractButton_HideEvent(void* ptr, void* event);
void QAbstractButton_HideEventDefault(void* ptr, void* event);
void QAbstractButton_LeaveEvent(void* ptr, void* event);
void QAbstractButton_LeaveEventDefault(void* ptr, void* event);
void QAbstractButton_MoveEvent(void* ptr, void* event);
void QAbstractButton_MoveEventDefault(void* ptr, void* event);
void QAbstractButton_SetVisible(void* ptr, int visible);
void QAbstractButton_SetVisibleDefault(void* ptr, int visible);
void QAbstractButton_ShowEvent(void* ptr, void* event);
void QAbstractButton_ShowEventDefault(void* ptr, void* event);
void QAbstractButton_CloseEvent(void* ptr, void* event);
void QAbstractButton_CloseEventDefault(void* ptr, void* event);
void QAbstractButton_ContextMenuEvent(void* ptr, void* event);
void QAbstractButton_ContextMenuEventDefault(void* ptr, void* event);
void QAbstractButton_InitPainter(void* ptr, void* painter);
void QAbstractButton_InitPainterDefault(void* ptr, void* painter);
void QAbstractButton_InputMethodEvent(void* ptr, void* event);
void QAbstractButton_InputMethodEventDefault(void* ptr, void* event);
void QAbstractButton_MouseDoubleClickEvent(void* ptr, void* event);
void QAbstractButton_MouseDoubleClickEventDefault(void* ptr, void* event);
void QAbstractButton_ResizeEvent(void* ptr, void* event);
void QAbstractButton_ResizeEventDefault(void* ptr, void* event);
void QAbstractButton_TabletEvent(void* ptr, void* event);
void QAbstractButton_TabletEventDefault(void* ptr, void* event);
void QAbstractButton_WheelEvent(void* ptr, void* event);
void QAbstractButton_WheelEventDefault(void* ptr, void* event);
void QAbstractButton_ChildEvent(void* ptr, void* event);
void QAbstractButton_ChildEventDefault(void* ptr, void* event);
void QAbstractButton_CustomEvent(void* ptr, void* event);
void QAbstractButton_CustomEventDefault(void* ptr, void* event);
void* QAbstractGraphicsShapeItem_Brush(void* ptr);
int QAbstractGraphicsShapeItem_IsObscuredBy(void* ptr, void* item);
int QAbstractGraphicsShapeItem_IsObscuredByDefault(void* ptr, void* item);
void QAbstractGraphicsShapeItem_SetBrush(void* ptr, void* brush);
void QAbstractGraphicsShapeItem_SetPen(void* ptr, void* pen);
void QAbstractGraphicsShapeItem_DestroyQAbstractGraphicsShapeItem(void* ptr);
char* QAbstractGraphicsShapeItem_ObjectNameAbs(void* ptr);
void QAbstractGraphicsShapeItem_SetObjectNameAbs(void* ptr, char* name);
void QAbstractItemDelegate_ConnectCloseEditor(void* ptr);
void QAbstractItemDelegate_DisconnectCloseEditor(void* ptr);
void QAbstractItemDelegate_CloseEditor(void* ptr, void* editor, int hint);
void QAbstractItemDelegate_ConnectCommitData(void* ptr);
void QAbstractItemDelegate_DisconnectCommitData(void* ptr);
void QAbstractItemDelegate_CommitData(void* ptr, void* editor);
void* QAbstractItemDelegate_CreateEditor(void* ptr, void* parent, void* option, void* index);
void* QAbstractItemDelegate_CreateEditorDefault(void* ptr, void* parent, void* option, void* index);
void QAbstractItemDelegate_DestroyEditor(void* ptr, void* editor, void* index);
void QAbstractItemDelegate_DestroyEditorDefault(void* ptr, void* editor, void* index);
int QAbstractItemDelegate_EditorEvent(void* ptr, void* event, void* model, void* option, void* index);
int QAbstractItemDelegate_EditorEventDefault(void* ptr, void* event, void* model, void* option, void* index);
int QAbstractItemDelegate_HelpEvent(void* ptr, void* event, void* view, void* option, void* index);
int QAbstractItemDelegate_HelpEventDefault(void* ptr, void* event, void* view, void* option, void* index);
void QAbstractItemDelegate_Paint(void* ptr, void* painter, void* option, void* index);
void QAbstractItemDelegate_SetEditorData(void* ptr, void* editor, void* index);
void QAbstractItemDelegate_SetEditorDataDefault(void* ptr, void* editor, void* index);
void QAbstractItemDelegate_SetModelData(void* ptr, void* editor, void* model, void* index);
void QAbstractItemDelegate_SetModelDataDefault(void* ptr, void* editor, void* model, void* index);
void* QAbstractItemDelegate_SizeHint(void* ptr, void* option, void* index);
void QAbstractItemDelegate_ConnectSizeHintChanged(void* ptr);
void QAbstractItemDelegate_DisconnectSizeHintChanged(void* ptr);
void QAbstractItemDelegate_SizeHintChanged(void* ptr, void* index);
void QAbstractItemDelegate_DestroyQAbstractItemDelegate(void* ptr);
void QAbstractItemDelegate_TimerEvent(void* ptr, void* event);
void QAbstractItemDelegate_TimerEventDefault(void* ptr, void* event);
void QAbstractItemDelegate_ChildEvent(void* ptr, void* event);
void QAbstractItemDelegate_ChildEventDefault(void* ptr, void* event);
void QAbstractItemDelegate_CustomEvent(void* ptr, void* event);
void QAbstractItemDelegate_CustomEventDefault(void* ptr, void* event);
int QAbstractItemView_AlternatingRowColors(void* ptr);
int QAbstractItemView_AutoScrollMargin(void* ptr);
int QAbstractItemView_DefaultDropAction(void* ptr);
int QAbstractItemView_DragDropMode(void* ptr);
int QAbstractItemView_DragDropOverwriteMode(void* ptr);
int QAbstractItemView_DragEnabled(void* ptr);
void QAbstractItemView_DragLeaveEvent(void* ptr, void* event);
void QAbstractItemView_DragLeaveEventDefault(void* ptr, void* event);
int QAbstractItemView_EditTriggers(void* ptr);
int QAbstractItemView_HasAutoScroll(void* ptr);
int QAbstractItemView_HorizontalScrollMode(void* ptr);
void* QAbstractItemView_IconSize(void* ptr);
int QAbstractItemView_SelectionBehavior(void* ptr);
int QAbstractItemView_SelectionMode(void* ptr);
void QAbstractItemView_SetAlternatingRowColors(void* ptr, int enable);
void QAbstractItemView_SetAutoScroll(void* ptr, int enable);
void QAbstractItemView_SetAutoScrollMargin(void* ptr, int margin);
void QAbstractItemView_SetDefaultDropAction(void* ptr, int dropAction);
void QAbstractItemView_SetDragDropMode(void* ptr, int behavior);
void QAbstractItemView_SetDragDropOverwriteMode(void* ptr, int overwrite);
void QAbstractItemView_SetDragEnabled(void* ptr, int enable);
void QAbstractItemView_SetDropIndicatorShown(void* ptr, int enable);
void QAbstractItemView_SetEditTriggers(void* ptr, int triggers);
void QAbstractItemView_SetHorizontalScrollMode(void* ptr, int mode);
void QAbstractItemView_SetIconSize(void* ptr, void* size);
void QAbstractItemView_SetSelectionBehavior(void* ptr, int behavior);
void QAbstractItemView_SetSelectionMode(void* ptr, int mode);
void QAbstractItemView_SetTabKeyNavigation(void* ptr, int enable);
void QAbstractItemView_SetTextElideMode(void* ptr, int mode);
void QAbstractItemView_SetVerticalScrollMode(void* ptr, int mode);
int QAbstractItemView_ShowDropIndicator(void* ptr);
int QAbstractItemView_TabKeyNavigation(void* ptr);
int QAbstractItemView_TextElideMode(void* ptr);
int QAbstractItemView_VerticalScrollMode(void* ptr);
int QAbstractItemView_ViewportEvent(void* ptr, void* event);
int QAbstractItemView_ViewportEventDefault(void* ptr, void* event);
void QAbstractItemView_ConnectActivated(void* ptr);
void QAbstractItemView_DisconnectActivated(void* ptr);
void QAbstractItemView_Activated(void* ptr, void* index);
void QAbstractItemView_ClearSelection(void* ptr);
void QAbstractItemView_ConnectClicked(void* ptr);
void QAbstractItemView_DisconnectClicked(void* ptr);
void QAbstractItemView_Clicked(void* ptr, void* index);
void QAbstractItemView_CloseEditor(void* ptr, void* editor, int hint);
void QAbstractItemView_CloseEditorDefault(void* ptr, void* editor, int hint);
void QAbstractItemView_ClosePersistentEditor(void* ptr, void* index);
void QAbstractItemView_CommitData(void* ptr, void* editor);
void QAbstractItemView_CommitDataDefault(void* ptr, void* editor);
void QAbstractItemView_CurrentChanged(void* ptr, void* current, void* previous);
void QAbstractItemView_CurrentChangedDefault(void* ptr, void* current, void* previous);
void* QAbstractItemView_CurrentIndex(void* ptr);
void QAbstractItemView_ConnectDoubleClicked(void* ptr);
void QAbstractItemView_DisconnectDoubleClicked(void* ptr);
void QAbstractItemView_DoubleClicked(void* ptr, void* index);
void QAbstractItemView_DragEnterEvent(void* ptr, void* event);
void QAbstractItemView_DragEnterEventDefault(void* ptr, void* event);
void QAbstractItemView_DragMoveEvent(void* ptr, void* event);
void QAbstractItemView_DragMoveEventDefault(void* ptr, void* event);
void QAbstractItemView_DropEvent(void* ptr, void* event);
void QAbstractItemView_DropEventDefault(void* ptr, void* event);
void QAbstractItemView_Edit(void* ptr, void* index);
void QAbstractItemView_EditorDestroyed(void* ptr, void* editor);
void QAbstractItemView_EditorDestroyedDefault(void* ptr, void* editor);
void QAbstractItemView_ConnectEntered(void* ptr);
void QAbstractItemView_DisconnectEntered(void* ptr);
void QAbstractItemView_Entered(void* ptr, void* index);
int QAbstractItemView_Event(void* ptr, void* event);
int QAbstractItemView_EventDefault(void* ptr, void* event);
void QAbstractItemView_FocusInEvent(void* ptr, void* event);
void QAbstractItemView_FocusInEventDefault(void* ptr, void* event);
int QAbstractItemView_FocusNextPrevChild(void* ptr, int next);
int QAbstractItemView_FocusNextPrevChildDefault(void* ptr, int next);
void QAbstractItemView_FocusOutEvent(void* ptr, void* event);
void QAbstractItemView_FocusOutEventDefault(void* ptr, void* event);
void QAbstractItemView_ConnectIconSizeChanged(void* ptr);
void QAbstractItemView_DisconnectIconSizeChanged(void* ptr);
void QAbstractItemView_IconSizeChanged(void* ptr, void* size);
void* QAbstractItemView_IndexAt(void* ptr, void* point);
void* QAbstractItemView_IndexWidget(void* ptr, void* index);
void QAbstractItemView_InputMethodEvent(void* ptr, void* event);
void QAbstractItemView_InputMethodEventDefault(void* ptr, void* event);
void* QAbstractItemView_InputMethodQuery(void* ptr, int query);
void* QAbstractItemView_InputMethodQueryDefault(void* ptr, int query);
void* QAbstractItemView_ItemDelegate(void* ptr);
void* QAbstractItemView_ItemDelegate2(void* ptr, void* index);
void* QAbstractItemView_ItemDelegateForColumn(void* ptr, int column);
void* QAbstractItemView_ItemDelegateForRow(void* ptr, int row);
void QAbstractItemView_KeyPressEvent(void* ptr, void* event);
void QAbstractItemView_KeyPressEventDefault(void* ptr, void* event);
void QAbstractItemView_KeyboardSearch(void* ptr, char* search);
void QAbstractItemView_KeyboardSearchDefault(void* ptr, char* search);
void* QAbstractItemView_Model(void* ptr);
void QAbstractItemView_MouseDoubleClickEvent(void* ptr, void* event);
void QAbstractItemView_MouseDoubleClickEventDefault(void* ptr, void* event);
void QAbstractItemView_MouseMoveEvent(void* ptr, void* event);
void QAbstractItemView_MouseMoveEventDefault(void* ptr, void* event);
void QAbstractItemView_MousePressEvent(void* ptr, void* event);
void QAbstractItemView_MousePressEventDefault(void* ptr, void* event);
void QAbstractItemView_MouseReleaseEvent(void* ptr, void* event);
void QAbstractItemView_MouseReleaseEventDefault(void* ptr, void* event);
void QAbstractItemView_OpenPersistentEditor(void* ptr, void* index);
void QAbstractItemView_ConnectPressed(void* ptr);
void QAbstractItemView_DisconnectPressed(void* ptr);
void QAbstractItemView_Pressed(void* ptr, void* index);
void QAbstractItemView_Reset(void* ptr);
void QAbstractItemView_ResetDefault(void* ptr);
void QAbstractItemView_ResizeEvent(void* ptr, void* event);
void QAbstractItemView_ResizeEventDefault(void* ptr, void* event);
void* QAbstractItemView_RootIndex(void* ptr);
void QAbstractItemView_RowsAboutToBeRemoved(void* ptr, void* parent, int start, int end);
void QAbstractItemView_RowsAboutToBeRemovedDefault(void* ptr, void* parent, int start, int end);
void QAbstractItemView_RowsInserted(void* ptr, void* parent, int start, int end);
void QAbstractItemView_RowsInsertedDefault(void* ptr, void* parent, int start, int end);
void QAbstractItemView_ScrollTo(void* ptr, void* index, int hint);
void QAbstractItemView_ScrollToBottom(void* ptr);
void QAbstractItemView_ScrollToTop(void* ptr);
void QAbstractItemView_SelectAll(void* ptr);
void QAbstractItemView_SelectAllDefault(void* ptr);
int QAbstractItemView_SelectionCommand(void* ptr, void* index, void* event);
int QAbstractItemView_SelectionCommandDefault(void* ptr, void* index, void* event);
void* QAbstractItemView_SelectionModel(void* ptr);
void QAbstractItemView_SetCurrentIndex(void* ptr, void* index);
void QAbstractItemView_SetIndexWidget(void* ptr, void* index, void* widget);
void QAbstractItemView_SetItemDelegate(void* ptr, void* delegate);
void QAbstractItemView_SetItemDelegateForColumn(void* ptr, int column, void* delegate);
void QAbstractItemView_SetItemDelegateForRow(void* ptr, int row, void* delegate);
void QAbstractItemView_SetModel(void* ptr, void* model);
void QAbstractItemView_SetModelDefault(void* ptr, void* model);
void QAbstractItemView_SetRootIndex(void* ptr, void* index);
void QAbstractItemView_SetRootIndexDefault(void* ptr, void* index);
void QAbstractItemView_SetSelectionModel(void* ptr, void* selectionModel);
void QAbstractItemView_SetSelectionModelDefault(void* ptr, void* selectionModel);
int QAbstractItemView_SizeHintForColumn(void* ptr, int column);
int QAbstractItemView_SizeHintForColumnDefault(void* ptr, int column);
void* QAbstractItemView_SizeHintForIndex(void* ptr, void* index);
int QAbstractItemView_SizeHintForRow(void* ptr, int row);
int QAbstractItemView_SizeHintForRowDefault(void* ptr, int row);
void QAbstractItemView_StartDrag(void* ptr, int supportedActions);
void QAbstractItemView_StartDragDefault(void* ptr, int supportedActions);
void QAbstractItemView_TimerEvent(void* ptr, void* event);
void QAbstractItemView_TimerEventDefault(void* ptr, void* event);
void QAbstractItemView_Update(void* ptr, void* index);
void QAbstractItemView_UpdateGeometries(void* ptr);
void QAbstractItemView_UpdateGeometriesDefault(void* ptr);
void QAbstractItemView_ConnectViewportEntered(void* ptr);
void QAbstractItemView_DisconnectViewportEntered(void* ptr);
void QAbstractItemView_ViewportEntered(void* ptr);
void* QAbstractItemView_ViewportSizeHint(void* ptr);
void* QAbstractItemView_ViewportSizeHintDefault(void* ptr);
void* QAbstractItemView_VisualRect(void* ptr, void* index);
void QAbstractItemView_DestroyQAbstractItemView(void* ptr);
void QAbstractItemView_PaintEvent(void* ptr, void* event);
void QAbstractItemView_PaintEventDefault(void* ptr, void* event);
void QAbstractItemView_ContextMenuEvent(void* ptr, void* e);
void QAbstractItemView_ContextMenuEventDefault(void* ptr, void* e);
void QAbstractItemView_ScrollContentsBy(void* ptr, int dx, int dy);
void QAbstractItemView_ScrollContentsByDefault(void* ptr, int dx, int dy);
void QAbstractItemView_SetupViewport(void* ptr, void* viewport);
void QAbstractItemView_SetupViewportDefault(void* ptr, void* viewport);
void QAbstractItemView_WheelEvent(void* ptr, void* e);
void QAbstractItemView_WheelEventDefault(void* ptr, void* e);
void QAbstractItemView_ChangeEvent(void* ptr, void* ev);
void QAbstractItemView_ChangeEventDefault(void* ptr, void* ev);
void QAbstractItemView_ActionEvent(void* ptr, void* event);
void QAbstractItemView_ActionEventDefault(void* ptr, void* event);
void QAbstractItemView_EnterEvent(void* ptr, void* event);
void QAbstractItemView_EnterEventDefault(void* ptr, void* event);
void QAbstractItemView_HideEvent(void* ptr, void* event);
void QAbstractItemView_HideEventDefault(void* ptr, void* event);
void QAbstractItemView_LeaveEvent(void* ptr, void* event);
void QAbstractItemView_LeaveEventDefault(void* ptr, void* event);
void QAbstractItemView_MoveEvent(void* ptr, void* event);
void QAbstractItemView_MoveEventDefault(void* ptr, void* event);
void QAbstractItemView_SetVisible(void* ptr, int visible);
void QAbstractItemView_SetVisibleDefault(void* ptr, int visible);
void QAbstractItemView_ShowEvent(void* ptr, void* event);
void QAbstractItemView_ShowEventDefault(void* ptr, void* event);
void QAbstractItemView_CloseEvent(void* ptr, void* event);
void QAbstractItemView_CloseEventDefault(void* ptr, void* event);
void QAbstractItemView_InitPainter(void* ptr, void* painter);
void QAbstractItemView_InitPainterDefault(void* ptr, void* painter);
void QAbstractItemView_KeyReleaseEvent(void* ptr, void* event);
void QAbstractItemView_KeyReleaseEventDefault(void* ptr, void* event);
void QAbstractItemView_TabletEvent(void* ptr, void* event);
void QAbstractItemView_TabletEventDefault(void* ptr, void* event);
void QAbstractItemView_ChildEvent(void* ptr, void* event);
void QAbstractItemView_ChildEventDefault(void* ptr, void* event);
void QAbstractItemView_CustomEvent(void* ptr, void* event);
void QAbstractItemView_CustomEventDefault(void* ptr, void* event);
void QAbstractScrollArea_DragEnterEvent(void* ptr, void* event);
void QAbstractScrollArea_DragEnterEventDefault(void* ptr, void* event);
void QAbstractScrollArea_DragLeaveEvent(void* ptr, void* event);
void QAbstractScrollArea_DragLeaveEventDefault(void* ptr, void* event);
void QAbstractScrollArea_DragMoveEvent(void* ptr, void* event);
void QAbstractScrollArea_DragMoveEventDefault(void* ptr, void* event);
void QAbstractScrollArea_DropEvent(void* ptr, void* event);
void QAbstractScrollArea_DropEventDefault(void* ptr, void* event);
int QAbstractScrollArea_Event(void* ptr, void* event);
int QAbstractScrollArea_EventDefault(void* ptr, void* event);
int QAbstractScrollArea_HorizontalScrollBarPolicy(void* ptr);
void QAbstractScrollArea_PaintEvent(void* ptr, void* event);
void QAbstractScrollArea_PaintEventDefault(void* ptr, void* event);
void QAbstractScrollArea_ResizeEvent(void* ptr, void* event);
void QAbstractScrollArea_ResizeEventDefault(void* ptr, void* event);
void QAbstractScrollArea_SetHorizontalScrollBarPolicy(void* ptr, int v);
void QAbstractScrollArea_SetSizeAdjustPolicy(void* ptr, int policy);
void QAbstractScrollArea_SetVerticalScrollBarPolicy(void* ptr, int v);
int QAbstractScrollArea_SizeAdjustPolicy(void* ptr);
int QAbstractScrollArea_VerticalScrollBarPolicy(void* ptr);
int QAbstractScrollArea_ViewportEvent(void* ptr, void* event);
int QAbstractScrollArea_ViewportEventDefault(void* ptr, void* event);
void* QAbstractScrollArea_NewQAbstractScrollArea(void* parent);
void QAbstractScrollArea_AddScrollBarWidget(void* ptr, void* widget, int alignment);
void QAbstractScrollArea_ContextMenuEvent(void* ptr, void* e);
void QAbstractScrollArea_ContextMenuEventDefault(void* ptr, void* e);
void* QAbstractScrollArea_CornerWidget(void* ptr);
void* QAbstractScrollArea_HorizontalScrollBar(void* ptr);
void QAbstractScrollArea_KeyPressEvent(void* ptr, void* e);
void QAbstractScrollArea_KeyPressEventDefault(void* ptr, void* e);
void* QAbstractScrollArea_MaximumViewportSize(void* ptr);
void* QAbstractScrollArea_MinimumSizeHint(void* ptr);
void* QAbstractScrollArea_MinimumSizeHintDefault(void* ptr);
void QAbstractScrollArea_MouseDoubleClickEvent(void* ptr, void* e);
void QAbstractScrollArea_MouseDoubleClickEventDefault(void* ptr, void* e);
void QAbstractScrollArea_MouseMoveEvent(void* ptr, void* e);
void QAbstractScrollArea_MouseMoveEventDefault(void* ptr, void* e);
void QAbstractScrollArea_MousePressEvent(void* ptr, void* e);
void QAbstractScrollArea_MousePressEventDefault(void* ptr, void* e);
void QAbstractScrollArea_MouseReleaseEvent(void* ptr, void* e);
void QAbstractScrollArea_MouseReleaseEventDefault(void* ptr, void* e);
void QAbstractScrollArea_ScrollContentsBy(void* ptr, int dx, int dy);
void QAbstractScrollArea_ScrollContentsByDefault(void* ptr, int dx, int dy);
void QAbstractScrollArea_SetCornerWidget(void* ptr, void* widget);
void QAbstractScrollArea_SetHorizontalScrollBar(void* ptr, void* scrollBar);
void QAbstractScrollArea_SetVerticalScrollBar(void* ptr, void* scrollBar);
void QAbstractScrollArea_SetViewport(void* ptr, void* widget);
void QAbstractScrollArea_SetupViewport(void* ptr, void* viewport);
void QAbstractScrollArea_SetupViewportDefault(void* ptr, void* viewport);
void* QAbstractScrollArea_SizeHint(void* ptr);
void* QAbstractScrollArea_SizeHintDefault(void* ptr);
void* QAbstractScrollArea_VerticalScrollBar(void* ptr);
void* QAbstractScrollArea_Viewport(void* ptr);
void* QAbstractScrollArea_ViewportSizeHint(void* ptr);
void* QAbstractScrollArea_ViewportSizeHintDefault(void* ptr);
void QAbstractScrollArea_WheelEvent(void* ptr, void* e);
void QAbstractScrollArea_WheelEventDefault(void* ptr, void* e);
void QAbstractScrollArea_DestroyQAbstractScrollArea(void* ptr);
void QAbstractScrollArea_ChangeEvent(void* ptr, void* ev);
void QAbstractScrollArea_ChangeEventDefault(void* ptr, void* ev);
void QAbstractScrollArea_ActionEvent(void* ptr, void* event);
void QAbstractScrollArea_ActionEventDefault(void* ptr, void* event);
void QAbstractScrollArea_EnterEvent(void* ptr, void* event);
void QAbstractScrollArea_EnterEventDefault(void* ptr, void* event);
void QAbstractScrollArea_FocusInEvent(void* ptr, void* event);
void QAbstractScrollArea_FocusInEventDefault(void* ptr, void* event);
void QAbstractScrollArea_FocusOutEvent(void* ptr, void* event);
void QAbstractScrollArea_FocusOutEventDefault(void* ptr, void* event);
void QAbstractScrollArea_HideEvent(void* ptr, void* event);
void QAbstractScrollArea_HideEventDefault(void* ptr, void* event);
void QAbstractScrollArea_LeaveEvent(void* ptr, void* event);
void QAbstractScrollArea_LeaveEventDefault(void* ptr, void* event);
void QAbstractScrollArea_MoveEvent(void* ptr, void* event);
void QAbstractScrollArea_MoveEventDefault(void* ptr, void* event);
void QAbstractScrollArea_SetVisible(void* ptr, int visible);
void QAbstractScrollArea_SetVisibleDefault(void* ptr, int visible);
void QAbstractScrollArea_ShowEvent(void* ptr, void* event);
void QAbstractScrollArea_ShowEventDefault(void* ptr, void* event);
void QAbstractScrollArea_CloseEvent(void* ptr, void* event);
void QAbstractScrollArea_CloseEventDefault(void* ptr, void* event);
void QAbstractScrollArea_InitPainter(void* ptr, void* painter);
void QAbstractScrollArea_InitPainterDefault(void* ptr, void* painter);
void QAbstractScrollArea_InputMethodEvent(void* ptr, void* event);
void QAbstractScrollArea_InputMethodEventDefault(void* ptr, void* event);
void QAbstractScrollArea_KeyReleaseEvent(void* ptr, void* event);
void QAbstractScrollArea_KeyReleaseEventDefault(void* ptr, void* event);
void QAbstractScrollArea_TabletEvent(void* ptr, void* event);
void QAbstractScrollArea_TabletEventDefault(void* ptr, void* event);
void QAbstractScrollArea_TimerEvent(void* ptr, void* event);
void QAbstractScrollArea_TimerEventDefault(void* ptr, void* event);
void QAbstractScrollArea_ChildEvent(void* ptr, void* event);
void QAbstractScrollArea_ChildEventDefault(void* ptr, void* event);
void QAbstractScrollArea_CustomEvent(void* ptr, void* event);
void QAbstractScrollArea_CustomEventDefault(void* ptr, void* event);
int QAbstractSlider_HasTracking(void* ptr);
int QAbstractSlider_InvertedAppearance(void* ptr);
int QAbstractSlider_InvertedControls(void* ptr);
int QAbstractSlider_IsSliderDown(void* ptr);
int QAbstractSlider_Maximum(void* ptr);
int QAbstractSlider_Minimum(void* ptr);
int QAbstractSlider_Orientation(void* ptr);
int QAbstractSlider_PageStep(void* ptr);
void QAbstractSlider_SetInvertedAppearance(void* ptr, int v);
void QAbstractSlider_SetInvertedControls(void* ptr, int v);
void QAbstractSlider_SetMaximum(void* ptr, int v);
void QAbstractSlider_SetMinimum(void* ptr, int v);
void QAbstractSlider_SetOrientation(void* ptr, int v);
void QAbstractSlider_SetPageStep(void* ptr, int v);
void QAbstractSlider_SetSingleStep(void* ptr, int v);
void QAbstractSlider_SetSliderDown(void* ptr, int v);
void QAbstractSlider_SetSliderPosition(void* ptr, int v);
void QAbstractSlider_SetTracking(void* ptr, int enable);
void QAbstractSlider_SetValue(void* ptr, int v);
int QAbstractSlider_SingleStep(void* ptr);
int QAbstractSlider_SliderPosition(void* ptr);
int QAbstractSlider_Value(void* ptr);
void* QAbstractSlider_NewQAbstractSlider(void* parent);
void QAbstractSlider_ConnectActionTriggered(void* ptr);
void QAbstractSlider_DisconnectActionTriggered(void* ptr);
void QAbstractSlider_ActionTriggered(void* ptr, int action);
void QAbstractSlider_ChangeEvent(void* ptr, void* ev);
void QAbstractSlider_ChangeEventDefault(void* ptr, void* ev);
int QAbstractSlider_Event(void* ptr, void* e);
int QAbstractSlider_EventDefault(void* ptr, void* e);
void QAbstractSlider_KeyPressEvent(void* ptr, void* ev);
void QAbstractSlider_KeyPressEventDefault(void* ptr, void* ev);
void QAbstractSlider_ConnectRangeChanged(void* ptr);
void QAbstractSlider_DisconnectRangeChanged(void* ptr);
void QAbstractSlider_RangeChanged(void* ptr, int min, int max);
void QAbstractSlider_SetRange(void* ptr, int min, int max);
void QAbstractSlider_SliderChange(void* ptr, int change);
void QAbstractSlider_SliderChangeDefault(void* ptr, int change);
void QAbstractSlider_ConnectSliderMoved(void* ptr);
void QAbstractSlider_DisconnectSliderMoved(void* ptr);
void QAbstractSlider_SliderMoved(void* ptr, int value);
void QAbstractSlider_ConnectSliderPressed(void* ptr);
void QAbstractSlider_DisconnectSliderPressed(void* ptr);
void QAbstractSlider_SliderPressed(void* ptr);
void QAbstractSlider_ConnectSliderReleased(void* ptr);
void QAbstractSlider_DisconnectSliderReleased(void* ptr);
void QAbstractSlider_SliderReleased(void* ptr);
void QAbstractSlider_TimerEvent(void* ptr, void* e);
void QAbstractSlider_TimerEventDefault(void* ptr, void* e);
void QAbstractSlider_TriggerAction(void* ptr, int action);
void QAbstractSlider_ConnectValueChanged(void* ptr);
void QAbstractSlider_DisconnectValueChanged(void* ptr);
void QAbstractSlider_ValueChanged(void* ptr, int value);
void QAbstractSlider_WheelEvent(void* ptr, void* e);
void QAbstractSlider_WheelEventDefault(void* ptr, void* e);
void QAbstractSlider_DestroyQAbstractSlider(void* ptr);
void QAbstractSlider_ActionEvent(void* ptr, void* event);
void QAbstractSlider_ActionEventDefault(void* ptr, void* event);
void QAbstractSlider_DragEnterEvent(void* ptr, void* event);
void QAbstractSlider_DragEnterEventDefault(void* ptr, void* event);
void QAbstractSlider_DragLeaveEvent(void* ptr, void* event);
void QAbstractSlider_DragLeaveEventDefault(void* ptr, void* event);
void QAbstractSlider_DragMoveEvent(void* ptr, void* event);
void QAbstractSlider_DragMoveEventDefault(void* ptr, void* event);
void QAbstractSlider_DropEvent(void* ptr, void* event);
void QAbstractSlider_DropEventDefault(void* ptr, void* event);
void QAbstractSlider_EnterEvent(void* ptr, void* event);
void QAbstractSlider_EnterEventDefault(void* ptr, void* event);
void QAbstractSlider_FocusInEvent(void* ptr, void* event);
void QAbstractSlider_FocusInEventDefault(void* ptr, void* event);
void QAbstractSlider_FocusOutEvent(void* ptr, void* event);
void QAbstractSlider_FocusOutEventDefault(void* ptr, void* event);
void QAbstractSlider_HideEvent(void* ptr, void* event);
void QAbstractSlider_HideEventDefault(void* ptr, void* event);
void QAbstractSlider_LeaveEvent(void* ptr, void* event);
void QAbstractSlider_LeaveEventDefault(void* ptr, void* event);
void QAbstractSlider_MoveEvent(void* ptr, void* event);
void QAbstractSlider_MoveEventDefault(void* ptr, void* event);
void QAbstractSlider_PaintEvent(void* ptr, void* event);
void QAbstractSlider_PaintEventDefault(void* ptr, void* event);
void QAbstractSlider_SetVisible(void* ptr, int visible);
void QAbstractSlider_SetVisibleDefault(void* ptr, int visible);
void QAbstractSlider_ShowEvent(void* ptr, void* event);
void QAbstractSlider_ShowEventDefault(void* ptr, void* event);
void QAbstractSlider_CloseEvent(void* ptr, void* event);
void QAbstractSlider_CloseEventDefault(void* ptr, void* event);
void QAbstractSlider_ContextMenuEvent(void* ptr, void* event);
void QAbstractSlider_ContextMenuEventDefault(void* ptr, void* event);
void QAbstractSlider_InitPainter(void* ptr, void* painter);
void QAbstractSlider_InitPainterDefault(void* ptr, void* painter);
void QAbstractSlider_InputMethodEvent(void* ptr, void* event);
void QAbstractSlider_InputMethodEventDefault(void* ptr, void* event);
void QAbstractSlider_KeyReleaseEvent(void* ptr, void* event);
void QAbstractSlider_KeyReleaseEventDefault(void* ptr, void* event);
void QAbstractSlider_MouseDoubleClickEvent(void* ptr, void* event);
void QAbstractSlider_MouseDoubleClickEventDefault(void* ptr, void* event);
void QAbstractSlider_MouseMoveEvent(void* ptr, void* event);
void QAbstractSlider_MouseMoveEventDefault(void* ptr, void* event);
void QAbstractSlider_MousePressEvent(void* ptr, void* event);
void QAbstractSlider_MousePressEventDefault(void* ptr, void* event);
void QAbstractSlider_MouseReleaseEvent(void* ptr, void* event);
void QAbstractSlider_MouseReleaseEventDefault(void* ptr, void* event);
void QAbstractSlider_ResizeEvent(void* ptr, void* event);
void QAbstractSlider_ResizeEventDefault(void* ptr, void* event);
void QAbstractSlider_TabletEvent(void* ptr, void* event);
void QAbstractSlider_TabletEventDefault(void* ptr, void* event);
void QAbstractSlider_ChildEvent(void* ptr, void* event);
void QAbstractSlider_ChildEventDefault(void* ptr, void* event);
void QAbstractSlider_CustomEvent(void* ptr, void* event);
void QAbstractSlider_CustomEventDefault(void* ptr, void* event);
int QAbstractSpinBox_Alignment(void* ptr);
int QAbstractSpinBox_ButtonSymbols(void* ptr);
int QAbstractSpinBox_CorrectionMode(void* ptr);
int QAbstractSpinBox_HasAcceptableInput(void* ptr);
int QAbstractSpinBox_HasFrame(void* ptr);
int QAbstractSpinBox_IsAccelerated(void* ptr);
int QAbstractSpinBox_IsGroupSeparatorShown(void* ptr);
int QAbstractSpinBox_IsReadOnly(void* ptr);
int QAbstractSpinBox_KeyboardTracking(void* ptr);
void QAbstractSpinBox_SetAccelerated(void* ptr, int on);
void QAbstractSpinBox_SetAlignment(void* ptr, int flag);
void QAbstractSpinBox_SetButtonSymbols(void* ptr, int bs);
void QAbstractSpinBox_SetCorrectionMode(void* ptr, int cm);
void QAbstractSpinBox_SetFrame(void* ptr, int v);
void QAbstractSpinBox_SetGroupSeparatorShown(void* ptr, int shown);
void QAbstractSpinBox_SetKeyboardTracking(void* ptr, int kt);
void QAbstractSpinBox_SetReadOnly(void* ptr, int r);
void QAbstractSpinBox_SetSpecialValueText(void* ptr, char* txt);
void QAbstractSpinBox_SetWrapping(void* ptr, int w);
char* QAbstractSpinBox_SpecialValueText(void* ptr);
char* QAbstractSpinBox_Text(void* ptr);
int QAbstractSpinBox_Wrapping(void* ptr);
void* QAbstractSpinBox_NewQAbstractSpinBox(void* parent);
void QAbstractSpinBox_ChangeEvent(void* ptr, void* event);
void QAbstractSpinBox_ChangeEventDefault(void* ptr, void* event);
void QAbstractSpinBox_Clear(void* ptr);
void QAbstractSpinBox_ClearDefault(void* ptr);
void QAbstractSpinBox_CloseEvent(void* ptr, void* event);
void QAbstractSpinBox_CloseEventDefault(void* ptr, void* event);
void QAbstractSpinBox_ContextMenuEvent(void* ptr, void* event);
void QAbstractSpinBox_ContextMenuEventDefault(void* ptr, void* event);
void QAbstractSpinBox_ConnectEditingFinished(void* ptr);
void QAbstractSpinBox_DisconnectEditingFinished(void* ptr);
void QAbstractSpinBox_EditingFinished(void* ptr);
int QAbstractSpinBox_Event(void* ptr, void* event);
int QAbstractSpinBox_EventDefault(void* ptr, void* event);
void QAbstractSpinBox_FocusInEvent(void* ptr, void* event);
void QAbstractSpinBox_FocusInEventDefault(void* ptr, void* event);
void QAbstractSpinBox_FocusOutEvent(void* ptr, void* event);
void QAbstractSpinBox_FocusOutEventDefault(void* ptr, void* event);
void QAbstractSpinBox_HideEvent(void* ptr, void* event);
void QAbstractSpinBox_HideEventDefault(void* ptr, void* event);
void* QAbstractSpinBox_InputMethodQuery(void* ptr, int query);
void* QAbstractSpinBox_InputMethodQueryDefault(void* ptr, int query);
void QAbstractSpinBox_InterpretText(void* ptr);
void QAbstractSpinBox_KeyPressEvent(void* ptr, void* event);
void QAbstractSpinBox_KeyPressEventDefault(void* ptr, void* event);
void QAbstractSpinBox_KeyReleaseEvent(void* ptr, void* event);
void QAbstractSpinBox_KeyReleaseEventDefault(void* ptr, void* event);
void* QAbstractSpinBox_MinimumSizeHint(void* ptr);
void* QAbstractSpinBox_MinimumSizeHintDefault(void* ptr);
void QAbstractSpinBox_MouseMoveEvent(void* ptr, void* event);
void QAbstractSpinBox_MouseMoveEventDefault(void* ptr, void* event);
void QAbstractSpinBox_MousePressEvent(void* ptr, void* event);
void QAbstractSpinBox_MousePressEventDefault(void* ptr, void* event);
void QAbstractSpinBox_MouseReleaseEvent(void* ptr, void* event);
void QAbstractSpinBox_MouseReleaseEventDefault(void* ptr, void* event);
void QAbstractSpinBox_PaintEvent(void* ptr, void* event);
void QAbstractSpinBox_PaintEventDefault(void* ptr, void* event);
void QAbstractSpinBox_ResizeEvent(void* ptr, void* event);
void QAbstractSpinBox_ResizeEventDefault(void* ptr, void* event);
void QAbstractSpinBox_SelectAll(void* ptr);
void QAbstractSpinBox_ShowEvent(void* ptr, void* event);
void QAbstractSpinBox_ShowEventDefault(void* ptr, void* event);
void* QAbstractSpinBox_SizeHint(void* ptr);
void* QAbstractSpinBox_SizeHintDefault(void* ptr);
void QAbstractSpinBox_StepBy(void* ptr, int steps);
void QAbstractSpinBox_StepByDefault(void* ptr, int steps);
void QAbstractSpinBox_StepDown(void* ptr);
int QAbstractSpinBox_StepEnabled(void* ptr);
int QAbstractSpinBox_StepEnabledDefault(void* ptr);
void QAbstractSpinBox_StepUp(void* ptr);
void QAbstractSpinBox_TimerEvent(void* ptr, void* event);
void QAbstractSpinBox_TimerEventDefault(void* ptr, void* event);
void QAbstractSpinBox_WheelEvent(void* ptr, void* event);
void QAbstractSpinBox_WheelEventDefault(void* ptr, void* event);
void QAbstractSpinBox_DestroyQAbstractSpinBox(void* ptr);
void QAbstractSpinBox_ActionEvent(void* ptr, void* event);
void QAbstractSpinBox_ActionEventDefault(void* ptr, void* event);
void QAbstractSpinBox_DragEnterEvent(void* ptr, void* event);
void QAbstractSpinBox_DragEnterEventDefault(void* ptr, void* event);
void QAbstractSpinBox_DragLeaveEvent(void* ptr, void* event);
void QAbstractSpinBox_DragLeaveEventDefault(void* ptr, void* event);
void QAbstractSpinBox_DragMoveEvent(void* ptr, void* event);
void QAbstractSpinBox_DragMoveEventDefault(void* ptr, void* event);
void QAbstractSpinBox_DropEvent(void* ptr, void* event);
void QAbstractSpinBox_DropEventDefault(void* ptr, void* event);
void QAbstractSpinBox_EnterEvent(void* ptr, void* event);
void QAbstractSpinBox_EnterEventDefault(void* ptr, void* event);
void QAbstractSpinBox_LeaveEvent(void* ptr, void* event);
void QAbstractSpinBox_LeaveEventDefault(void* ptr, void* event);
void QAbstractSpinBox_MoveEvent(void* ptr, void* event);
void QAbstractSpinBox_MoveEventDefault(void* ptr, void* event);
void QAbstractSpinBox_SetVisible(void* ptr, int visible);
void QAbstractSpinBox_SetVisibleDefault(void* ptr, int visible);
void QAbstractSpinBox_InitPainter(void* ptr, void* painter);
void QAbstractSpinBox_InitPainterDefault(void* ptr, void* painter);
void QAbstractSpinBox_InputMethodEvent(void* ptr, void* event);
void QAbstractSpinBox_InputMethodEventDefault(void* ptr, void* event);
void QAbstractSpinBox_MouseDoubleClickEvent(void* ptr, void* event);
void QAbstractSpinBox_MouseDoubleClickEventDefault(void* ptr, void* event);
void QAbstractSpinBox_TabletEvent(void* ptr, void* event);
void QAbstractSpinBox_TabletEventDefault(void* ptr, void* event);
void QAbstractSpinBox_ChildEvent(void* ptr, void* event);
void QAbstractSpinBox_ChildEventDefault(void* ptr, void* event);
void QAbstractSpinBox_CustomEvent(void* ptr, void* event);
void QAbstractSpinBox_CustomEventDefault(void* ptr, void* event);
void* QAccessibleWidget_NewQAccessibleWidget(void* w, int role, char* name);
char* QAccessibleWidget_ActionNames(void* ptr);
char* QAccessibleWidget_ActionNamesDefault(void* ptr);
void* QAccessibleWidget_BackgroundColor(void* ptr);
void* QAccessibleWidget_BackgroundColorDefault(void* ptr);
void* QAccessibleWidget_Child(void* ptr, int index);
void* QAccessibleWidget_ChildDefault(void* ptr, int index);
int QAccessibleWidget_ChildCount(void* ptr);
int QAccessibleWidget_ChildCountDefault(void* ptr);
void QAccessibleWidget_DoAction(void* ptr, char* actionName);
void QAccessibleWidget_DoActionDefault(void* ptr, char* actionName);
void* QAccessibleWidget_FocusChild(void* ptr);
void* QAccessibleWidget_FocusChildDefault(void* ptr);
void* QAccessibleWidget_ForegroundColor(void* ptr);
void* QAccessibleWidget_ForegroundColorDefault(void* ptr);
int QAccessibleWidget_IndexOfChild(void* ptr, void* child);
int QAccessibleWidget_IndexOfChildDefault(void* ptr, void* child);
void* QAccessibleWidget_Interface_cast(void* ptr, int t);
void* QAccessibleWidget_Interface_castDefault(void* ptr, int t);
int QAccessibleWidget_IsValid(void* ptr);
int QAccessibleWidget_IsValidDefault(void* ptr);
char* QAccessibleWidget_KeyBindingsForAction(void* ptr, char* actionName);
char* QAccessibleWidget_KeyBindingsForActionDefault(void* ptr, char* actionName);
void* QAccessibleWidget_Parent(void* ptr);
void* QAccessibleWidget_ParentDefault(void* ptr);
void* QAccessibleWidget_Rect(void* ptr);
void* QAccessibleWidget_RectDefault(void* ptr);
int QAccessibleWidget_Role(void* ptr);
int QAccessibleWidget_RoleDefault(void* ptr);
char* QAccessibleWidget_Text(void* ptr, int t);
char* QAccessibleWidget_TextDefault(void* ptr, int t);
void* QAccessibleWidget_Window(void* ptr);
void* QAccessibleWidget_WindowDefault(void* ptr);
char* QAccessibleWidget_ObjectNameAbs(void* ptr);
void QAccessibleWidget_SetObjectNameAbs(void* ptr, char* name);
void QAccessibleWidget_SetText(void* ptr, int t, char* text);
void QAccessibleWidget_SetTextDefault(void* ptr, int t, char* text);
int QAction_AutoRepeat(void* ptr);
void* QAction_Icon(void* ptr);
char* QAction_IconText(void* ptr);
int QAction_IsCheckable(void* ptr);
int QAction_IsChecked(void* ptr);
int QAction_IsEnabled(void* ptr);
int QAction_IsIconVisibleInMenu(void* ptr);
int QAction_IsVisible(void* ptr);
int QAction_MenuRole(void* ptr);
int QAction_Priority(void* ptr);
void QAction_SetAutoRepeat(void* ptr, int v);
void QAction_SetCheckable(void* ptr, int v);
void QAction_SetChecked(void* ptr, int v);
void QAction_SetData(void* ptr, void* userData);
void QAction_SetEnabled(void* ptr, int v);
void QAction_SetFont(void* ptr, void* font);
void QAction_SetIcon(void* ptr, void* icon);
void QAction_SetIconText(void* ptr, char* text);
void QAction_SetIconVisibleInMenu(void* ptr, int visible);
void QAction_SetMenuRole(void* ptr, int menuRole);
void QAction_SetPriority(void* ptr, int priority);
void QAction_SetShortcut(void* ptr, void* shortcut);
void QAction_SetShortcutContext(void* ptr, int context);
void QAction_SetStatusTip(void* ptr, char* statusTip);
void QAction_SetText(void* ptr, char* text);
void QAction_SetToolTip(void* ptr, char* tip);
void QAction_SetVisible(void* ptr, int v);
void QAction_SetWhatsThis(void* ptr, char* what);
int QAction_ShortcutContext(void* ptr);
char* QAction_StatusTip(void* ptr);
char* QAction_Text(void* ptr);
void QAction_Toggle(void* ptr);
char* QAction_ToolTip(void* ptr);
char* QAction_WhatsThis(void* ptr);
void* QAction_NewQAction(void* parent);
void* QAction_NewQAction3(void* icon, char* text, void* parent);
void* QAction_NewQAction2(char* text, void* parent);
void* QAction_ActionGroup(void* ptr);
void QAction_Activate(void* ptr, int event);
void QAction_ConnectChanged(void* ptr);
void QAction_DisconnectChanged(void* ptr);
void QAction_Changed(void* ptr);
void* QAction_Data(void* ptr);
int QAction_Event(void* ptr, void* e);
int QAction_EventDefault(void* ptr, void* e);
void QAction_Hover(void* ptr);
void QAction_ConnectHovered(void* ptr);
void QAction_DisconnectHovered(void* ptr);
void QAction_Hovered(void* ptr);
int QAction_IsSeparator(void* ptr);
void* QAction_Menu(void* ptr);
void* QAction_ParentWidget(void* ptr);
void QAction_SetActionGroup(void* ptr, void* group);
void QAction_SetDisabled(void* ptr, int b);
void QAction_SetMenu(void* ptr, void* menu);
void QAction_SetSeparator(void* ptr, int b);
void QAction_SetShortcuts2(void* ptr, int key);
int QAction_ShowStatusText(void* ptr, void* widget);
void QAction_ConnectToggled(void* ptr);
void QAction_DisconnectToggled(void* ptr);
void QAction_Toggled(void* ptr, int checked);
void QAction_Trigger(void* ptr);
void QAction_ConnectTriggered(void* ptr);
void QAction_DisconnectTriggered(void* ptr);
void QAction_Triggered(void* ptr, int checked);
void QAction_DestroyQAction(void* ptr);
void QAction_TimerEvent(void* ptr, void* event);
void QAction_TimerEventDefault(void* ptr, void* event);
void QAction_ChildEvent(void* ptr, void* event);
void QAction_ChildEventDefault(void* ptr, void* event);
void QAction_CustomEvent(void* ptr, void* event);
void QAction_CustomEventDefault(void* ptr, void* event);
void* QActionGroup_AddAction(void* ptr, void* action);
int QActionGroup_IsEnabled(void* ptr);
int QActionGroup_IsExclusive(void* ptr);
int QActionGroup_IsVisible(void* ptr);
void QActionGroup_SetEnabled(void* ptr, int v);
void QActionGroup_SetExclusive(void* ptr, int v);
void QActionGroup_SetVisible(void* ptr, int v);
void* QActionGroup_NewQActionGroup(void* parent);
void* QActionGroup_AddAction3(void* ptr, void* icon, char* text);
void* QActionGroup_AddAction2(void* ptr, char* text);
void* QActionGroup_CheckedAction(void* ptr);
void QActionGroup_ConnectHovered(void* ptr);
void QActionGroup_DisconnectHovered(void* ptr);
void QActionGroup_Hovered(void* ptr, void* action);
void QActionGroup_RemoveAction(void* ptr, void* action);
void QActionGroup_SetDisabled(void* ptr, int b);
void QActionGroup_ConnectTriggered(void* ptr);
void QActionGroup_DisconnectTriggered(void* ptr);
void QActionGroup_Triggered(void* ptr, void* action);
void QActionGroup_DestroyQActionGroup(void* ptr);
void QActionGroup_TimerEvent(void* ptr, void* event);
void QActionGroup_TimerEventDefault(void* ptr, void* event);
void QActionGroup_ChildEvent(void* ptr, void* event);
void QActionGroup_ChildEventDefault(void* ptr, void* event);
void QActionGroup_CustomEvent(void* ptr, void* event);
void QActionGroup_CustomEventDefault(void* ptr, void* event);
void QApplication_QApplication_Alert(void* widget, int msec);
int QApplication_AutoMaximizeThreshold(void* ptr);
int QApplication_AutoSipEnabled(void* ptr);
void QApplication_QApplication_Beep();
int QApplication_QApplication_CursorFlashTime();
int QApplication_QApplication_DoubleClickInterval();
void* QApplication_QApplication_GlobalStrut();
int QApplication_QApplication_IsEffectEnabled(int effect);
int QApplication_QApplication_KeyboardInputInterval();
void QApplication_QApplication_SetActiveWindow(void* active);
void QApplication_SetAutoMaximizeThreshold(void* ptr, int threshold);
void QApplication_SetAutoSipEnabled(void* ptr, int enabled);
void QApplication_QApplication_SetCursorFlashTime(int v);
void QApplication_QApplication_SetDoubleClickInterval(int v);
void QApplication_QApplication_SetEffectEnabled(int effect, int enable);
void QApplication_QApplication_SetGlobalStrut(void* v);
void QApplication_QApplication_SetKeyboardInputInterval(int v);
void QApplication_QApplication_SetStartDragDistance(int l);
void QApplication_QApplication_SetStartDragTime(int ms);
void QApplication_SetStyleSheet(void* ptr, char* sheet);
void QApplication_QApplication_SetWheelScrollLines(int v);
void QApplication_QApplication_SetWindowIcon(void* icon);
int QApplication_QApplication_StartDragDistance();
int QApplication_QApplication_StartDragTime();
char* QApplication_StyleSheet(void* ptr);
void* QApplication_QApplication_TopLevelAt(void* point);
int QApplication_QApplication_WheelScrollLines();
void* QApplication_QApplication_WidgetAt(void* point);
void* QApplication_QApplication_WindowIcon();
void* QApplication_NewQApplication(int argc, char* argv);
void QApplication_QApplication_AboutQt();
void* QApplication_QApplication_ActiveModalWidget();
void* QApplication_QApplication_ActivePopupWidget();
void* QApplication_QApplication_ActiveWindow();
void QApplication_QApplication_CloseAllWindows();
int QApplication_QApplication_ColorSpec();
void* QApplication_QApplication_Desktop();
int QApplication_Event(void* ptr, void* e);
int QApplication_EventDefault(void* ptr, void* e);
int QApplication_QApplication_Exec();
void QApplication_ConnectFocusChanged(void* ptr);
void QApplication_DisconnectFocusChanged(void* ptr);
void QApplication_FocusChanged(void* ptr, void* old, void* now);
void* QApplication_QApplication_FocusWidget();
int QApplication_Notify(void* ptr, void* receiver, void* e);
int QApplication_NotifyDefault(void* ptr, void* receiver, void* e);
void QApplication_QApplication_SetColorSpec(int spec);
void QApplication_QApplication_SetFont(void* font, char* className);
void QApplication_QApplication_SetPalette(void* palette, char* className);
void* QApplication_QApplication_SetStyle2(char* style);
void QApplication_QApplication_SetStyle(void* style);
void* QApplication_QApplication_Style();
void* QApplication_QApplication_TopLevelAt2(int x, int y);
void* QApplication_QApplication_WidgetAt2(int x, int y);
void QApplication_DestroyQApplication(void* ptr);
void QApplication_TimerEvent(void* ptr, void* event);
void QApplication_TimerEventDefault(void* ptr, void* event);
void QApplication_ChildEvent(void* ptr, void* event);
void QApplication_ChildEventDefault(void* ptr, void* event);
void QApplication_CustomEvent(void* ptr, void* event);
void QApplication_CustomEventDefault(void* ptr, void* event);
int QBoxLayout_Direction(void* ptr);
void* QBoxLayout_NewQBoxLayout(int dir, void* parent);
void QBoxLayout_AddItem(void* ptr, void* item);
void QBoxLayout_AddItemDefault(void* ptr, void* item);
void QBoxLayout_AddLayout(void* ptr, void* layout, int stretch);
void QBoxLayout_AddSpacerItem(void* ptr, void* spacerItem);
void QBoxLayout_AddSpacing(void* ptr, int size);
void QBoxLayout_AddStretch(void* ptr, int stretch);
void QBoxLayout_AddStrut(void* ptr, int size);
void QBoxLayout_AddWidget(void* ptr, void* widget, int stretch, int alignment);
int QBoxLayout_Count(void* ptr);
int QBoxLayout_CountDefault(void* ptr);
int QBoxLayout_ExpandingDirections(void* ptr);
int QBoxLayout_ExpandingDirectionsDefault(void* ptr);
int QBoxLayout_HasHeightForWidth(void* ptr);
int QBoxLayout_HasHeightForWidthDefault(void* ptr);
int QBoxLayout_HeightForWidth(void* ptr, int w);
int QBoxLayout_HeightForWidthDefault(void* ptr, int w);
void QBoxLayout_InsertItem(void* ptr, int index, void* item);
void QBoxLayout_InsertLayout(void* ptr, int index, void* layout, int stretch);
void QBoxLayout_InsertSpacerItem(void* ptr, int index, void* spacerItem);
void QBoxLayout_InsertSpacing(void* ptr, int index, int size);
void QBoxLayout_InsertStretch(void* ptr, int index, int stretch);
void QBoxLayout_InsertWidget(void* ptr, int index, void* widget, int stretch, int alignment);
void QBoxLayout_Invalidate(void* ptr);
void QBoxLayout_InvalidateDefault(void* ptr);
void* QBoxLayout_ItemAt(void* ptr, int index);
void* QBoxLayout_ItemAtDefault(void* ptr, int index);
void* QBoxLayout_MaximumSize(void* ptr);
void* QBoxLayout_MaximumSizeDefault(void* ptr);
int QBoxLayout_MinimumHeightForWidth(void* ptr, int w);
int QBoxLayout_MinimumHeightForWidthDefault(void* ptr, int w);
void* QBoxLayout_MinimumSize(void* ptr);
void* QBoxLayout_MinimumSizeDefault(void* ptr);
void QBoxLayout_SetDirection(void* ptr, int direction);
void QBoxLayout_SetGeometry(void* ptr, void* r);
void QBoxLayout_SetGeometryDefault(void* ptr, void* r);
void QBoxLayout_SetSpacing(void* ptr, int spacing);
void QBoxLayout_SetStretch(void* ptr, int index, int stretch);
int QBoxLayout_SetStretchFactor2(void* ptr, void* layout, int stretch);
int QBoxLayout_SetStretchFactor(void* ptr, void* widget, int stretch);
void* QBoxLayout_SizeHint(void* ptr);
void* QBoxLayout_SizeHintDefault(void* ptr);
int QBoxLayout_Spacing(void* ptr);
int QBoxLayout_Stretch(void* ptr, int index);
void* QBoxLayout_TakeAt(void* ptr, int index);
void* QBoxLayout_TakeAtDefault(void* ptr, int index);
void QBoxLayout_DestroyQBoxLayout(void* ptr);
void QBoxLayout_ChildEvent(void* ptr, void* e);
void QBoxLayout_ChildEventDefault(void* ptr, void* e);
void QBoxLayout_TimerEvent(void* ptr, void* event);
void QBoxLayout_TimerEventDefault(void* ptr, void* event);
void QBoxLayout_CustomEvent(void* ptr, void* event);
void QBoxLayout_CustomEventDefault(void* ptr, void* event);
void* QButtonGroup_NewQButtonGroup(void* parent);
void QButtonGroup_AddButton(void* ptr, void* button, int id);
void* QButtonGroup_Button(void* ptr, int id);
void* QButtonGroup_CheckedButton(void* ptr);
int QButtonGroup_CheckedId(void* ptr);
int QButtonGroup_Exclusive(void* ptr);
int QButtonGroup_Id(void* ptr, void* button);
void QButtonGroup_RemoveButton(void* ptr, void* button);
void QButtonGroup_SetExclusive(void* ptr, int v);
void QButtonGroup_SetId(void* ptr, void* button, int id);
void QButtonGroup_DestroyQButtonGroup(void* ptr);
void QButtonGroup_ConnectButtonClicked(void* ptr);
void QButtonGroup_DisconnectButtonClicked(void* ptr);
void QButtonGroup_ButtonClicked(void* ptr, void* button);
void QButtonGroup_ConnectButtonClicked2(void* ptr);
void QButtonGroup_DisconnectButtonClicked2(void* ptr);
void QButtonGroup_ButtonClicked2(void* ptr, int id);
void QButtonGroup_ConnectButtonPressed(void* ptr);
void QButtonGroup_DisconnectButtonPressed(void* ptr);
void QButtonGroup_ButtonPressed(void* ptr, void* button);
void QButtonGroup_ConnectButtonPressed2(void* ptr);
void QButtonGroup_DisconnectButtonPressed2(void* ptr);
void QButtonGroup_ButtonPressed2(void* ptr, int id);
void QButtonGroup_ConnectButtonReleased(void* ptr);
void QButtonGroup_DisconnectButtonReleased(void* ptr);
void QButtonGroup_ButtonReleased(void* ptr, void* button);
void QButtonGroup_ConnectButtonReleased2(void* ptr);
void QButtonGroup_DisconnectButtonReleased2(void* ptr);
void QButtonGroup_ButtonReleased2(void* ptr, int id);
void QButtonGroup_ConnectButtonToggled(void* ptr);
void QButtonGroup_DisconnectButtonToggled(void* ptr);
void QButtonGroup_ButtonToggled(void* ptr, void* button, int checked);
void QButtonGroup_ConnectButtonToggled2(void* ptr);
void QButtonGroup_DisconnectButtonToggled2(void* ptr);
void QButtonGroup_ButtonToggled2(void* ptr, int id, int checked);
void QButtonGroup_TimerEvent(void* ptr, void* event);
void QButtonGroup_TimerEventDefault(void* ptr, void* event);
void QButtonGroup_ChildEvent(void* ptr, void* event);
void QButtonGroup_ChildEventDefault(void* ptr, void* event);
void QButtonGroup_CustomEvent(void* ptr, void* event);
void QButtonGroup_CustomEventDefault(void* ptr, void* event);
int QCalendarWidget_DateEditAcceptDelay(void* ptr);
int QCalendarWidget_FirstDayOfWeek(void* ptr);
int QCalendarWidget_HorizontalHeaderFormat(void* ptr);
int QCalendarWidget_IsDateEditEnabled(void* ptr);
int QCalendarWidget_IsGridVisible(void* ptr);
int QCalendarWidget_IsNavigationBarVisible(void* ptr);
int QCalendarWidget_SelectionMode(void* ptr);
void QCalendarWidget_SetDateEditAcceptDelay(void* ptr, int delay);
void QCalendarWidget_SetDateEditEnabled(void* ptr, int enable);
void QCalendarWidget_SetFirstDayOfWeek(void* ptr, int dayOfWeek);
void QCalendarWidget_SetGridVisible(void* ptr, int show);
void QCalendarWidget_SetHorizontalHeaderFormat(void* ptr, int format);
void QCalendarWidget_SetMaximumDate(void* ptr, void* date);
void QCalendarWidget_SetMinimumDate(void* ptr, void* date);
void QCalendarWidget_SetNavigationBarVisible(void* ptr, int visible);
void QCalendarWidget_SetSelectedDate(void* ptr, void* date);
void QCalendarWidget_SetSelectionMode(void* ptr, int mode);
void QCalendarWidget_SetVerticalHeaderFormat(void* ptr, int format);
int QCalendarWidget_VerticalHeaderFormat(void* ptr);
void* QCalendarWidget_NewQCalendarWidget(void* parent);
void QCalendarWidget_ConnectCurrentPageChanged(void* ptr);
void QCalendarWidget_DisconnectCurrentPageChanged(void* ptr);
void QCalendarWidget_CurrentPageChanged(void* ptr, int year, int month);
int QCalendarWidget_Event(void* ptr, void* event);
int QCalendarWidget_EventDefault(void* ptr, void* event);
int QCalendarWidget_EventFilter(void* ptr, void* watched, void* event);
int QCalendarWidget_EventFilterDefault(void* ptr, void* watched, void* event);
void QCalendarWidget_KeyPressEvent(void* ptr, void* event);
void QCalendarWidget_KeyPressEventDefault(void* ptr, void* event);
void* QCalendarWidget_MinimumSizeHint(void* ptr);
void* QCalendarWidget_MinimumSizeHintDefault(void* ptr);
int QCalendarWidget_MonthShown(void* ptr);
void QCalendarWidget_MousePressEvent(void* ptr, void* event);
void QCalendarWidget_MousePressEventDefault(void* ptr, void* event);
void QCalendarWidget_ResizeEvent(void* ptr, void* event);
void QCalendarWidget_ResizeEventDefault(void* ptr, void* event);
void QCalendarWidget_ConnectSelectionChanged(void* ptr);
void QCalendarWidget_DisconnectSelectionChanged(void* ptr);
void QCalendarWidget_SelectionChanged(void* ptr);
void QCalendarWidget_SetCurrentPage(void* ptr, int year, int month);
void QCalendarWidget_SetDateRange(void* ptr, void* min, void* max);
void QCalendarWidget_SetDateTextFormat(void* ptr, void* date, void* format);
void QCalendarWidget_SetHeaderTextFormat(void* ptr, void* format);
void QCalendarWidget_SetWeekdayTextFormat(void* ptr, int dayOfWeek, void* format);
void QCalendarWidget_ShowNextMonth(void* ptr);
void QCalendarWidget_ShowNextYear(void* ptr);
void QCalendarWidget_ShowPreviousMonth(void* ptr);
void QCalendarWidget_ShowPreviousYear(void* ptr);
void QCalendarWidget_ShowSelectedDate(void* ptr);
void QCalendarWidget_ShowToday(void* ptr);
void* QCalendarWidget_SizeHint(void* ptr);
void* QCalendarWidget_SizeHintDefault(void* ptr);
int QCalendarWidget_YearShown(void* ptr);
void QCalendarWidget_DestroyQCalendarWidget(void* ptr);
void QCalendarWidget_ActionEvent(void* ptr, void* event);
void QCalendarWidget_ActionEventDefault(void* ptr, void* event);
void QCalendarWidget_DragEnterEvent(void* ptr, void* event);
void QCalendarWidget_DragEnterEventDefault(void* ptr, void* event);
void QCalendarWidget_DragLeaveEvent(void* ptr, void* event);
void QCalendarWidget_DragLeaveEventDefault(void* ptr, void* event);
void QCalendarWidget_DragMoveEvent(void* ptr, void* event);
void QCalendarWidget_DragMoveEventDefault(void* ptr, void* event);
void QCalendarWidget_DropEvent(void* ptr, void* event);
void QCalendarWidget_DropEventDefault(void* ptr, void* event);
void QCalendarWidget_EnterEvent(void* ptr, void* event);
void QCalendarWidget_EnterEventDefault(void* ptr, void* event);
void QCalendarWidget_FocusInEvent(void* ptr, void* event);
void QCalendarWidget_FocusInEventDefault(void* ptr, void* event);
void QCalendarWidget_FocusOutEvent(void* ptr, void* event);
void QCalendarWidget_FocusOutEventDefault(void* ptr, void* event);
void QCalendarWidget_HideEvent(void* ptr, void* event);
void QCalendarWidget_HideEventDefault(void* ptr, void* event);
void QCalendarWidget_LeaveEvent(void* ptr, void* event);
void QCalendarWidget_LeaveEventDefault(void* ptr, void* event);
void QCalendarWidget_MoveEvent(void* ptr, void* event);
void QCalendarWidget_MoveEventDefault(void* ptr, void* event);
void QCalendarWidget_PaintEvent(void* ptr, void* event);
void QCalendarWidget_PaintEventDefault(void* ptr, void* event);
void QCalendarWidget_SetVisible(void* ptr, int visible);
void QCalendarWidget_SetVisibleDefault(void* ptr, int visible);
void QCalendarWidget_ShowEvent(void* ptr, void* event);
void QCalendarWidget_ShowEventDefault(void* ptr, void* event);
void QCalendarWidget_ChangeEvent(void* ptr, void* event);
void QCalendarWidget_ChangeEventDefault(void* ptr, void* event);
void QCalendarWidget_CloseEvent(void* ptr, void* event);
void QCalendarWidget_CloseEventDefault(void* ptr, void* event);
void QCalendarWidget_ContextMenuEvent(void* ptr, void* event);
void QCalendarWidget_ContextMenuEventDefault(void* ptr, void* event);
void QCalendarWidget_InitPainter(void* ptr, void* painter);
void QCalendarWidget_InitPainterDefault(void* ptr, void* painter);
void QCalendarWidget_InputMethodEvent(void* ptr, void* event);
void QCalendarWidget_InputMethodEventDefault(void* ptr, void* event);
void QCalendarWidget_KeyReleaseEvent(void* ptr, void* event);
void QCalendarWidget_KeyReleaseEventDefault(void* ptr, void* event);
void QCalendarWidget_MouseDoubleClickEvent(void* ptr, void* event);
void QCalendarWidget_MouseDoubleClickEventDefault(void* ptr, void* event);
void QCalendarWidget_MouseMoveEvent(void* ptr, void* event);
void QCalendarWidget_MouseMoveEventDefault(void* ptr, void* event);
void QCalendarWidget_MouseReleaseEvent(void* ptr, void* event);
void QCalendarWidget_MouseReleaseEventDefault(void* ptr, void* event);
void QCalendarWidget_TabletEvent(void* ptr, void* event);
void QCalendarWidget_TabletEventDefault(void* ptr, void* event);
void QCalendarWidget_WheelEvent(void* ptr, void* event);
void QCalendarWidget_WheelEventDefault(void* ptr, void* event);
void QCalendarWidget_TimerEvent(void* ptr, void* event);
void QCalendarWidget_TimerEventDefault(void* ptr, void* event);
void QCalendarWidget_ChildEvent(void* ptr, void* event);
void QCalendarWidget_ChildEventDefault(void* ptr, void* event);
void QCalendarWidget_CustomEvent(void* ptr, void* event);
void QCalendarWidget_CustomEventDefault(void* ptr, void* event);
int QCheckBox_IsTristate(void* ptr);
void QCheckBox_SetTristate(void* ptr, int y);
void* QCheckBox_NewQCheckBox(void* parent);
void* QCheckBox_NewQCheckBox2(char* text, void* parent);
int QCheckBox_CheckState(void* ptr);
void QCheckBox_CheckStateSet(void* ptr);
void QCheckBox_CheckStateSetDefault(void* ptr);
int QCheckBox_Event(void* ptr, void* e);
int QCheckBox_EventDefault(void* ptr, void* e);
int QCheckBox_HitButton(void* ptr, void* pos);
int QCheckBox_HitButtonDefault(void* ptr, void* pos);
void* QCheckBox_MinimumSizeHint(void* ptr);
void* QCheckBox_MinimumSizeHintDefault(void* ptr);
void QCheckBox_MouseMoveEvent(void* ptr, void* e);
void QCheckBox_MouseMoveEventDefault(void* ptr, void* e);
void QCheckBox_NextCheckState(void* ptr);
void QCheckBox_NextCheckStateDefault(void* ptr);
void QCheckBox_PaintEvent(void* ptr, void* v);
void QCheckBox_PaintEventDefault(void* ptr, void* v);
void QCheckBox_SetCheckState(void* ptr, int state);
void* QCheckBox_SizeHint(void* ptr);
void* QCheckBox_SizeHintDefault(void* ptr);
void QCheckBox_ConnectStateChanged(void* ptr);
void QCheckBox_DisconnectStateChanged(void* ptr);
void QCheckBox_StateChanged(void* ptr, int state);
void QCheckBox_DestroyQCheckBox(void* ptr);
void QCheckBox_ChangeEvent(void* ptr, void* e);
void QCheckBox_ChangeEventDefault(void* ptr, void* e);
void QCheckBox_FocusInEvent(void* ptr, void* e);
void QCheckBox_FocusInEventDefault(void* ptr, void* e);
void QCheckBox_FocusOutEvent(void* ptr, void* e);
void QCheckBox_FocusOutEventDefault(void* ptr, void* e);
void QCheckBox_KeyPressEvent(void* ptr, void* e);
void QCheckBox_KeyPressEventDefault(void* ptr, void* e);
void QCheckBox_KeyReleaseEvent(void* ptr, void* e);
void QCheckBox_KeyReleaseEventDefault(void* ptr, void* e);
void QCheckBox_MousePressEvent(void* ptr, void* e);
void QCheckBox_MousePressEventDefault(void* ptr, void* e);
void QCheckBox_MouseReleaseEvent(void* ptr, void* e);
void QCheckBox_MouseReleaseEventDefault(void* ptr, void* e);
void QCheckBox_TimerEvent(void* ptr, void* e);
void QCheckBox_TimerEventDefault(void* ptr, void* e);
void QCheckBox_ActionEvent(void* ptr, void* event);
void QCheckBox_ActionEventDefault(void* ptr, void* event);
void QCheckBox_DragEnterEvent(void* ptr, void* event);
void QCheckBox_DragEnterEventDefault(void* ptr, void* event);
void QCheckBox_DragLeaveEvent(void* ptr, void* event);
void QCheckBox_DragLeaveEventDefault(void* ptr, void* event);
void QCheckBox_DragMoveEvent(void* ptr, void* event);
void QCheckBox_DragMoveEventDefault(void* ptr, void* event);
void QCheckBox_DropEvent(void* ptr, void* event);
void QCheckBox_DropEventDefault(void* ptr, void* event);
void QCheckBox_EnterEvent(void* ptr, void* event);
void QCheckBox_EnterEventDefault(void* ptr, void* event);
void QCheckBox_HideEvent(void* ptr, void* event);
void QCheckBox_HideEventDefault(void* ptr, void* event);
void QCheckBox_LeaveEvent(void* ptr, void* event);
void QCheckBox_LeaveEventDefault(void* ptr, void* event);
void QCheckBox_MoveEvent(void* ptr, void* event);
void QCheckBox_MoveEventDefault(void* ptr, void* event);
void QCheckBox_SetVisible(void* ptr, int visible);
void QCheckBox_SetVisibleDefault(void* ptr, int visible);
void QCheckBox_ShowEvent(void* ptr, void* event);
void QCheckBox_ShowEventDefault(void* ptr, void* event);
void QCheckBox_CloseEvent(void* ptr, void* event);
void QCheckBox_CloseEventDefault(void* ptr, void* event);
void QCheckBox_ContextMenuEvent(void* ptr, void* event);
void QCheckBox_ContextMenuEventDefault(void* ptr, void* event);
void QCheckBox_InitPainter(void* ptr, void* painter);
void QCheckBox_InitPainterDefault(void* ptr, void* painter);
void QCheckBox_InputMethodEvent(void* ptr, void* event);
void QCheckBox_InputMethodEventDefault(void* ptr, void* event);
void QCheckBox_MouseDoubleClickEvent(void* ptr, void* event);
void QCheckBox_MouseDoubleClickEventDefault(void* ptr, void* event);
void QCheckBox_ResizeEvent(void* ptr, void* event);
void QCheckBox_ResizeEventDefault(void* ptr, void* event);
void QCheckBox_TabletEvent(void* ptr, void* event);
void QCheckBox_TabletEventDefault(void* ptr, void* event);
void QCheckBox_WheelEvent(void* ptr, void* event);
void QCheckBox_WheelEventDefault(void* ptr, void* event);
void QCheckBox_ChildEvent(void* ptr, void* event);
void QCheckBox_ChildEventDefault(void* ptr, void* event);
void QCheckBox_CustomEvent(void* ptr, void* event);
void QCheckBox_CustomEventDefault(void* ptr, void* event);
void* QColorDialog_CurrentColor(void* ptr);
int QColorDialog_Options(void* ptr);
void QColorDialog_SetCurrentColor(void* ptr, void* color);
void QColorDialog_SetOptions(void* ptr, int options);
void* QColorDialog_NewQColorDialog(void* parent);
void* QColorDialog_NewQColorDialog2(void* initial, void* parent);
void QColorDialog_ChangeEvent(void* ptr, void* e);
void QColorDialog_ChangeEventDefault(void* ptr, void* e);
void QColorDialog_ConnectColorSelected(void* ptr);
void QColorDialog_DisconnectColorSelected(void* ptr);
void QColorDialog_ColorSelected(void* ptr, void* color);
void QColorDialog_ConnectCurrentColorChanged(void* ptr);
void QColorDialog_DisconnectCurrentColorChanged(void* ptr);
void QColorDialog_CurrentColorChanged(void* ptr, void* color);
void* QColorDialog_QColorDialog_CustomColor(int index);
int QColorDialog_QColorDialog_CustomCount();
void QColorDialog_Done(void* ptr, int result);
void QColorDialog_DoneDefault(void* ptr, int result);
void* QColorDialog_QColorDialog_GetColor(void* initial, void* parent, char* title, int options);
void QColorDialog_Open(void* ptr, void* receiver, char* member);
void* QColorDialog_SelectedColor(void* ptr);
void QColorDialog_QColorDialog_SetCustomColor(int index, void* color);
void QColorDialog_SetOption(void* ptr, int option, int on);
void QColorDialog_QColorDialog_SetStandardColor(int index, void* color);
void QColorDialog_SetVisible(void* ptr, int visible);
void QColorDialog_SetVisibleDefault(void* ptr, int visible);
void* QColorDialog_QColorDialog_StandardColor(int index);
int QColorDialog_TestOption(void* ptr, int option);
void QColorDialog_DestroyQColorDialog(void* ptr);
void QColorDialog_Accept(void* ptr);
void QColorDialog_AcceptDefault(void* ptr);
void QColorDialog_CloseEvent(void* ptr, void* e);
void QColorDialog_CloseEventDefault(void* ptr, void* e);
void QColorDialog_ContextMenuEvent(void* ptr, void* e);
void QColorDialog_ContextMenuEventDefault(void* ptr, void* e);
void QColorDialog_KeyPressEvent(void* ptr, void* e);
void QColorDialog_KeyPressEventDefault(void* ptr, void* e);
void QColorDialog_Reject(void* ptr);
void QColorDialog_RejectDefault(void* ptr);
void QColorDialog_ResizeEvent(void* ptr, void* v);
void QColorDialog_ResizeEventDefault(void* ptr, void* v);
void QColorDialog_ShowEvent(void* ptr, void* event);
void QColorDialog_ShowEventDefault(void* ptr, void* event);
void QColorDialog_ActionEvent(void* ptr, void* event);
void QColorDialog_ActionEventDefault(void* ptr, void* event);
void QColorDialog_DragEnterEvent(void* ptr, void* event);
void QColorDialog_DragEnterEventDefault(void* ptr, void* event);
void QColorDialog_DragLeaveEvent(void* ptr, void* event);
void QColorDialog_DragLeaveEventDefault(void* ptr, void* event);
void QColorDialog_DragMoveEvent(void* ptr, void* event);
void QColorDialog_DragMoveEventDefault(void* ptr, void* event);
void QColorDialog_DropEvent(void* ptr, void* event);
void QColorDialog_DropEventDefault(void* ptr, void* event);
void QColorDialog_EnterEvent(void* ptr, void* event);
void QColorDialog_EnterEventDefault(void* ptr, void* event);
void QColorDialog_FocusInEvent(void* ptr, void* event);
void QColorDialog_FocusInEventDefault(void* ptr, void* event);
void QColorDialog_FocusOutEvent(void* ptr, void* event);
void QColorDialog_FocusOutEventDefault(void* ptr, void* event);
void QColorDialog_HideEvent(void* ptr, void* event);
void QColorDialog_HideEventDefault(void* ptr, void* event);
void QColorDialog_LeaveEvent(void* ptr, void* event);
void QColorDialog_LeaveEventDefault(void* ptr, void* event);
void QColorDialog_MoveEvent(void* ptr, void* event);
void QColorDialog_MoveEventDefault(void* ptr, void* event);
void QColorDialog_PaintEvent(void* ptr, void* event);
void QColorDialog_PaintEventDefault(void* ptr, void* event);
void QColorDialog_InitPainter(void* ptr, void* painter);
void QColorDialog_InitPainterDefault(void* ptr, void* painter);
void QColorDialog_InputMethodEvent(void* ptr, void* event);
void QColorDialog_InputMethodEventDefault(void* ptr, void* event);
void QColorDialog_KeyReleaseEvent(void* ptr, void* event);
void QColorDialog_KeyReleaseEventDefault(void* ptr, void* event);
void QColorDialog_MouseDoubleClickEvent(void* ptr, void* event);
void QColorDialog_MouseDoubleClickEventDefault(void* ptr, void* event);
void QColorDialog_MouseMoveEvent(void* ptr, void* event);
void QColorDialog_MouseMoveEventDefault(void* ptr, void* event);
void QColorDialog_MousePressEvent(void* ptr, void* event);
void QColorDialog_MousePressEventDefault(void* ptr, void* event);
void QColorDialog_MouseReleaseEvent(void* ptr, void* event);
void QColorDialog_MouseReleaseEventDefault(void* ptr, void* event);
void QColorDialog_TabletEvent(void* ptr, void* event);
void QColorDialog_TabletEventDefault(void* ptr, void* event);
void QColorDialog_WheelEvent(void* ptr, void* event);
void QColorDialog_WheelEventDefault(void* ptr, void* event);
void QColorDialog_TimerEvent(void* ptr, void* event);
void QColorDialog_TimerEventDefault(void* ptr, void* event);
void QColorDialog_ChildEvent(void* ptr, void* event);
void QColorDialog_ChildEventDefault(void* ptr, void* event);
void QColorDialog_CustomEvent(void* ptr, void* event);
void QColorDialog_CustomEventDefault(void* ptr, void* event);
void* QColormap_NewQColormap(void* colormap);
int QColormap_Depth(void* ptr);
int QColormap_Mode(void* ptr);
int QColormap_Size(void* ptr);
void QColormap_DestroyQColormap(void* ptr);
int QColumnView_ResizeGripsVisible(void* ptr);
void QColumnView_SetResizeGripsVisible(void* ptr, int visible);
void* QColumnView_NewQColumnView(void* parent);
void* QColumnView_CreateColumn(void* ptr, void* index);
void* QColumnView_CreateColumnDefault(void* ptr, void* index);
void QColumnView_CurrentChanged(void* ptr, void* current, void* previous);
void QColumnView_CurrentChangedDefault(void* ptr, void* current, void* previous);
int QColumnView_HorizontalOffset(void* ptr);
int QColumnView_HorizontalOffsetDefault(void* ptr);
void* QColumnView_IndexAt(void* ptr, void* point);
void* QColumnView_IndexAtDefault(void* ptr, void* point);
int QColumnView_IsIndexHidden(void* ptr, void* index);
int QColumnView_IsIndexHiddenDefault(void* ptr, void* index);
void* QColumnView_MoveCursor(void* ptr, int cursorAction, int modifiers);
void* QColumnView_MoveCursorDefault(void* ptr, int cursorAction, int modifiers);
void* QColumnView_PreviewWidget(void* ptr);
void QColumnView_ResizeEvent(void* ptr, void* event);
void QColumnView_ResizeEventDefault(void* ptr, void* event);
void QColumnView_RowsInserted(void* ptr, void* parent, int start, int end);
void QColumnView_RowsInsertedDefault(void* ptr, void* parent, int start, int end);
void QColumnView_ScrollContentsBy(void* ptr, int dx, int dy);
void QColumnView_ScrollContentsByDefault(void* ptr, int dx, int dy);
void QColumnView_ScrollTo(void* ptr, void* index, int hint);
void QColumnView_ScrollToDefault(void* ptr, void* index, int hint);
void QColumnView_SelectAll(void* ptr);
void QColumnView_SelectAllDefault(void* ptr);
void QColumnView_SetModel(void* ptr, void* model);
void QColumnView_SetModelDefault(void* ptr, void* model);
void QColumnView_SetPreviewWidget(void* ptr, void* widget);
void QColumnView_SetRootIndex(void* ptr, void* index);
void QColumnView_SetRootIndexDefault(void* ptr, void* index);
void QColumnView_SetSelection(void* ptr, void* rect, int command);
void QColumnView_SetSelectionDefault(void* ptr, void* rect, int command);
void QColumnView_SetSelectionModel(void* ptr, void* newSelectionModel);
void QColumnView_SetSelectionModelDefault(void* ptr, void* newSelectionModel);
void* QColumnView_SizeHint(void* ptr);
void* QColumnView_SizeHintDefault(void* ptr);
void QColumnView_ConnectUpdatePreviewWidget(void* ptr);
void QColumnView_DisconnectUpdatePreviewWidget(void* ptr);
void QColumnView_UpdatePreviewWidget(void* ptr, void* index);
int QColumnView_VerticalOffset(void* ptr);
int QColumnView_VerticalOffsetDefault(void* ptr);
void* QColumnView_VisualRect(void* ptr, void* index);
void* QColumnView_VisualRectDefault(void* ptr, void* index);
void* QColumnView_VisualRegionForSelection(void* ptr, void* selection);
void* QColumnView_VisualRegionForSelectionDefault(void* ptr, void* selection);
void QColumnView_DestroyQColumnView(void* ptr);
void QColumnView_DragLeaveEvent(void* ptr, void* event);
void QColumnView_DragLeaveEventDefault(void* ptr, void* event);
void QColumnView_CloseEditor(void* ptr, void* editor, int hint);
void QColumnView_CloseEditorDefault(void* ptr, void* editor, int hint);
void QColumnView_CommitData(void* ptr, void* editor);
void QColumnView_CommitDataDefault(void* ptr, void* editor);
void QColumnView_DragEnterEvent(void* ptr, void* event);
void QColumnView_DragEnterEventDefault(void* ptr, void* event);
void QColumnView_DragMoveEvent(void* ptr, void* event);
void QColumnView_DragMoveEventDefault(void* ptr, void* event);
void QColumnView_DropEvent(void* ptr, void* event);
void QColumnView_DropEventDefault(void* ptr, void* event);
void QColumnView_EditorDestroyed(void* ptr, void* editor);
void QColumnView_EditorDestroyedDefault(void* ptr, void* editor);
void QColumnView_FocusInEvent(void* ptr, void* event);
void QColumnView_FocusInEventDefault(void* ptr, void* event);
void QColumnView_FocusOutEvent(void* ptr, void* event);
void QColumnView_FocusOutEventDefault(void* ptr, void* event);
void QColumnView_InputMethodEvent(void* ptr, void* event);
void QColumnView_InputMethodEventDefault(void* ptr, void* event);
void QColumnView_KeyPressEvent(void* ptr, void* event);
void QColumnView_KeyPressEventDefault(void* ptr, void* event);
void QColumnView_KeyboardSearch(void* ptr, char* search);
void QColumnView_KeyboardSearchDefault(void* ptr, char* search);
void QColumnView_MouseDoubleClickEvent(void* ptr, void* event);
void QColumnView_MouseDoubleClickEventDefault(void* ptr, void* event);
void QColumnView_MouseMoveEvent(void* ptr, void* event);
void QColumnView_MouseMoveEventDefault(void* ptr, void* event);
void QColumnView_MousePressEvent(void* ptr, void* event);
void QColumnView_MousePressEventDefault(void* ptr, void* event);
void QColumnView_MouseReleaseEvent(void* ptr, void* event);
void QColumnView_MouseReleaseEventDefault(void* ptr, void* event);
void QColumnView_Reset(void* ptr);
void QColumnView_ResetDefault(void* ptr);
void QColumnView_RowsAboutToBeRemoved(void* ptr, void* parent, int start, int end);
void QColumnView_RowsAboutToBeRemovedDefault(void* ptr, void* parent, int start, int end);
void QColumnView_StartDrag(void* ptr, int supportedActions);
void QColumnView_StartDragDefault(void* ptr, int supportedActions);
void QColumnView_TimerEvent(void* ptr, void* event);
void QColumnView_TimerEventDefault(void* ptr, void* event);
void QColumnView_UpdateGeometries(void* ptr);
void QColumnView_UpdateGeometriesDefault(void* ptr);
void QColumnView_PaintEvent(void* ptr, void* event);
void QColumnView_PaintEventDefault(void* ptr, void* event);
void QColumnView_ContextMenuEvent(void* ptr, void* e);
void QColumnView_ContextMenuEventDefault(void* ptr, void* e);
void QColumnView_SetupViewport(void* ptr, void* viewport);
void QColumnView_SetupViewportDefault(void* ptr, void* viewport);
void QColumnView_WheelEvent(void* ptr, void* e);
void QColumnView_WheelEventDefault(void* ptr, void* e);
void QColumnView_ChangeEvent(void* ptr, void* ev);
void QColumnView_ChangeEventDefault(void* ptr, void* ev);
void QColumnView_ActionEvent(void* ptr, void* event);
void QColumnView_ActionEventDefault(void* ptr, void* event);
void QColumnView_EnterEvent(void* ptr, void* event);
void QColumnView_EnterEventDefault(void* ptr, void* event);
void QColumnView_HideEvent(void* ptr, void* event);
void QColumnView_HideEventDefault(void* ptr, void* event);
void QColumnView_LeaveEvent(void* ptr, void* event);
void QColumnView_LeaveEventDefault(void* ptr, void* event);
void QColumnView_MoveEvent(void* ptr, void* event);
void QColumnView_MoveEventDefault(void* ptr, void* event);
void QColumnView_SetVisible(void* ptr, int visible);
void QColumnView_SetVisibleDefault(void* ptr, int visible);
void QColumnView_ShowEvent(void* ptr, void* event);
void QColumnView_ShowEventDefault(void* ptr, void* event);
void QColumnView_CloseEvent(void* ptr, void* event);
void QColumnView_CloseEventDefault(void* ptr, void* event);
void QColumnView_InitPainter(void* ptr, void* painter);
void QColumnView_InitPainterDefault(void* ptr, void* painter);
void QColumnView_KeyReleaseEvent(void* ptr, void* event);
void QColumnView_KeyReleaseEventDefault(void* ptr, void* event);
void QColumnView_TabletEvent(void* ptr, void* event);
void QColumnView_TabletEventDefault(void* ptr, void* event);
void QColumnView_ChildEvent(void* ptr, void* event);
void QColumnView_ChildEventDefault(void* ptr, void* event);
void QColumnView_CustomEvent(void* ptr, void* event);
void QColumnView_CustomEventDefault(void* ptr, void* event);
int QComboBox_Count(void* ptr);
void* QComboBox_CurrentData(void* ptr, int role);
int QComboBox_CurrentIndex(void* ptr);
char* QComboBox_CurrentText(void* ptr);
int QComboBox_DuplicatesEnabled(void* ptr);
int QComboBox_HasFrame(void* ptr);
void* QComboBox_IconSize(void* ptr);
int QComboBox_InsertPolicy(void* ptr);
int QComboBox_IsEditable(void* ptr);
int QComboBox_MaxCount(void* ptr);
int QComboBox_MaxVisibleItems(void* ptr);
int QComboBox_MinimumContentsLength(void* ptr);
int QComboBox_ModelColumn(void* ptr);
void QComboBox_SetCompleter(void* ptr, void* completer);
void QComboBox_SetCurrentIndex(void* ptr, int index);
void QComboBox_SetCurrentText(void* ptr, char* text);
void QComboBox_SetDuplicatesEnabled(void* ptr, int enable);
void QComboBox_SetEditable(void* ptr, int editable);
void QComboBox_SetFrame(void* ptr, int v);
void QComboBox_SetIconSize(void* ptr, void* size);
void QComboBox_SetInsertPolicy(void* ptr, int policy);
void QComboBox_SetMaxCount(void* ptr, int max);
void QComboBox_SetMaxVisibleItems(void* ptr, int maxItems);
void QComboBox_SetMinimumContentsLength(void* ptr, int characters);
void QComboBox_SetModelColumn(void* ptr, int visibleColumn);
void QComboBox_SetSizeAdjustPolicy(void* ptr, int policy);
void QComboBox_SetValidator(void* ptr, void* validator);
int QComboBox_SizeAdjustPolicy(void* ptr);
void* QComboBox_NewQComboBox(void* parent);
void QComboBox_ConnectActivated2(void* ptr);
void QComboBox_DisconnectActivated2(void* ptr);
void QComboBox_Activated2(void* ptr, char* text);
void QComboBox_ConnectActivated(void* ptr);
void QComboBox_DisconnectActivated(void* ptr);
void QComboBox_Activated(void* ptr, int index);
void QComboBox_AddItem2(void* ptr, void* icon, char* text, void* userData);
void QComboBox_AddItem(void* ptr, char* text, void* userData);
void QComboBox_AddItems(void* ptr, char* texts);
void QComboBox_ChangeEvent(void* ptr, void* e);
void QComboBox_ChangeEventDefault(void* ptr, void* e);
void QComboBox_Clear(void* ptr);
void QComboBox_ClearEditText(void* ptr);
void* QComboBox_Completer(void* ptr);
void QComboBox_ContextMenuEvent(void* ptr, void* e);
void QComboBox_ContextMenuEventDefault(void* ptr, void* e);
void QComboBox_ConnectCurrentIndexChanged2(void* ptr);
void QComboBox_DisconnectCurrentIndexChanged2(void* ptr);
void QComboBox_CurrentIndexChanged2(void* ptr, char* text);
void QComboBox_ConnectCurrentIndexChanged(void* ptr);
void QComboBox_DisconnectCurrentIndexChanged(void* ptr);
void QComboBox_CurrentIndexChanged(void* ptr, int index);
void QComboBox_ConnectCurrentTextChanged(void* ptr);
void QComboBox_DisconnectCurrentTextChanged(void* ptr);
void QComboBox_CurrentTextChanged(void* ptr, char* text);
void QComboBox_ConnectEditTextChanged(void* ptr);
void QComboBox_DisconnectEditTextChanged(void* ptr);
void QComboBox_EditTextChanged(void* ptr, char* text);
int QComboBox_Event(void* ptr, void* event);
int QComboBox_EventDefault(void* ptr, void* event);
int QComboBox_FindData(void* ptr, void* data, int role, int flags);
int QComboBox_FindText(void* ptr, char* text, int flags);
void QComboBox_FocusInEvent(void* ptr, void* e);
void QComboBox_FocusInEventDefault(void* ptr, void* e);
void QComboBox_FocusOutEvent(void* ptr, void* e);
void QComboBox_FocusOutEventDefault(void* ptr, void* e);
void QComboBox_HideEvent(void* ptr, void* e);
void QComboBox_HideEventDefault(void* ptr, void* e);
void QComboBox_HidePopup(void* ptr);
void QComboBox_HidePopupDefault(void* ptr);
void QComboBox_ConnectHighlighted2(void* ptr);
void QComboBox_DisconnectHighlighted2(void* ptr);
void QComboBox_Highlighted2(void* ptr, char* text);
void QComboBox_ConnectHighlighted(void* ptr);
void QComboBox_DisconnectHighlighted(void* ptr);
void QComboBox_Highlighted(void* ptr, int index);
void QComboBox_InputMethodEvent(void* ptr, void* e);
void QComboBox_InputMethodEventDefault(void* ptr, void* e);
void* QComboBox_InputMethodQuery(void* ptr, int query);
void* QComboBox_InputMethodQueryDefault(void* ptr, int query);
void QComboBox_InsertItem2(void* ptr, int index, void* icon, char* text, void* userData);
void QComboBox_InsertItem(void* ptr, int index, char* text, void* userData);
void QComboBox_InsertItems(void* ptr, int index, char* list);
void QComboBox_InsertSeparator(void* ptr, int index);
void* QComboBox_ItemData(void* ptr, int index, int role);
void* QComboBox_ItemDelegate(void* ptr);
void* QComboBox_ItemIcon(void* ptr, int index);
char* QComboBox_ItemText(void* ptr, int index);
void QComboBox_KeyPressEvent(void* ptr, void* e);
void QComboBox_KeyPressEventDefault(void* ptr, void* e);
void QComboBox_KeyReleaseEvent(void* ptr, void* e);
void QComboBox_KeyReleaseEventDefault(void* ptr, void* e);
void* QComboBox_LineEdit(void* ptr);
void* QComboBox_MinimumSizeHint(void* ptr);
void* QComboBox_MinimumSizeHintDefault(void* ptr);
void* QComboBox_Model(void* ptr);
void QComboBox_MousePressEvent(void* ptr, void* e);
void QComboBox_MousePressEventDefault(void* ptr, void* e);
void QComboBox_MouseReleaseEvent(void* ptr, void* e);
void QComboBox_MouseReleaseEventDefault(void* ptr, void* e);
void QComboBox_PaintEvent(void* ptr, void* e);
void QComboBox_PaintEventDefault(void* ptr, void* e);
void QComboBox_RemoveItem(void* ptr, int index);
void QComboBox_ResizeEvent(void* ptr, void* e);
void QComboBox_ResizeEventDefault(void* ptr, void* e);
void* QComboBox_RootModelIndex(void* ptr);
void QComboBox_SetEditText(void* ptr, char* text);
void QComboBox_SetItemData(void* ptr, int index, void* value, int role);
void QComboBox_SetItemDelegate(void* ptr, void* delegate);
void QComboBox_SetItemIcon(void* ptr, int index, void* icon);
void QComboBox_SetItemText(void* ptr, int index, char* text);
void QComboBox_SetLineEdit(void* ptr, void* edit);
void QComboBox_SetModel(void* ptr, void* model);
void QComboBox_SetRootModelIndex(void* ptr, void* index);
void QComboBox_SetView(void* ptr, void* itemView);
void QComboBox_ShowEvent(void* ptr, void* e);
void QComboBox_ShowEventDefault(void* ptr, void* e);
void QComboBox_ShowPopup(void* ptr);
void QComboBox_ShowPopupDefault(void* ptr);
void* QComboBox_SizeHint(void* ptr);
void* QComboBox_SizeHintDefault(void* ptr);
void* QComboBox_Validator(void* ptr);
void* QComboBox_View(void* ptr);
void QComboBox_WheelEvent(void* ptr, void* e);
void QComboBox_WheelEventDefault(void* ptr, void* e);
void QComboBox_DestroyQComboBox(void* ptr);
void QComboBox_ActionEvent(void* ptr, void* event);
void QComboBox_ActionEventDefault(void* ptr, void* event);
void QComboBox_DragEnterEvent(void* ptr, void* event);
void QComboBox_DragEnterEventDefault(void* ptr, void* event);
void QComboBox_DragLeaveEvent(void* ptr, void* event);
void QComboBox_DragLeaveEventDefault(void* ptr, void* event);
void QComboBox_DragMoveEvent(void* ptr, void* event);
void QComboBox_DragMoveEventDefault(void* ptr, void* event);
void QComboBox_DropEvent(void* ptr, void* event);
void QComboBox_DropEventDefault(void* ptr, void* event);
void QComboBox_EnterEvent(void* ptr, void* event);
void QComboBox_EnterEventDefault(void* ptr, void* event);
void QComboBox_LeaveEvent(void* ptr, void* event);
void QComboBox_LeaveEventDefault(void* ptr, void* event);
void QComboBox_MoveEvent(void* ptr, void* event);
void QComboBox_MoveEventDefault(void* ptr, void* event);
void QComboBox_SetVisible(void* ptr, int visible);
void QComboBox_SetVisibleDefault(void* ptr, int visible);
void QComboBox_CloseEvent(void* ptr, void* event);
void QComboBox_CloseEventDefault(void* ptr, void* event);
void QComboBox_InitPainter(void* ptr, void* painter);
void QComboBox_InitPainterDefault(void* ptr, void* painter);
void QComboBox_MouseDoubleClickEvent(void* ptr, void* event);
void QComboBox_MouseDoubleClickEventDefault(void* ptr, void* event);
void QComboBox_MouseMoveEvent(void* ptr, void* event);
void QComboBox_MouseMoveEventDefault(void* ptr, void* event);
void QComboBox_TabletEvent(void* ptr, void* event);
void QComboBox_TabletEventDefault(void* ptr, void* event);
void QComboBox_TimerEvent(void* ptr, void* event);
void QComboBox_TimerEventDefault(void* ptr, void* event);
void QComboBox_ChildEvent(void* ptr, void* event);
void QComboBox_ChildEventDefault(void* ptr, void* event);
void QComboBox_CustomEvent(void* ptr, void* event);
void QComboBox_CustomEventDefault(void* ptr, void* event);
char* QCommandLinkButton_Description(void* ptr);
void QCommandLinkButton_SetDescription(void* ptr, char* description);
void* QCommandLinkButton_NewQCommandLinkButton(void* parent);
void* QCommandLinkButton_NewQCommandLinkButton2(char* text, void* parent);
void* QCommandLinkButton_NewQCommandLinkButton3(char* text, char* description, void* parent);
int QCommandLinkButton_Event(void* ptr, void* e);
int QCommandLinkButton_EventDefault(void* ptr, void* e);
int QCommandLinkButton_HeightForWidth(void* ptr, int width);
int QCommandLinkButton_HeightForWidthDefault(void* ptr, int width);
void* QCommandLinkButton_MinimumSizeHint(void* ptr);
void* QCommandLinkButton_MinimumSizeHintDefault(void* ptr);
void QCommandLinkButton_PaintEvent(void* ptr, void* v);
void QCommandLinkButton_PaintEventDefault(void* ptr, void* v);
void* QCommandLinkButton_SizeHint(void* ptr);
void* QCommandLinkButton_SizeHintDefault(void* ptr);
void QCommandLinkButton_DestroyQCommandLinkButton(void* ptr);
void QCommandLinkButton_FocusInEvent(void* ptr, void* e);
void QCommandLinkButton_FocusInEventDefault(void* ptr, void* e);
void QCommandLinkButton_FocusOutEvent(void* ptr, void* e);
void QCommandLinkButton_FocusOutEventDefault(void* ptr, void* e);
void QCommandLinkButton_KeyPressEvent(void* ptr, void* e);
void QCommandLinkButton_KeyPressEventDefault(void* ptr, void* e);
void QCommandLinkButton_ChangeEvent(void* ptr, void* e);
void QCommandLinkButton_ChangeEventDefault(void* ptr, void* e);
void QCommandLinkButton_CheckStateSet(void* ptr);
void QCommandLinkButton_CheckStateSetDefault(void* ptr);
void QCommandLinkButton_KeyReleaseEvent(void* ptr, void* e);
void QCommandLinkButton_KeyReleaseEventDefault(void* ptr, void* e);
void QCommandLinkButton_MouseMoveEvent(void* ptr, void* e);
void QCommandLinkButton_MouseMoveEventDefault(void* ptr, void* e);
void QCommandLinkButton_MousePressEvent(void* ptr, void* e);
void QCommandLinkButton_MousePressEventDefault(void* ptr, void* e);
void QCommandLinkButton_MouseReleaseEvent(void* ptr, void* e);
void QCommandLinkButton_MouseReleaseEventDefault(void* ptr, void* e);
void QCommandLinkButton_NextCheckState(void* ptr);
void QCommandLinkButton_NextCheckStateDefault(void* ptr);
void QCommandLinkButton_TimerEvent(void* ptr, void* e);
void QCommandLinkButton_TimerEventDefault(void* ptr, void* e);
void QCommandLinkButton_ActionEvent(void* ptr, void* event);
void QCommandLinkButton_ActionEventDefault(void* ptr, void* event);
void QCommandLinkButton_DragEnterEvent(void* ptr, void* event);
void QCommandLinkButton_DragEnterEventDefault(void* ptr, void* event);
void QCommandLinkButton_DragLeaveEvent(void* ptr, void* event);
void QCommandLinkButton_DragLeaveEventDefault(void* ptr, void* event);
void QCommandLinkButton_DragMoveEvent(void* ptr, void* event);
void QCommandLinkButton_DragMoveEventDefault(void* ptr, void* event);
void QCommandLinkButton_DropEvent(void* ptr, void* event);
void QCommandLinkButton_DropEventDefault(void* ptr, void* event);
void QCommandLinkButton_EnterEvent(void* ptr, void* event);
void QCommandLinkButton_EnterEventDefault(void* ptr, void* event);
void QCommandLinkButton_HideEvent(void* ptr, void* event);
void QCommandLinkButton_HideEventDefault(void* ptr, void* event);
void QCommandLinkButton_LeaveEvent(void* ptr, void* event);
void QCommandLinkButton_LeaveEventDefault(void* ptr, void* event);
void QCommandLinkButton_MoveEvent(void* ptr, void* event);
void QCommandLinkButton_MoveEventDefault(void* ptr, void* event);
void QCommandLinkButton_SetVisible(void* ptr, int visible);
void QCommandLinkButton_SetVisibleDefault(void* ptr, int visible);
void QCommandLinkButton_ShowEvent(void* ptr, void* event);
void QCommandLinkButton_ShowEventDefault(void* ptr, void* event);
void QCommandLinkButton_CloseEvent(void* ptr, void* event);
void QCommandLinkButton_CloseEventDefault(void* ptr, void* event);
void QCommandLinkButton_ContextMenuEvent(void* ptr, void* event);
void QCommandLinkButton_ContextMenuEventDefault(void* ptr, void* event);
void QCommandLinkButton_InitPainter(void* ptr, void* painter);
void QCommandLinkButton_InitPainterDefault(void* ptr, void* painter);
void QCommandLinkButton_InputMethodEvent(void* ptr, void* event);
void QCommandLinkButton_InputMethodEventDefault(void* ptr, void* event);
void QCommandLinkButton_MouseDoubleClickEvent(void* ptr, void* event);
void QCommandLinkButton_MouseDoubleClickEventDefault(void* ptr, void* event);
void QCommandLinkButton_ResizeEvent(void* ptr, void* event);
void QCommandLinkButton_ResizeEventDefault(void* ptr, void* event);
void QCommandLinkButton_TabletEvent(void* ptr, void* event);
void QCommandLinkButton_TabletEventDefault(void* ptr, void* event);
void QCommandLinkButton_WheelEvent(void* ptr, void* event);
void QCommandLinkButton_WheelEventDefault(void* ptr, void* event);
void QCommandLinkButton_ChildEvent(void* ptr, void* event);
void QCommandLinkButton_ChildEventDefault(void* ptr, void* event);
void QCommandLinkButton_CustomEvent(void* ptr, void* event);
void QCommandLinkButton_CustomEventDefault(void* ptr, void* event);
void QCommonStyle_DrawControl(void* ptr, int element, void* opt, void* p, void* widget);
void QCommonStyle_DrawControlDefault(void* ptr, int element, void* opt, void* p, void* widget);
void QCommonStyle_DrawPrimitive(void* ptr, int pe, void* opt, void* p, void* widget);
void QCommonStyle_DrawPrimitiveDefault(void* ptr, int pe, void* opt, void* p, void* widget);
void QCommonStyle_DrawComplexControl(void* ptr, int cc, void* opt, void* p, void* widget);
void QCommonStyle_DrawComplexControlDefault(void* ptr, int cc, void* opt, void* p, void* widget);
int QCommonStyle_HitTestComplexControl(void* ptr, int cc, void* opt, void* pt, void* widget);
int QCommonStyle_HitTestComplexControlDefault(void* ptr, int cc, void* opt, void* pt, void* widget);
int QCommonStyle_LayoutSpacing(void* ptr, int control1, int control2, int orientation, void* option, void* widget);
int QCommonStyle_LayoutSpacingDefault(void* ptr, int control1, int control2, int orientation, void* option, void* widget);
int QCommonStyle_PixelMetric(void* ptr, int m, void* opt, void* widget);
int QCommonStyle_PixelMetricDefault(void* ptr, int m, void* opt, void* widget);
void* QCommonStyle_SizeFromContents(void* ptr, int ct, void* opt, void* csz, void* widget);
void* QCommonStyle_SizeFromContentsDefault(void* ptr, int ct, void* opt, void* csz, void* widget);
int QCommonStyle_StyleHint(void* ptr, int sh, void* opt, void* widget, void* hret);
int QCommonStyle_StyleHintDefault(void* ptr, int sh, void* opt, void* widget, void* hret);
void* QCommonStyle_SubControlRect(void* ptr, int cc, void* opt, int sc, void* widget);
void* QCommonStyle_SubControlRectDefault(void* ptr, int cc, void* opt, int sc, void* widget);
void* QCommonStyle_SubElementRect(void* ptr, int sr, void* opt, void* widget);
void* QCommonStyle_SubElementRectDefault(void* ptr, int sr, void* opt, void* widget);
void QCommonStyle_Unpolish(void* ptr, void* widget);
void QCommonStyle_UnpolishDefault(void* ptr, void* widget);
void QCommonStyle_DestroyQCommonStyle(void* ptr);
void QCommonStyle_Polish(void* ptr, void* widget);
void QCommonStyle_PolishDefault(void* ptr, void* widget);
void QCommonStyle_TimerEvent(void* ptr, void* event);
void QCommonStyle_TimerEventDefault(void* ptr, void* event);
void QCommonStyle_ChildEvent(void* ptr, void* event);
void QCommonStyle_ChildEventDefault(void* ptr, void* event);
void QCommonStyle_CustomEvent(void* ptr, void* event);
void QCommonStyle_CustomEventDefault(void* ptr, void* event);
int QCompleter_CaseSensitivity(void* ptr);
int QCompleter_CompletionColumn(void* ptr);
int QCompleter_CompletionMode(void* ptr);
char* QCompleter_CompletionPrefix(void* ptr);
int QCompleter_CompletionRole(void* ptr);
int QCompleter_FilterMode(void* ptr);
int QCompleter_MaxVisibleItems(void* ptr);
int QCompleter_ModelSorting(void* ptr);
void QCompleter_SetCaseSensitivity(void* ptr, int caseSensitivity);
void QCompleter_SetCompletionColumn(void* ptr, int column);
void QCompleter_SetCompletionMode(void* ptr, int mode);
void QCompleter_SetCompletionPrefix(void* ptr, char* prefix);
void QCompleter_SetCompletionRole(void* ptr, int role);
void QCompleter_SetFilterMode(void* ptr, int filterMode);
void QCompleter_SetMaxVisibleItems(void* ptr, int maxItems);
void QCompleter_SetModelSorting(void* ptr, int sorting);
void QCompleter_SetWrapAround(void* ptr, int wrap);
int QCompleter_WrapAround(void* ptr);
void* QCompleter_NewQCompleter2(void* model, void* parent);
void* QCompleter_NewQCompleter(void* parent);
void* QCompleter_NewQCompleter3(char* list, void* parent);
void QCompleter_ConnectActivated2(void* ptr);
void QCompleter_DisconnectActivated2(void* ptr);
void QCompleter_Activated2(void* ptr, void* index);
void QCompleter_ConnectActivated(void* ptr);
void QCompleter_DisconnectActivated(void* ptr);
void QCompleter_Activated(void* ptr, char* text);
void QCompleter_Complete(void* ptr, void* rect);
int QCompleter_CompletionCount(void* ptr);
void* QCompleter_CompletionModel(void* ptr);
char* QCompleter_CurrentCompletion(void* ptr);
void* QCompleter_CurrentIndex(void* ptr);
int QCompleter_CurrentRow(void* ptr);
int QCompleter_Event(void* ptr, void* ev);
int QCompleter_EventDefault(void* ptr, void* ev);
int QCompleter_EventFilter(void* ptr, void* o, void* e);
int QCompleter_EventFilterDefault(void* ptr, void* o, void* e);
void QCompleter_ConnectHighlighted2(void* ptr);
void QCompleter_DisconnectHighlighted2(void* ptr);
void QCompleter_Highlighted2(void* ptr, void* index);
void QCompleter_ConnectHighlighted(void* ptr);
void QCompleter_DisconnectHighlighted(void* ptr);
void QCompleter_Highlighted(void* ptr, char* text);
void* QCompleter_Model(void* ptr);
char* QCompleter_PathFromIndex(void* ptr, void* index);
char* QCompleter_PathFromIndexDefault(void* ptr, void* index);
void* QCompleter_Popup(void* ptr);
int QCompleter_SetCurrentRow(void* ptr, int row);
void QCompleter_SetModel(void* ptr, void* model);
void QCompleter_SetPopup(void* ptr, void* popup);
void QCompleter_SetWidget(void* ptr, void* widget);
char* QCompleter_SplitPath(void* ptr, char* path);
char* QCompleter_SplitPathDefault(void* ptr, char* path);
void* QCompleter_Widget(void* ptr);
void QCompleter_DestroyQCompleter(void* ptr);
void QCompleter_TimerEvent(void* ptr, void* event);
void QCompleter_TimerEventDefault(void* ptr, void* event);
void QCompleter_ChildEvent(void* ptr, void* event);
void QCompleter_ChildEventDefault(void* ptr, void* event);
void QCompleter_CustomEvent(void* ptr, void* event);
void QCompleter_CustomEventDefault(void* ptr, void* event);
int QDataWidgetMapper_CurrentIndex(void* ptr);
int QDataWidgetMapper_Orientation(void* ptr);
void QDataWidgetMapper_SetCurrentIndex(void* ptr, int index);
void QDataWidgetMapper_SetCurrentIndexDefault(void* ptr, int index);
void QDataWidgetMapper_SetOrientation(void* ptr, int aOrientation);
void QDataWidgetMapper_SetSubmitPolicy(void* ptr, int policy);
int QDataWidgetMapper_SubmitPolicy(void* ptr);
void* QDataWidgetMapper_NewQDataWidgetMapper(void* parent);
void QDataWidgetMapper_AddMapping(void* ptr, void* widget, int section);
void QDataWidgetMapper_AddMapping2(void* ptr, void* widget, int section, void* propertyName);
void QDataWidgetMapper_ClearMapping(void* ptr);
void QDataWidgetMapper_ConnectCurrentIndexChanged(void* ptr);
void QDataWidgetMapper_DisconnectCurrentIndexChanged(void* ptr);
void QDataWidgetMapper_CurrentIndexChanged(void* ptr, int index);
void* QDataWidgetMapper_ItemDelegate(void* ptr);
void* QDataWidgetMapper_MappedPropertyName(void* ptr, void* widget);
int QDataWidgetMapper_MappedSection(void* ptr, void* widget);
void* QDataWidgetMapper_MappedWidgetAt(void* ptr, int section);
void* QDataWidgetMapper_Model(void* ptr);
void QDataWidgetMapper_RemoveMapping(void* ptr, void* widget);
void QDataWidgetMapper_Revert(void* ptr);
void* QDataWidgetMapper_RootIndex(void* ptr);
void QDataWidgetMapper_SetCurrentModelIndex(void* ptr, void* index);
void QDataWidgetMapper_SetItemDelegate(void* ptr, void* delegate);
void QDataWidgetMapper_SetModel(void* ptr, void* model);
void QDataWidgetMapper_SetRootIndex(void* ptr, void* index);
int QDataWidgetMapper_Submit(void* ptr);
void QDataWidgetMapper_ToFirst(void* ptr);
void QDataWidgetMapper_ToLast(void* ptr);
void QDataWidgetMapper_ToNext(void* ptr);
void QDataWidgetMapper_ToPrevious(void* ptr);
void QDataWidgetMapper_DestroyQDataWidgetMapper(void* ptr);
void QDataWidgetMapper_TimerEvent(void* ptr, void* event);
void QDataWidgetMapper_TimerEventDefault(void* ptr, void* event);
void QDataWidgetMapper_ChildEvent(void* ptr, void* event);
void QDataWidgetMapper_ChildEventDefault(void* ptr, void* event);
void QDataWidgetMapper_CustomEvent(void* ptr, void* event);
void QDataWidgetMapper_CustomEventDefault(void* ptr, void* event);
void* QDateEdit_NewQDateEdit(void* parent);
void* QDateEdit_NewQDateEdit2(void* date, void* parent);
void QDateEdit_DestroyQDateEdit(void* ptr);
void QDateEdit_Clear(void* ptr);
void QDateEdit_ClearDefault(void* ptr);
void QDateEdit_FocusInEvent(void* ptr, void* event);
void QDateEdit_FocusInEventDefault(void* ptr, void* event);
void QDateEdit_KeyPressEvent(void* ptr, void* event);
void QDateEdit_KeyPressEventDefault(void* ptr, void* event);
void QDateEdit_MousePressEvent(void* ptr, void* event);
void QDateEdit_MousePressEventDefault(void* ptr, void* event);
void QDateEdit_PaintEvent(void* ptr, void* event);
void QDateEdit_PaintEventDefault(void* ptr, void* event);
void QDateEdit_StepBy(void* ptr, int steps);
void QDateEdit_StepByDefault(void* ptr, int steps);
void QDateEdit_WheelEvent(void* ptr, void* event);
void QDateEdit_WheelEventDefault(void* ptr, void* event);
void QDateEdit_ChangeEvent(void* ptr, void* event);
void QDateEdit_ChangeEventDefault(void* ptr, void* event);
void QDateEdit_CloseEvent(void* ptr, void* event);
void QDateEdit_CloseEventDefault(void* ptr, void* event);
void QDateEdit_ContextMenuEvent(void* ptr, void* event);
void QDateEdit_ContextMenuEventDefault(void* ptr, void* event);
void QDateEdit_FocusOutEvent(void* ptr, void* event);
void QDateEdit_FocusOutEventDefault(void* ptr, void* event);
void QDateEdit_HideEvent(void* ptr, void* event);
void QDateEdit_HideEventDefault(void* ptr, void* event);
void QDateEdit_KeyReleaseEvent(void* ptr, void* event);
void QDateEdit_KeyReleaseEventDefault(void* ptr, void* event);
void QDateEdit_MouseMoveEvent(void* ptr, void* event);
void QDateEdit_MouseMoveEventDefault(void* ptr, void* event);
void QDateEdit_MouseReleaseEvent(void* ptr, void* event);
void QDateEdit_MouseReleaseEventDefault(void* ptr, void* event);
void QDateEdit_ResizeEvent(void* ptr, void* event);
void QDateEdit_ResizeEventDefault(void* ptr, void* event);
void QDateEdit_ShowEvent(void* ptr, void* event);
void QDateEdit_ShowEventDefault(void* ptr, void* event);
void QDateEdit_TimerEvent(void* ptr, void* event);
void QDateEdit_TimerEventDefault(void* ptr, void* event);
void QDateEdit_ActionEvent(void* ptr, void* event);
void QDateEdit_ActionEventDefault(void* ptr, void* event);
void QDateEdit_DragEnterEvent(void* ptr, void* event);
void QDateEdit_DragEnterEventDefault(void* ptr, void* event);
void QDateEdit_DragLeaveEvent(void* ptr, void* event);
void QDateEdit_DragLeaveEventDefault(void* ptr, void* event);
void QDateEdit_DragMoveEvent(void* ptr, void* event);
void QDateEdit_DragMoveEventDefault(void* ptr, void* event);
void QDateEdit_DropEvent(void* ptr, void* event);
void QDateEdit_DropEventDefault(void* ptr, void* event);
void QDateEdit_EnterEvent(void* ptr, void* event);
void QDateEdit_EnterEventDefault(void* ptr, void* event);
void QDateEdit_LeaveEvent(void* ptr, void* event);
void QDateEdit_LeaveEventDefault(void* ptr, void* event);
void QDateEdit_MoveEvent(void* ptr, void* event);
void QDateEdit_MoveEventDefault(void* ptr, void* event);
void QDateEdit_SetVisible(void* ptr, int visible);
void QDateEdit_SetVisibleDefault(void* ptr, int visible);
void QDateEdit_InitPainter(void* ptr, void* painter);
void QDateEdit_InitPainterDefault(void* ptr, void* painter);
void QDateEdit_InputMethodEvent(void* ptr, void* event);
void QDateEdit_InputMethodEventDefault(void* ptr, void* event);
void QDateEdit_MouseDoubleClickEvent(void* ptr, void* event);
void QDateEdit_MouseDoubleClickEventDefault(void* ptr, void* event);
void QDateEdit_TabletEvent(void* ptr, void* event);
void QDateEdit_TabletEventDefault(void* ptr, void* event);
void QDateEdit_ChildEvent(void* ptr, void* event);
void QDateEdit_ChildEventDefault(void* ptr, void* event);
void QDateEdit_CustomEvent(void* ptr, void* event);
void QDateEdit_CustomEventDefault(void* ptr, void* event);
void* QDateTimeEdit_NewQDateTimeEdit3(void* date, void* parent);
void* QDateTimeEdit_NewQDateTimeEdit4(void* time, void* parent);
int QDateTimeEdit_CalendarPopup(void* ptr);
void QDateTimeEdit_ClearMaximumDate(void* ptr);
void QDateTimeEdit_ClearMaximumDateTime(void* ptr);
void QDateTimeEdit_ClearMaximumTime(void* ptr);
void QDateTimeEdit_ClearMinimumDate(void* ptr);
void QDateTimeEdit_ClearMinimumDateTime(void* ptr);
void QDateTimeEdit_ClearMinimumTime(void* ptr);
int QDateTimeEdit_CurrentSection(void* ptr);
int QDateTimeEdit_CurrentSectionIndex(void* ptr);
void* QDateTimeEdit_DateTime(void* ptr);
char* QDateTimeEdit_DisplayFormat(void* ptr);
int QDateTimeEdit_DisplayedSections(void* ptr);
void* QDateTimeEdit_MaximumDateTime(void* ptr);
void* QDateTimeEdit_MinimumDateTime(void* ptr);
int QDateTimeEdit_SectionCount(void* ptr);
char* QDateTimeEdit_SectionText(void* ptr, int section);
void QDateTimeEdit_SetCalendarPopup(void* ptr, int enable);
void QDateTimeEdit_SetCurrentSection(void* ptr, int section);
void QDateTimeEdit_SetCurrentSectionIndex(void* ptr, int index);
void QDateTimeEdit_SetDate(void* ptr, void* date);
void QDateTimeEdit_SetDateTime(void* ptr, void* dateTime);
void QDateTimeEdit_SetDisplayFormat(void* ptr, char* format);
void QDateTimeEdit_SetMaximumDate(void* ptr, void* max);
void QDateTimeEdit_SetMaximumDateTime(void* ptr, void* dt);
void QDateTimeEdit_SetMaximumTime(void* ptr, void* max);
void QDateTimeEdit_SetMinimumDate(void* ptr, void* min);
void QDateTimeEdit_SetMinimumDateTime(void* ptr, void* dt);
void QDateTimeEdit_SetMinimumTime(void* ptr, void* min);
void QDateTimeEdit_SetTime(void* ptr, void* time);
void QDateTimeEdit_SetTimeSpec(void* ptr, int spec);
int QDateTimeEdit_TimeSpec(void* ptr);
void* QDateTimeEdit_NewQDateTimeEdit(void* parent);
void* QDateTimeEdit_NewQDateTimeEdit2(void* datetime, void* parent);
void* QDateTimeEdit_CalendarWidget(void* ptr);
void QDateTimeEdit_Clear(void* ptr);
void QDateTimeEdit_ClearDefault(void* ptr);
void QDateTimeEdit_ConnectDateTimeChanged(void* ptr);
void QDateTimeEdit_DisconnectDateTimeChanged(void* ptr);
void QDateTimeEdit_DateTimeChanged(void* ptr, void* datetime);
void* QDateTimeEdit_DateTimeFromText(void* ptr, char* text);
void* QDateTimeEdit_DateTimeFromTextDefault(void* ptr, char* text);
int QDateTimeEdit_Event(void* ptr, void* event);
int QDateTimeEdit_EventDefault(void* ptr, void* event);
void QDateTimeEdit_FocusInEvent(void* ptr, void* event);
void QDateTimeEdit_FocusInEventDefault(void* ptr, void* event);
int QDateTimeEdit_FocusNextPrevChild(void* ptr, int next);
int QDateTimeEdit_FocusNextPrevChildDefault(void* ptr, int next);
void QDateTimeEdit_KeyPressEvent(void* ptr, void* event);
void QDateTimeEdit_KeyPressEventDefault(void* ptr, void* event);
void QDateTimeEdit_MousePressEvent(void* ptr, void* event);
void QDateTimeEdit_MousePressEventDefault(void* ptr, void* event);
void QDateTimeEdit_PaintEvent(void* ptr, void* event);
void QDateTimeEdit_PaintEventDefault(void* ptr, void* event);
int QDateTimeEdit_SectionAt(void* ptr, int index);
void QDateTimeEdit_SetCalendarWidget(void* ptr, void* calendarWidget);
void QDateTimeEdit_SetDateRange(void* ptr, void* min, void* max);
void QDateTimeEdit_SetDateTimeRange(void* ptr, void* min, void* max);
void QDateTimeEdit_SetSelectedSection(void* ptr, int section);
void QDateTimeEdit_SetTimeRange(void* ptr, void* min, void* max);
void* QDateTimeEdit_SizeHint(void* ptr);
void* QDateTimeEdit_SizeHintDefault(void* ptr);
void QDateTimeEdit_StepBy(void* ptr, int steps);
void QDateTimeEdit_StepByDefault(void* ptr, int steps);
int QDateTimeEdit_StepEnabled(void* ptr);
int QDateTimeEdit_StepEnabledDefault(void* ptr);
char* QDateTimeEdit_TextFromDateTime(void* ptr, void* dateTime);
char* QDateTimeEdit_TextFromDateTimeDefault(void* ptr, void* dateTime);
void QDateTimeEdit_WheelEvent(void* ptr, void* event);
void QDateTimeEdit_WheelEventDefault(void* ptr, void* event);
void QDateTimeEdit_DestroyQDateTimeEdit(void* ptr);
void QDateTimeEdit_ChangeEvent(void* ptr, void* event);
void QDateTimeEdit_ChangeEventDefault(void* ptr, void* event);
void QDateTimeEdit_CloseEvent(void* ptr, void* event);
void QDateTimeEdit_CloseEventDefault(void* ptr, void* event);
void QDateTimeEdit_ContextMenuEvent(void* ptr, void* event);
void QDateTimeEdit_ContextMenuEventDefault(void* ptr, void* event);
void QDateTimeEdit_FocusOutEvent(void* ptr, void* event);
void QDateTimeEdit_FocusOutEventDefault(void* ptr, void* event);
void QDateTimeEdit_HideEvent(void* ptr, void* event);
void QDateTimeEdit_HideEventDefault(void* ptr, void* event);
void QDateTimeEdit_KeyReleaseEvent(void* ptr, void* event);
void QDateTimeEdit_KeyReleaseEventDefault(void* ptr, void* event);
void QDateTimeEdit_MouseMoveEvent(void* ptr, void* event);
void QDateTimeEdit_MouseMoveEventDefault(void* ptr, void* event);
void QDateTimeEdit_MouseReleaseEvent(void* ptr, void* event);
void QDateTimeEdit_MouseReleaseEventDefault(void* ptr, void* event);
void QDateTimeEdit_ResizeEvent(void* ptr, void* event);
void QDateTimeEdit_ResizeEventDefault(void* ptr, void* event);
void QDateTimeEdit_ShowEvent(void* ptr, void* event);
void QDateTimeEdit_ShowEventDefault(void* ptr, void* event);
void QDateTimeEdit_TimerEvent(void* ptr, void* event);
void QDateTimeEdit_TimerEventDefault(void* ptr, void* event);
void QDateTimeEdit_ActionEvent(void* ptr, void* event);
void QDateTimeEdit_ActionEventDefault(void* ptr, void* event);
void QDateTimeEdit_DragEnterEvent(void* ptr, void* event);
void QDateTimeEdit_DragEnterEventDefault(void* ptr, void* event);
void QDateTimeEdit_DragLeaveEvent(void* ptr, void* event);
void QDateTimeEdit_DragLeaveEventDefault(void* ptr, void* event);
void QDateTimeEdit_DragMoveEvent(void* ptr, void* event);
void QDateTimeEdit_DragMoveEventDefault(void* ptr, void* event);
void QDateTimeEdit_DropEvent(void* ptr, void* event);
void QDateTimeEdit_DropEventDefault(void* ptr, void* event);
void QDateTimeEdit_EnterEvent(void* ptr, void* event);
void QDateTimeEdit_EnterEventDefault(void* ptr, void* event);
void QDateTimeEdit_LeaveEvent(void* ptr, void* event);
void QDateTimeEdit_LeaveEventDefault(void* ptr, void* event);
void QDateTimeEdit_MoveEvent(void* ptr, void* event);
void QDateTimeEdit_MoveEventDefault(void* ptr, void* event);
void QDateTimeEdit_SetVisible(void* ptr, int visible);
void QDateTimeEdit_SetVisibleDefault(void* ptr, int visible);
void QDateTimeEdit_InitPainter(void* ptr, void* painter);
void QDateTimeEdit_InitPainterDefault(void* ptr, void* painter);
void QDateTimeEdit_InputMethodEvent(void* ptr, void* event);
void QDateTimeEdit_InputMethodEventDefault(void* ptr, void* event);
void QDateTimeEdit_MouseDoubleClickEvent(void* ptr, void* event);
void QDateTimeEdit_MouseDoubleClickEventDefault(void* ptr, void* event);
void QDateTimeEdit_TabletEvent(void* ptr, void* event);
void QDateTimeEdit_TabletEventDefault(void* ptr, void* event);
void QDateTimeEdit_ChildEvent(void* ptr, void* event);
void QDateTimeEdit_ChildEventDefault(void* ptr, void* event);
void QDateTimeEdit_CustomEvent(void* ptr, void* event);
void QDateTimeEdit_CustomEventDefault(void* ptr, void* event);
void* QDesktopWidget_AvailableGeometry2(void* ptr, void* widget);
void* QDesktopWidget_AvailableGeometry(void* ptr, int screen);
int QDesktopWidget_IsVirtualDesktop(void* ptr);
int QDesktopWidget_PrimaryScreen(void* ptr);
void QDesktopWidget_ResizeEvent(void* ptr, void* event);
void QDesktopWidget_ResizeEventDefault(void* ptr, void* event);
void* QDesktopWidget_Screen(void* ptr, int screen);
void* QDesktopWidget_ScreenGeometry2(void* ptr, void* widget);
void* QDesktopWidget_ScreenGeometry(void* ptr, int screen);
int QDesktopWidget_ScreenNumber2(void* ptr, void* point);
int QDesktopWidget_ScreenNumber(void* ptr, void* widget);
void* QDesktopWidget_AvailableGeometry3(void* ptr, void* p);
void QDesktopWidget_ConnectResized(void* ptr);
void QDesktopWidget_DisconnectResized(void* ptr);
void QDesktopWidget_Resized(void* ptr, int screen);
int QDesktopWidget_ScreenCount(void* ptr);
void QDesktopWidget_ConnectScreenCountChanged(void* ptr);
void QDesktopWidget_DisconnectScreenCountChanged(void* ptr);
void QDesktopWidget_ScreenCountChanged(void* ptr, int newCount);
void* QDesktopWidget_ScreenGeometry3(void* ptr, void* p);
void QDesktopWidget_ConnectWorkAreaResized(void* ptr);
void QDesktopWidget_DisconnectWorkAreaResized(void* ptr);
void QDesktopWidget_WorkAreaResized(void* ptr, int screen);
void QDesktopWidget_ActionEvent(void* ptr, void* event);
void QDesktopWidget_ActionEventDefault(void* ptr, void* event);
void QDesktopWidget_DragEnterEvent(void* ptr, void* event);
void QDesktopWidget_DragEnterEventDefault(void* ptr, void* event);
void QDesktopWidget_DragLeaveEvent(void* ptr, void* event);
void QDesktopWidget_DragLeaveEventDefault(void* ptr, void* event);
void QDesktopWidget_DragMoveEvent(void* ptr, void* event);
void QDesktopWidget_DragMoveEventDefault(void* ptr, void* event);
void QDesktopWidget_DropEvent(void* ptr, void* event);
void QDesktopWidget_DropEventDefault(void* ptr, void* event);
void QDesktopWidget_EnterEvent(void* ptr, void* event);
void QDesktopWidget_EnterEventDefault(void* ptr, void* event);
void QDesktopWidget_FocusInEvent(void* ptr, void* event);
void QDesktopWidget_FocusInEventDefault(void* ptr, void* event);
void QDesktopWidget_FocusOutEvent(void* ptr, void* event);
void QDesktopWidget_FocusOutEventDefault(void* ptr, void* event);
void QDesktopWidget_HideEvent(void* ptr, void* event);
void QDesktopWidget_HideEventDefault(void* ptr, void* event);
void QDesktopWidget_LeaveEvent(void* ptr, void* event);
void QDesktopWidget_LeaveEventDefault(void* ptr, void* event);
void QDesktopWidget_MoveEvent(void* ptr, void* event);
void QDesktopWidget_MoveEventDefault(void* ptr, void* event);
void QDesktopWidget_PaintEvent(void* ptr, void* event);
void QDesktopWidget_PaintEventDefault(void* ptr, void* event);
void QDesktopWidget_SetVisible(void* ptr, int visible);
void QDesktopWidget_SetVisibleDefault(void* ptr, int visible);
void QDesktopWidget_ShowEvent(void* ptr, void* event);
void QDesktopWidget_ShowEventDefault(void* ptr, void* event);
void QDesktopWidget_ChangeEvent(void* ptr, void* event);
void QDesktopWidget_ChangeEventDefault(void* ptr, void* event);
void QDesktopWidget_CloseEvent(void* ptr, void* event);
void QDesktopWidget_CloseEventDefault(void* ptr, void* event);
void QDesktopWidget_ContextMenuEvent(void* ptr, void* event);
void QDesktopWidget_ContextMenuEventDefault(void* ptr, void* event);
void QDesktopWidget_InitPainter(void* ptr, void* painter);
void QDesktopWidget_InitPainterDefault(void* ptr, void* painter);
void QDesktopWidget_InputMethodEvent(void* ptr, void* event);
void QDesktopWidget_InputMethodEventDefault(void* ptr, void* event);
void QDesktopWidget_KeyPressEvent(void* ptr, void* event);
void QDesktopWidget_KeyPressEventDefault(void* ptr, void* event);
void QDesktopWidget_KeyReleaseEvent(void* ptr, void* event);
void QDesktopWidget_KeyReleaseEventDefault(void* ptr, void* event);
void QDesktopWidget_MouseDoubleClickEvent(void* ptr, void* event);
void QDesktopWidget_MouseDoubleClickEventDefault(void* ptr, void* event);
void QDesktopWidget_MouseMoveEvent(void* ptr, void* event);
void QDesktopWidget_MouseMoveEventDefault(void* ptr, void* event);
void QDesktopWidget_MousePressEvent(void* ptr, void* event);
void QDesktopWidget_MousePressEventDefault(void* ptr, void* event);
void QDesktopWidget_MouseReleaseEvent(void* ptr, void* event);
void QDesktopWidget_MouseReleaseEventDefault(void* ptr, void* event);
void QDesktopWidget_TabletEvent(void* ptr, void* event);
void QDesktopWidget_TabletEventDefault(void* ptr, void* event);
void QDesktopWidget_WheelEvent(void* ptr, void* event);
void QDesktopWidget_WheelEventDefault(void* ptr, void* event);
void QDesktopWidget_TimerEvent(void* ptr, void* event);
void QDesktopWidget_TimerEventDefault(void* ptr, void* event);
void QDesktopWidget_ChildEvent(void* ptr, void* event);
void QDesktopWidget_ChildEventDefault(void* ptr, void* event);
void QDesktopWidget_CustomEvent(void* ptr, void* event);
void QDesktopWidget_CustomEventDefault(void* ptr, void* event);
int QDial_NotchSize(void* ptr);
double QDial_NotchTarget(void* ptr);
int QDial_NotchesVisible(void* ptr);
void QDial_SetNotchesVisible(void* ptr, int visible);
void QDial_SetWrapping(void* ptr, int on);
int QDial_Wrapping(void* ptr);
void* QDial_NewQDial(void* parent);
int QDial_Event(void* ptr, void* e);
int QDial_EventDefault(void* ptr, void* e);
void* QDial_MinimumSizeHint(void* ptr);
void* QDial_MinimumSizeHintDefault(void* ptr);
void QDial_MouseMoveEvent(void* ptr, void* e);
void QDial_MouseMoveEventDefault(void* ptr, void* e);
void QDial_MousePressEvent(void* ptr, void* e);
void QDial_MousePressEventDefault(void* ptr, void* e);
void QDial_MouseReleaseEvent(void* ptr, void* e);
void QDial_MouseReleaseEventDefault(void* ptr, void* e);
void QDial_PaintEvent(void* ptr, void* pe);
void QDial_PaintEventDefault(void* ptr, void* pe);
void QDial_ResizeEvent(void* ptr, void* e);
void QDial_ResizeEventDefault(void* ptr, void* e);
void* QDial_SizeHint(void* ptr);
void* QDial_SizeHintDefault(void* ptr);
void QDial_SliderChange(void* ptr, int change);
void QDial_SliderChangeDefault(void* ptr, int change);
void QDial_DestroyQDial(void* ptr);
void QDial_ChangeEvent(void* ptr, void* ev);
void QDial_ChangeEventDefault(void* ptr, void* ev);
void QDial_KeyPressEvent(void* ptr, void* ev);
void QDial_KeyPressEventDefault(void* ptr, void* ev);
void QDial_TimerEvent(void* ptr, void* e);
void QDial_TimerEventDefault(void* ptr, void* e);
void QDial_WheelEvent(void* ptr, void* e);
void QDial_WheelEventDefault(void* ptr, void* e);
void QDial_ActionEvent(void* ptr, void* event);
void QDial_ActionEventDefault(void* ptr, void* event);
void QDial_DragEnterEvent(void* ptr, void* event);
void QDial_DragEnterEventDefault(void* ptr, void* event);
void QDial_DragLeaveEvent(void* ptr, void* event);
void QDial_DragLeaveEventDefault(void* ptr, void* event);
void QDial_DragMoveEvent(void* ptr, void* event);
void QDial_DragMoveEventDefault(void* ptr, void* event);
void QDial_DropEvent(void* ptr, void* event);
void QDial_DropEventDefault(void* ptr, void* event);
void QDial_EnterEvent(void* ptr, void* event);
void QDial_EnterEventDefault(void* ptr, void* event);
void QDial_FocusInEvent(void* ptr, void* event);
void QDial_FocusInEventDefault(void* ptr, void* event);
void QDial_FocusOutEvent(void* ptr, void* event);
void QDial_FocusOutEventDefault(void* ptr, void* event);
void QDial_HideEvent(void* ptr, void* event);
void QDial_HideEventDefault(void* ptr, void* event);
void QDial_LeaveEvent(void* ptr, void* event);
void QDial_LeaveEventDefault(void* ptr, void* event);
void QDial_MoveEvent(void* ptr, void* event);
void QDial_MoveEventDefault(void* ptr, void* event);
void QDial_SetVisible(void* ptr, int visible);
void QDial_SetVisibleDefault(void* ptr, int visible);
void QDial_ShowEvent(void* ptr, void* event);
void QDial_ShowEventDefault(void* ptr, void* event);
void QDial_CloseEvent(void* ptr, void* event);
void QDial_CloseEventDefault(void* ptr, void* event);
void QDial_ContextMenuEvent(void* ptr, void* event);
void QDial_ContextMenuEventDefault(void* ptr, void* event);
void QDial_InitPainter(void* ptr, void* painter);
void QDial_InitPainterDefault(void* ptr, void* painter);
void QDial_InputMethodEvent(void* ptr, void* event);
void QDial_InputMethodEventDefault(void* ptr, void* event);
void QDial_KeyReleaseEvent(void* ptr, void* event);
void QDial_KeyReleaseEventDefault(void* ptr, void* event);
void QDial_MouseDoubleClickEvent(void* ptr, void* event);
void QDial_MouseDoubleClickEventDefault(void* ptr, void* event);
void QDial_TabletEvent(void* ptr, void* event);
void QDial_TabletEventDefault(void* ptr, void* event);
void QDial_ChildEvent(void* ptr, void* event);
void QDial_ChildEventDefault(void* ptr, void* event);
void QDial_CustomEvent(void* ptr, void* event);
void QDial_CustomEventDefault(void* ptr, void* event);
int QDialog_IsSizeGripEnabled(void* ptr);
void QDialog_SetModal(void* ptr, int modal);
void QDialog_SetResult(void* ptr, int i);
void QDialog_SetSizeGripEnabled(void* ptr, int v);
void* QDialog_NewQDialog(void* parent, int f);
void QDialog_Accept(void* ptr);
void QDialog_AcceptDefault(void* ptr);
void QDialog_ConnectAccepted(void* ptr);
void QDialog_DisconnectAccepted(void* ptr);
void QDialog_Accepted(void* ptr);
void QDialog_CloseEvent(void* ptr, void* e);
void QDialog_CloseEventDefault(void* ptr, void* e);
void QDialog_ContextMenuEvent(void* ptr, void* e);
void QDialog_ContextMenuEventDefault(void* ptr, void* e);
void QDialog_Done(void* ptr, int r);
void QDialog_DoneDefault(void* ptr, int r);
int QDialog_Event(void* ptr, void* e);
int QDialog_EventDefault(void* ptr, void* e);
int QDialog_EventFilter(void* ptr, void* o, void* e);
int QDialog_EventFilterDefault(void* ptr, void* o, void* e);
int QDialog_Exec(void* ptr);
int QDialog_ExecDefault(void* ptr);
void QDialog_ConnectFinished(void* ptr);
void QDialog_DisconnectFinished(void* ptr);
void QDialog_Finished(void* ptr, int result);
void QDialog_KeyPressEvent(void* ptr, void* e);
void QDialog_KeyPressEventDefault(void* ptr, void* e);
void* QDialog_MinimumSizeHint(void* ptr);
void* QDialog_MinimumSizeHintDefault(void* ptr);
void QDialog_Open(void* ptr);
void QDialog_OpenDefault(void* ptr);
void QDialog_Reject(void* ptr);
void QDialog_RejectDefault(void* ptr);
void QDialog_ConnectRejected(void* ptr);
void QDialog_DisconnectRejected(void* ptr);
void QDialog_Rejected(void* ptr);
void QDialog_ResizeEvent(void* ptr, void* v);
void QDialog_ResizeEventDefault(void* ptr, void* v);
int QDialog_Result(void* ptr);
void QDialog_SetVisible(void* ptr, int visible);
void QDialog_SetVisibleDefault(void* ptr, int visible);
void QDialog_ShowEvent(void* ptr, void* event);
void QDialog_ShowEventDefault(void* ptr, void* event);
void* QDialog_SizeHint(void* ptr);
void* QDialog_SizeHintDefault(void* ptr);
void QDialog_DestroyQDialog(void* ptr);
void QDialog_ActionEvent(void* ptr, void* event);
void QDialog_ActionEventDefault(void* ptr, void* event);
void QDialog_DragEnterEvent(void* ptr, void* event);
void QDialog_DragEnterEventDefault(void* ptr, void* event);
void QDialog_DragLeaveEvent(void* ptr, void* event);
void QDialog_DragLeaveEventDefault(void* ptr, void* event);
void QDialog_DragMoveEvent(void* ptr, void* event);
void QDialog_DragMoveEventDefault(void* ptr, void* event);
void QDialog_DropEvent(void* ptr, void* event);
void QDialog_DropEventDefault(void* ptr, void* event);
void QDialog_EnterEvent(void* ptr, void* event);
void QDialog_EnterEventDefault(void* ptr, void* event);
void QDialog_FocusInEvent(void* ptr, void* event);
void QDialog_FocusInEventDefault(void* ptr, void* event);
void QDialog_FocusOutEvent(void* ptr, void* event);
void QDialog_FocusOutEventDefault(void* ptr, void* event);
void QDialog_HideEvent(void* ptr, void* event);
void QDialog_HideEventDefault(void* ptr, void* event);
void QDialog_LeaveEvent(void* ptr, void* event);
void QDialog_LeaveEventDefault(void* ptr, void* event);
void QDialog_MoveEvent(void* ptr, void* event);
void QDialog_MoveEventDefault(void* ptr, void* event);
void QDialog_PaintEvent(void* ptr, void* event);
void QDialog_PaintEventDefault(void* ptr, void* event);
void QDialog_ChangeEvent(void* ptr, void* event);
void QDialog_ChangeEventDefault(void* ptr, void* event);
void QDialog_InitPainter(void* ptr, void* painter);
void QDialog_InitPainterDefault(void* ptr, void* painter);
void QDialog_InputMethodEvent(void* ptr, void* event);
void QDialog_InputMethodEventDefault(void* ptr, void* event);
void QDialog_KeyReleaseEvent(void* ptr, void* event);
void QDialog_KeyReleaseEventDefault(void* ptr, void* event);
void QDialog_MouseDoubleClickEvent(void* ptr, void* event);
void QDialog_MouseDoubleClickEventDefault(void* ptr, void* event);
void QDialog_MouseMoveEvent(void* ptr, void* event);
void QDialog_MouseMoveEventDefault(void* ptr, void* event);
void QDialog_MousePressEvent(void* ptr, void* event);
void QDialog_MousePressEventDefault(void* ptr, void* event);
void QDialog_MouseReleaseEvent(void* ptr, void* event);
void QDialog_MouseReleaseEventDefault(void* ptr, void* event);
void QDialog_TabletEvent(void* ptr, void* event);
void QDialog_TabletEventDefault(void* ptr, void* event);
void QDialog_WheelEvent(void* ptr, void* event);
void QDialog_WheelEventDefault(void* ptr, void* event);
void QDialog_TimerEvent(void* ptr, void* event);
void QDialog_TimerEventDefault(void* ptr, void* event);
void QDialog_ChildEvent(void* ptr, void* event);
void QDialog_ChildEventDefault(void* ptr, void* event);
void QDialog_CustomEvent(void* ptr, void* event);
void QDialog_CustomEventDefault(void* ptr, void* event);
int QDialogButtonBox_CenterButtons(void* ptr);
int QDialogButtonBox_Orientation(void* ptr);
void QDialogButtonBox_SetCenterButtons(void* ptr, int center);
void QDialogButtonBox_SetOrientation(void* ptr, int orientation);
void QDialogButtonBox_SetStandardButtons(void* ptr, int buttons);
int QDialogButtonBox_StandardButtons(void* ptr);
void* QDialogButtonBox_NewQDialogButtonBox(void* parent);
void* QDialogButtonBox_NewQDialogButtonBox2(int orientation, void* parent);
void* QDialogButtonBox_NewQDialogButtonBox3(int buttons, void* parent);
void* QDialogButtonBox_NewQDialogButtonBox4(int buttons, int orientation, void* parent);
void QDialogButtonBox_ConnectAccepted(void* ptr);
void QDialogButtonBox_DisconnectAccepted(void* ptr);
void QDialogButtonBox_Accepted(void* ptr);
void* QDialogButtonBox_AddButton3(void* ptr, int button);
void* QDialogButtonBox_AddButton2(void* ptr, char* text, int role);
void QDialogButtonBox_AddButton(void* ptr, void* button, int role);
void* QDialogButtonBox_Button(void* ptr, int which);
int QDialogButtonBox_ButtonRole(void* ptr, void* button);
void QDialogButtonBox_ChangeEvent(void* ptr, void* event);
void QDialogButtonBox_ChangeEventDefault(void* ptr, void* event);
void QDialogButtonBox_Clear(void* ptr);
void QDialogButtonBox_ConnectClicked(void* ptr);
void QDialogButtonBox_DisconnectClicked(void* ptr);
void QDialogButtonBox_Clicked(void* ptr, void* button);
int QDialogButtonBox_Event(void* ptr, void* event);
int QDialogButtonBox_EventDefault(void* ptr, void* event);
void QDialogButtonBox_ConnectHelpRequested(void* ptr);
void QDialogButtonBox_DisconnectHelpRequested(void* ptr);
void QDialogButtonBox_HelpRequested(void* ptr);
void QDialogButtonBox_ConnectRejected(void* ptr);
void QDialogButtonBox_DisconnectRejected(void* ptr);
void QDialogButtonBox_Rejected(void* ptr);
void QDialogButtonBox_RemoveButton(void* ptr, void* button);
int QDialogButtonBox_StandardButton(void* ptr, void* button);
void QDialogButtonBox_DestroyQDialogButtonBox(void* ptr);
void QDialogButtonBox_ActionEvent(void* ptr, void* event);
void QDialogButtonBox_ActionEventDefault(void* ptr, void* event);
void QDialogButtonBox_DragEnterEvent(void* ptr, void* event);
void QDialogButtonBox_DragEnterEventDefault(void* ptr, void* event);
void QDialogButtonBox_DragLeaveEvent(void* ptr, void* event);
void QDialogButtonBox_DragLeaveEventDefault(void* ptr, void* event);
void QDialogButtonBox_DragMoveEvent(void* ptr, void* event);
void QDialogButtonBox_DragMoveEventDefault(void* ptr, void* event);
void QDialogButtonBox_DropEvent(void* ptr, void* event);
void QDialogButtonBox_DropEventDefault(void* ptr, void* event);
void QDialogButtonBox_EnterEvent(void* ptr, void* event);
void QDialogButtonBox_EnterEventDefault(void* ptr, void* event);
void QDialogButtonBox_FocusInEvent(void* ptr, void* event);
void QDialogButtonBox_FocusInEventDefault(void* ptr, void* event);
void QDialogButtonBox_FocusOutEvent(void* ptr, void* event);
void QDialogButtonBox_FocusOutEventDefault(void* ptr, void* event);
void QDialogButtonBox_HideEvent(void* ptr, void* event);
void QDialogButtonBox_HideEventDefault(void* ptr, void* event);
void QDialogButtonBox_LeaveEvent(void* ptr, void* event);
void QDialogButtonBox_LeaveEventDefault(void* ptr, void* event);
void QDialogButtonBox_MoveEvent(void* ptr, void* event);
void QDialogButtonBox_MoveEventDefault(void* ptr, void* event);
void QDialogButtonBox_PaintEvent(void* ptr, void* event);
void QDialogButtonBox_PaintEventDefault(void* ptr, void* event);
void QDialogButtonBox_SetVisible(void* ptr, int visible);
void QDialogButtonBox_SetVisibleDefault(void* ptr, int visible);
void QDialogButtonBox_ShowEvent(void* ptr, void* event);
void QDialogButtonBox_ShowEventDefault(void* ptr, void* event);
void QDialogButtonBox_CloseEvent(void* ptr, void* event);
void QDialogButtonBox_CloseEventDefault(void* ptr, void* event);
void QDialogButtonBox_ContextMenuEvent(void* ptr, void* event);
void QDialogButtonBox_ContextMenuEventDefault(void* ptr, void* event);
void QDialogButtonBox_InitPainter(void* ptr, void* painter);
void QDialogButtonBox_InitPainterDefault(void* ptr, void* painter);
void QDialogButtonBox_InputMethodEvent(void* ptr, void* event);
void QDialogButtonBox_InputMethodEventDefault(void* ptr, void* event);
void QDialogButtonBox_KeyPressEvent(void* ptr, void* event);
void QDialogButtonBox_KeyPressEventDefault(void* ptr, void* event);
void QDialogButtonBox_KeyReleaseEvent(void* ptr, void* event);
void QDialogButtonBox_KeyReleaseEventDefault(void* ptr, void* event);
void QDialogButtonBox_MouseDoubleClickEvent(void* ptr, void* event);
void QDialogButtonBox_MouseDoubleClickEventDefault(void* ptr, void* event);
void QDialogButtonBox_MouseMoveEvent(void* ptr, void* event);
void QDialogButtonBox_MouseMoveEventDefault(void* ptr, void* event);
void QDialogButtonBox_MousePressEvent(void* ptr, void* event);
void QDialogButtonBox_MousePressEventDefault(void* ptr, void* event);
void QDialogButtonBox_MouseReleaseEvent(void* ptr, void* event);
void QDialogButtonBox_MouseReleaseEventDefault(void* ptr, void* event);
void QDialogButtonBox_ResizeEvent(void* ptr, void* event);
void QDialogButtonBox_ResizeEventDefault(void* ptr, void* event);
void QDialogButtonBox_TabletEvent(void* ptr, void* event);
void QDialogButtonBox_TabletEventDefault(void* ptr, void* event);
void QDialogButtonBox_WheelEvent(void* ptr, void* event);
void QDialogButtonBox_WheelEventDefault(void* ptr, void* event);
void QDialogButtonBox_TimerEvent(void* ptr, void* event);
void QDialogButtonBox_TimerEventDefault(void* ptr, void* event);
void QDialogButtonBox_ChildEvent(void* ptr, void* event);
void QDialogButtonBox_ChildEventDefault(void* ptr, void* event);
void QDialogButtonBox_CustomEvent(void* ptr, void* event);
void QDialogButtonBox_CustomEventDefault(void* ptr, void* event);
int QDockWidget_AllowedAreas(void* ptr);
int QDockWidget_Features(void* ptr);
void QDockWidget_SetAllowedAreas(void* ptr, int areas);
void QDockWidget_SetFeatures(void* ptr, int features);
void QDockWidget_SetFloating(void* ptr, int floating);
void* QDockWidget_NewQDockWidget2(void* parent, int flags);
void* QDockWidget_NewQDockWidget(char* title, void* parent, int flags);
void QDockWidget_ConnectAllowedAreasChanged(void* ptr);
void QDockWidget_DisconnectAllowedAreasChanged(void* ptr);
void QDockWidget_AllowedAreasChanged(void* ptr, int allowedAreas);
void QDockWidget_ChangeEvent(void* ptr, void* event);
void QDockWidget_ChangeEventDefault(void* ptr, void* event);
void QDockWidget_CloseEvent(void* ptr, void* event);
void QDockWidget_CloseEventDefault(void* ptr, void* event);
void QDockWidget_ConnectDockLocationChanged(void* ptr);
void QDockWidget_DisconnectDockLocationChanged(void* ptr);
void QDockWidget_DockLocationChanged(void* ptr, int area);
int QDockWidget_Event(void* ptr, void* event);
int QDockWidget_EventDefault(void* ptr, void* event);
void QDockWidget_ConnectFeaturesChanged(void* ptr);
void QDockWidget_DisconnectFeaturesChanged(void* ptr);
void QDockWidget_FeaturesChanged(void* ptr, int features);
int QDockWidget_IsAreaAllowed(void* ptr, int area);
int QDockWidget_IsFloating(void* ptr);
void QDockWidget_PaintEvent(void* ptr, void* event);
void QDockWidget_PaintEventDefault(void* ptr, void* event);
void QDockWidget_SetTitleBarWidget(void* ptr, void* widget);
void QDockWidget_SetWidget(void* ptr, void* widget);
void* QDockWidget_TitleBarWidget(void* ptr);
void* QDockWidget_ToggleViewAction(void* ptr);
void QDockWidget_ConnectTopLevelChanged(void* ptr);
void QDockWidget_DisconnectTopLevelChanged(void* ptr);
void QDockWidget_TopLevelChanged(void* ptr, int topLevel);
void QDockWidget_ConnectVisibilityChanged(void* ptr);
void QDockWidget_DisconnectVisibilityChanged(void* ptr);
void QDockWidget_VisibilityChanged(void* ptr, int visible);
void* QDockWidget_Widget(void* ptr);
void QDockWidget_DestroyQDockWidget(void* ptr);
void QDockWidget_ActionEvent(void* ptr, void* event);
void QDockWidget_ActionEventDefault(void* ptr, void* event);
void QDockWidget_DragEnterEvent(void* ptr, void* event);
void QDockWidget_DragEnterEventDefault(void* ptr, void* event);
void QDockWidget_DragLeaveEvent(void* ptr, void* event);
void QDockWidget_DragLeaveEventDefault(void* ptr, void* event);
void QDockWidget_DragMoveEvent(void* ptr, void* event);
void QDockWidget_DragMoveEventDefault(void* ptr, void* event);
void QDockWidget_DropEvent(void* ptr, void* event);
void QDockWidget_DropEventDefault(void* ptr, void* event);
void QDockWidget_EnterEvent(void* ptr, void* event);
void QDockWidget_EnterEventDefault(void* ptr, void* event);
void QDockWidget_FocusInEvent(void* ptr, void* event);
void QDockWidget_FocusInEventDefault(void* ptr, void* event);
void QDockWidget_FocusOutEvent(void* ptr, void* event);
void QDockWidget_FocusOutEventDefault(void* ptr, void* event);
void QDockWidget_HideEvent(void* ptr, void* event);
void QDockWidget_HideEventDefault(void* ptr, void* event);
void QDockWidget_LeaveEvent(void* ptr, void* event);
void QDockWidget_LeaveEventDefault(void* ptr, void* event);
void QDockWidget_MoveEvent(void* ptr, void* event);
void QDockWidget_MoveEventDefault(void* ptr, void* event);
void QDockWidget_SetVisible(void* ptr, int visible);
void QDockWidget_SetVisibleDefault(void* ptr, int visible);
void QDockWidget_ShowEvent(void* ptr, void* event);
void QDockWidget_ShowEventDefault(void* ptr, void* event);
void QDockWidget_ContextMenuEvent(void* ptr, void* event);
void QDockWidget_ContextMenuEventDefault(void* ptr, void* event);
void QDockWidget_InitPainter(void* ptr, void* painter);
void QDockWidget_InitPainterDefault(void* ptr, void* painter);
void QDockWidget_InputMethodEvent(void* ptr, void* event);
void QDockWidget_InputMethodEventDefault(void* ptr, void* event);
void QDockWidget_KeyPressEvent(void* ptr, void* event);
void QDockWidget_KeyPressEventDefault(void* ptr, void* event);
void QDockWidget_KeyReleaseEvent(void* ptr, void* event);
void QDockWidget_KeyReleaseEventDefault(void* ptr, void* event);
void QDockWidget_MouseDoubleClickEvent(void* ptr, void* event);
void QDockWidget_MouseDoubleClickEventDefault(void* ptr, void* event);
void QDockWidget_MouseMoveEvent(void* ptr, void* event);
void QDockWidget_MouseMoveEventDefault(void* ptr, void* event);
void QDockWidget_MousePressEvent(void* ptr, void* event);
void QDockWidget_MousePressEventDefault(void* ptr, void* event);
void QDockWidget_MouseReleaseEvent(void* ptr, void* event);
void QDockWidget_MouseReleaseEventDefault(void* ptr, void* event);
void QDockWidget_ResizeEvent(void* ptr, void* event);
void QDockWidget_ResizeEventDefault(void* ptr, void* event);
void QDockWidget_TabletEvent(void* ptr, void* event);
void QDockWidget_TabletEventDefault(void* ptr, void* event);
void QDockWidget_WheelEvent(void* ptr, void* event);
void QDockWidget_WheelEventDefault(void* ptr, void* event);
void QDockWidget_TimerEvent(void* ptr, void* event);
void QDockWidget_TimerEventDefault(void* ptr, void* event);
void QDockWidget_ChildEvent(void* ptr, void* event);
void QDockWidget_ChildEventDefault(void* ptr, void* event);
void QDockWidget_CustomEvent(void* ptr, void* event);
void QDockWidget_CustomEventDefault(void* ptr, void* event);
char* QDoubleSpinBox_CleanText(void* ptr);
int QDoubleSpinBox_Decimals(void* ptr);
char* QDoubleSpinBox_Prefix(void* ptr);
void QDoubleSpinBox_SetDecimals(void* ptr, int prec);
void QDoubleSpinBox_SetPrefix(void* ptr, char* prefix);
void QDoubleSpinBox_SetSuffix(void* ptr, char* suffix);
char* QDoubleSpinBox_Suffix(void* ptr);
void* QDoubleSpinBox_NewQDoubleSpinBox(void* parent);
void QDoubleSpinBox_ConnectValueChanged2(void* ptr);
void QDoubleSpinBox_DisconnectValueChanged2(void* ptr);
void QDoubleSpinBox_ValueChanged2(void* ptr, char* text);
void QDoubleSpinBox_DestroyQDoubleSpinBox(void* ptr);
void QDoubleSpinBox_ChangeEvent(void* ptr, void* event);
void QDoubleSpinBox_ChangeEventDefault(void* ptr, void* event);
void QDoubleSpinBox_Clear(void* ptr);
void QDoubleSpinBox_ClearDefault(void* ptr);
void QDoubleSpinBox_CloseEvent(void* ptr, void* event);
void QDoubleSpinBox_CloseEventDefault(void* ptr, void* event);
void QDoubleSpinBox_ContextMenuEvent(void* ptr, void* event);
void QDoubleSpinBox_ContextMenuEventDefault(void* ptr, void* event);
void QDoubleSpinBox_FocusInEvent(void* ptr, void* event);
void QDoubleSpinBox_FocusInEventDefault(void* ptr, void* event);
void QDoubleSpinBox_FocusOutEvent(void* ptr, void* event);
void QDoubleSpinBox_FocusOutEventDefault(void* ptr, void* event);
void QDoubleSpinBox_HideEvent(void* ptr, void* event);
void QDoubleSpinBox_HideEventDefault(void* ptr, void* event);
void QDoubleSpinBox_KeyPressEvent(void* ptr, void* event);
void QDoubleSpinBox_KeyPressEventDefault(void* ptr, void* event);
void QDoubleSpinBox_KeyReleaseEvent(void* ptr, void* event);
void QDoubleSpinBox_KeyReleaseEventDefault(void* ptr, void* event);
void QDoubleSpinBox_MouseMoveEvent(void* ptr, void* event);
void QDoubleSpinBox_MouseMoveEventDefault(void* ptr, void* event);
void QDoubleSpinBox_MousePressEvent(void* ptr, void* event);
void QDoubleSpinBox_MousePressEventDefault(void* ptr, void* event);
void QDoubleSpinBox_MouseReleaseEvent(void* ptr, void* event);
void QDoubleSpinBox_MouseReleaseEventDefault(void* ptr, void* event);
void QDoubleSpinBox_PaintEvent(void* ptr, void* event);
void QDoubleSpinBox_PaintEventDefault(void* ptr, void* event);
void QDoubleSpinBox_ResizeEvent(void* ptr, void* event);
void QDoubleSpinBox_ResizeEventDefault(void* ptr, void* event);
void QDoubleSpinBox_ShowEvent(void* ptr, void* event);
void QDoubleSpinBox_ShowEventDefault(void* ptr, void* event);
void QDoubleSpinBox_StepBy(void* ptr, int steps);
void QDoubleSpinBox_StepByDefault(void* ptr, int steps);
void QDoubleSpinBox_TimerEvent(void* ptr, void* event);
void QDoubleSpinBox_TimerEventDefault(void* ptr, void* event);
void QDoubleSpinBox_WheelEvent(void* ptr, void* event);
void QDoubleSpinBox_WheelEventDefault(void* ptr, void* event);
void QDoubleSpinBox_ActionEvent(void* ptr, void* event);
void QDoubleSpinBox_ActionEventDefault(void* ptr, void* event);
void QDoubleSpinBox_DragEnterEvent(void* ptr, void* event);
void QDoubleSpinBox_DragEnterEventDefault(void* ptr, void* event);
void QDoubleSpinBox_DragLeaveEvent(void* ptr, void* event);
void QDoubleSpinBox_DragLeaveEventDefault(void* ptr, void* event);
void QDoubleSpinBox_DragMoveEvent(void* ptr, void* event);
void QDoubleSpinBox_DragMoveEventDefault(void* ptr, void* event);
void QDoubleSpinBox_DropEvent(void* ptr, void* event);
void QDoubleSpinBox_DropEventDefault(void* ptr, void* event);
void QDoubleSpinBox_EnterEvent(void* ptr, void* event);
void QDoubleSpinBox_EnterEventDefault(void* ptr, void* event);
void QDoubleSpinBox_LeaveEvent(void* ptr, void* event);
void QDoubleSpinBox_LeaveEventDefault(void* ptr, void* event);
void QDoubleSpinBox_MoveEvent(void* ptr, void* event);
void QDoubleSpinBox_MoveEventDefault(void* ptr, void* event);
void QDoubleSpinBox_SetVisible(void* ptr, int visible);
void QDoubleSpinBox_SetVisibleDefault(void* ptr, int visible);
void QDoubleSpinBox_InitPainter(void* ptr, void* painter);
void QDoubleSpinBox_InitPainterDefault(void* ptr, void* painter);
void QDoubleSpinBox_InputMethodEvent(void* ptr, void* event);
void QDoubleSpinBox_InputMethodEventDefault(void* ptr, void* event);
void QDoubleSpinBox_MouseDoubleClickEvent(void* ptr, void* event);
void QDoubleSpinBox_MouseDoubleClickEventDefault(void* ptr, void* event);
void QDoubleSpinBox_TabletEvent(void* ptr, void* event);
void QDoubleSpinBox_TabletEventDefault(void* ptr, void* event);
void QDoubleSpinBox_ChildEvent(void* ptr, void* event);
void QDoubleSpinBox_ChildEventDefault(void* ptr, void* event);
void QDoubleSpinBox_CustomEvent(void* ptr, void* event);
void QDoubleSpinBox_CustomEventDefault(void* ptr, void* event);
void* QErrorMessage_NewQErrorMessage(void* parent);
void QErrorMessage_ChangeEvent(void* ptr, void* e);
void QErrorMessage_ChangeEventDefault(void* ptr, void* e);
void QErrorMessage_Done(void* ptr, int a);
void QErrorMessage_DoneDefault(void* ptr, int a);
void* QErrorMessage_QErrorMessage_QtHandler();
void QErrorMessage_ShowMessage(void* ptr, char* message);
void QErrorMessage_ShowMessage2(void* ptr, char* message, char* ty);
void QErrorMessage_DestroyQErrorMessage(void* ptr);
void QErrorMessage_Accept(void* ptr);
void QErrorMessage_AcceptDefault(void* ptr);
void QErrorMessage_CloseEvent(void* ptr, void* e);
void QErrorMessage_CloseEventDefault(void* ptr, void* e);
void QErrorMessage_ContextMenuEvent(void* ptr, void* e);
void QErrorMessage_ContextMenuEventDefault(void* ptr, void* e);
void QErrorMessage_KeyPressEvent(void* ptr, void* e);
void QErrorMessage_KeyPressEventDefault(void* ptr, void* e);
void QErrorMessage_Open(void* ptr);
void QErrorMessage_OpenDefault(void* ptr);
void QErrorMessage_Reject(void* ptr);
void QErrorMessage_RejectDefault(void* ptr);
void QErrorMessage_ResizeEvent(void* ptr, void* v);
void QErrorMessage_ResizeEventDefault(void* ptr, void* v);
void QErrorMessage_SetVisible(void* ptr, int visible);
void QErrorMessage_SetVisibleDefault(void* ptr, int visible);
void QErrorMessage_ShowEvent(void* ptr, void* event);
void QErrorMessage_ShowEventDefault(void* ptr, void* event);
void QErrorMessage_ActionEvent(void* ptr, void* event);
void QErrorMessage_ActionEventDefault(void* ptr, void* event);
void QErrorMessage_DragEnterEvent(void* ptr, void* event);
void QErrorMessage_DragEnterEventDefault(void* ptr, void* event);
void QErrorMessage_DragLeaveEvent(void* ptr, void* event);
void QErrorMessage_DragLeaveEventDefault(void* ptr, void* event);
void QErrorMessage_DragMoveEvent(void* ptr, void* event);
void QErrorMessage_DragMoveEventDefault(void* ptr, void* event);
void QErrorMessage_DropEvent(void* ptr, void* event);
void QErrorMessage_DropEventDefault(void* ptr, void* event);
void QErrorMessage_EnterEvent(void* ptr, void* event);
void QErrorMessage_EnterEventDefault(void* ptr, void* event);
void QErrorMessage_FocusInEvent(void* ptr, void* event);
void QErrorMessage_FocusInEventDefault(void* ptr, void* event);
void QErrorMessage_FocusOutEvent(void* ptr, void* event);
void QErrorMessage_FocusOutEventDefault(void* ptr, void* event);
void QErrorMessage_HideEvent(void* ptr, void* event);
void QErrorMessage_HideEventDefault(void* ptr, void* event);
void QErrorMessage_LeaveEvent(void* ptr, void* event);
void QErrorMessage_LeaveEventDefault(void* ptr, void* event);
void QErrorMessage_MoveEvent(void* ptr, void* event);
void QErrorMessage_MoveEventDefault(void* ptr, void* event);
void QErrorMessage_PaintEvent(void* ptr, void* event);
void QErrorMessage_PaintEventDefault(void* ptr, void* event);
void QErrorMessage_InitPainter(void* ptr, void* painter);
void QErrorMessage_InitPainterDefault(void* ptr, void* painter);
void QErrorMessage_InputMethodEvent(void* ptr, void* event);
void QErrorMessage_InputMethodEventDefault(void* ptr, void* event);
void QErrorMessage_KeyReleaseEvent(void* ptr, void* event);
void QErrorMessage_KeyReleaseEventDefault(void* ptr, void* event);
void QErrorMessage_MouseDoubleClickEvent(void* ptr, void* event);
void QErrorMessage_MouseDoubleClickEventDefault(void* ptr, void* event);
void QErrorMessage_MouseMoveEvent(void* ptr, void* event);
void QErrorMessage_MouseMoveEventDefault(void* ptr, void* event);
void QErrorMessage_MousePressEvent(void* ptr, void* event);
void QErrorMessage_MousePressEventDefault(void* ptr, void* event);
void QErrorMessage_MouseReleaseEvent(void* ptr, void* event);
void QErrorMessage_MouseReleaseEventDefault(void* ptr, void* event);
void QErrorMessage_TabletEvent(void* ptr, void* event);
void QErrorMessage_TabletEventDefault(void* ptr, void* event);
void QErrorMessage_WheelEvent(void* ptr, void* event);
void QErrorMessage_WheelEventDefault(void* ptr, void* event);
void QErrorMessage_TimerEvent(void* ptr, void* event);
void QErrorMessage_TimerEventDefault(void* ptr, void* event);
void QErrorMessage_ChildEvent(void* ptr, void* event);
void QErrorMessage_ChildEventDefault(void* ptr, void* event);
void QErrorMessage_CustomEvent(void* ptr, void* event);
void QErrorMessage_CustomEventDefault(void* ptr, void* event);
void* QFileDialog_NewQFileDialog(void* parent, int flags);
int QFileDialog_AcceptMode(void* ptr);
int QFileDialog_ConfirmOverwrite(void* ptr);
char* QFileDialog_DefaultSuffix(void* ptr);
int QFileDialog_FileMode(void* ptr);
int QFileDialog_IsNameFilterDetailsVisible(void* ptr);
int QFileDialog_IsReadOnly(void* ptr);
int QFileDialog_Options(void* ptr);
int QFileDialog_ResolveSymlinks(void* ptr);
void QFileDialog_SetAcceptMode(void* ptr, int mode);
void QFileDialog_SetConfirmOverwrite(void* ptr, int enabled);
void QFileDialog_SetDefaultSuffix(void* ptr, char* suffix);
void QFileDialog_SetFileMode(void* ptr, int mode);
void QFileDialog_SetNameFilterDetailsVisible(void* ptr, int enabled);
void QFileDialog_SetOptions(void* ptr, int options);
void QFileDialog_SetReadOnly(void* ptr, int enabled);
void QFileDialog_SetResolveSymlinks(void* ptr, int enabled);
void QFileDialog_SetViewMode(void* ptr, int mode);
int QFileDialog_ViewMode(void* ptr);
void* QFileDialog_NewQFileDialog2(void* parent, char* caption, char* directory, char* filter);
void QFileDialog_Accept(void* ptr);
void QFileDialog_AcceptDefault(void* ptr);
void QFileDialog_ChangeEvent(void* ptr, void* e);
void QFileDialog_ChangeEventDefault(void* ptr, void* e);
void QFileDialog_ConnectCurrentChanged(void* ptr);
void QFileDialog_DisconnectCurrentChanged(void* ptr);
void QFileDialog_CurrentChanged(void* ptr, char* path);
void QFileDialog_ConnectCurrentUrlChanged(void* ptr);
void QFileDialog_DisconnectCurrentUrlChanged(void* ptr);
void QFileDialog_CurrentUrlChanged(void* ptr, void* url);
void* QFileDialog_Directory(void* ptr);
void QFileDialog_ConnectDirectoryEntered(void* ptr);
void QFileDialog_DisconnectDirectoryEntered(void* ptr);
void QFileDialog_DirectoryEntered(void* ptr, char* directory);
void* QFileDialog_DirectoryUrl(void* ptr);
void QFileDialog_ConnectDirectoryUrlEntered(void* ptr);
void QFileDialog_DisconnectDirectoryUrlEntered(void* ptr);
void QFileDialog_DirectoryUrlEntered(void* ptr, void* directory);
void QFileDialog_Done(void* ptr, int result);
void QFileDialog_DoneDefault(void* ptr, int result);
void QFileDialog_ConnectFileSelected(void* ptr);
void QFileDialog_DisconnectFileSelected(void* ptr);
void QFileDialog_FileSelected(void* ptr, char* file);
void QFileDialog_ConnectFilesSelected(void* ptr);
void QFileDialog_DisconnectFilesSelected(void* ptr);
void QFileDialog_FilesSelected(void* ptr, char* selected);
int QFileDialog_Filter(void* ptr);
void QFileDialog_ConnectFilterSelected(void* ptr);
void QFileDialog_DisconnectFilterSelected(void* ptr);
void QFileDialog_FilterSelected(void* ptr, char* filter);
char* QFileDialog_QFileDialog_GetExistingDirectory(void* parent, char* caption, char* dir, int options);
void* QFileDialog_QFileDialog_GetExistingDirectoryUrl(void* parent, char* caption, void* dir, int options, char* supportedSchemes);
char* QFileDialog_QFileDialog_GetOpenFileName(void* parent, char* caption, char* dir, char* filter, char* selectedFilter, int options);
char* QFileDialog_QFileDialog_GetOpenFileNames(void* parent, char* caption, char* dir, char* filter, char* selectedFilter, int options);
void* QFileDialog_QFileDialog_GetOpenFileUrl(void* parent, char* caption, void* dir, char* filter, char* selectedFilter, int options, char* supportedSchemes);
char* QFileDialog_QFileDialog_GetSaveFileName(void* parent, char* caption, char* dir, char* filter, char* selectedFilter, int options);
void* QFileDialog_QFileDialog_GetSaveFileUrl(void* parent, char* caption, void* dir, char* filter, char* selectedFilter, int options, char* supportedSchemes);
char* QFileDialog_History(void* ptr);
void* QFileDialog_IconProvider(void* ptr);
void* QFileDialog_ItemDelegate(void* ptr);
char* QFileDialog_LabelText(void* ptr, int label);
char* QFileDialog_MimeTypeFilters(void* ptr);
char* QFileDialog_NameFilters(void* ptr);
void QFileDialog_Open(void* ptr, void* receiver, char* member);
void* QFileDialog_ProxyModel(void* ptr);
int QFileDialog_RestoreState(void* ptr, void* state);
void* QFileDialog_SaveState(void* ptr);
void QFileDialog_SelectFile(void* ptr, char* filename);
void QFileDialog_SelectMimeTypeFilter(void* ptr, char* filter);
void QFileDialog_SelectNameFilter(void* ptr, char* filter);
void QFileDialog_SelectUrl(void* ptr, void* url);
char* QFileDialog_SelectedFiles(void* ptr);
char* QFileDialog_SelectedNameFilter(void* ptr);
void QFileDialog_SetDirectory2(void* ptr, void* directory);
void QFileDialog_SetDirectory(void* ptr, char* directory);
void QFileDialog_SetDirectoryUrl(void* ptr, void* directory);
void QFileDialog_SetFilter(void* ptr, int filters);
void QFileDialog_SetHistory(void* ptr, char* paths);
void QFileDialog_SetIconProvider(void* ptr, void* provider);
void QFileDialog_SetItemDelegate(void* ptr, void* delegate);
void QFileDialog_SetLabelText(void* ptr, int label, char* text);
void QFileDialog_SetMimeTypeFilters(void* ptr, char* filters);
void QFileDialog_SetNameFilter(void* ptr, char* filter);
void QFileDialog_SetNameFilters(void* ptr, char* filters);
void QFileDialog_SetOption(void* ptr, int option, int on);
void QFileDialog_SetProxyModel(void* ptr, void* proxyModel);
void QFileDialog_SetVisible(void* ptr, int visible);
void QFileDialog_SetVisibleDefault(void* ptr, int visible);
int QFileDialog_TestOption(void* ptr, int option);
void QFileDialog_ConnectUrlSelected(void* ptr);
void QFileDialog_DisconnectUrlSelected(void* ptr);
void QFileDialog_UrlSelected(void* ptr, void* url);
void QFileDialog_DestroyQFileDialog(void* ptr);
void QFileDialog_CloseEvent(void* ptr, void* e);
void QFileDialog_CloseEventDefault(void* ptr, void* e);
void QFileDialog_ContextMenuEvent(void* ptr, void* e);
void QFileDialog_ContextMenuEventDefault(void* ptr, void* e);
void QFileDialog_KeyPressEvent(void* ptr, void* e);
void QFileDialog_KeyPressEventDefault(void* ptr, void* e);
void QFileDialog_Reject(void* ptr);
void QFileDialog_RejectDefault(void* ptr);
void QFileDialog_ResizeEvent(void* ptr, void* v);
void QFileDialog_ResizeEventDefault(void* ptr, void* v);
void QFileDialog_ShowEvent(void* ptr, void* event);
void QFileDialog_ShowEventDefault(void* ptr, void* event);
void QFileDialog_ActionEvent(void* ptr, void* event);
void QFileDialog_ActionEventDefault(void* ptr, void* event);
void QFileDialog_DragEnterEvent(void* ptr, void* event);
void QFileDialog_DragEnterEventDefault(void* ptr, void* event);
void QFileDialog_DragLeaveEvent(void* ptr, void* event);
void QFileDialog_DragLeaveEventDefault(void* ptr, void* event);
void QFileDialog_DragMoveEvent(void* ptr, void* event);
void QFileDialog_DragMoveEventDefault(void* ptr, void* event);
void QFileDialog_DropEvent(void* ptr, void* event);
void QFileDialog_DropEventDefault(void* ptr, void* event);
void QFileDialog_EnterEvent(void* ptr, void* event);
void QFileDialog_EnterEventDefault(void* ptr, void* event);
void QFileDialog_FocusInEvent(void* ptr, void* event);
void QFileDialog_FocusInEventDefault(void* ptr, void* event);
void QFileDialog_FocusOutEvent(void* ptr, void* event);
void QFileDialog_FocusOutEventDefault(void* ptr, void* event);
void QFileDialog_HideEvent(void* ptr, void* event);
void QFileDialog_HideEventDefault(void* ptr, void* event);
void QFileDialog_LeaveEvent(void* ptr, void* event);
void QFileDialog_LeaveEventDefault(void* ptr, void* event);
void QFileDialog_MoveEvent(void* ptr, void* event);
void QFileDialog_MoveEventDefault(void* ptr, void* event);
void QFileDialog_PaintEvent(void* ptr, void* event);
void QFileDialog_PaintEventDefault(void* ptr, void* event);
void QFileDialog_InitPainter(void* ptr, void* painter);
void QFileDialog_InitPainterDefault(void* ptr, void* painter);
void QFileDialog_InputMethodEvent(void* ptr, void* event);
void QFileDialog_InputMethodEventDefault(void* ptr, void* event);
void QFileDialog_KeyReleaseEvent(void* ptr, void* event);
void QFileDialog_KeyReleaseEventDefault(void* ptr, void* event);
void QFileDialog_MouseDoubleClickEvent(void* ptr, void* event);
void QFileDialog_MouseDoubleClickEventDefault(void* ptr, void* event);
void QFileDialog_MouseMoveEvent(void* ptr, void* event);
void QFileDialog_MouseMoveEventDefault(void* ptr, void* event);
void QFileDialog_MousePressEvent(void* ptr, void* event);
void QFileDialog_MousePressEventDefault(void* ptr, void* event);
void QFileDialog_MouseReleaseEvent(void* ptr, void* event);
void QFileDialog_MouseReleaseEventDefault(void* ptr, void* event);
void QFileDialog_TabletEvent(void* ptr, void* event);
void QFileDialog_TabletEventDefault(void* ptr, void* event);
void QFileDialog_WheelEvent(void* ptr, void* event);
void QFileDialog_WheelEventDefault(void* ptr, void* event);
void QFileDialog_TimerEvent(void* ptr, void* event);
void QFileDialog_TimerEventDefault(void* ptr, void* event);
void QFileDialog_ChildEvent(void* ptr, void* event);
void QFileDialog_ChildEventDefault(void* ptr, void* event);
void QFileDialog_CustomEvent(void* ptr, void* event);
void QFileDialog_CustomEventDefault(void* ptr, void* event);
void* QFileIconProvider_NewQFileIconProvider();
void* QFileIconProvider_Icon(void* ptr, int ty);
void* QFileIconProvider_IconDefault(void* ptr, int ty);
int QFileIconProvider_Options(void* ptr);
void QFileIconProvider_SetOptions(void* ptr, int options);
char* QFileIconProvider_Type(void* ptr, void* info);
char* QFileIconProvider_TypeDefault(void* ptr, void* info);
void QFileIconProvider_DestroyQFileIconProvider(void* ptr);
char* QFileIconProvider_ObjectNameAbs(void* ptr);
void QFileIconProvider_SetObjectNameAbs(void* ptr, char* name);
int QFileSystemModel_FilePathRole_Type();
int QFileSystemModel_FileNameRole_Type();
int QFileSystemModel_FilePermissions_Type();
int QFileSystemModel_IsReadOnly(void* ptr);
int QFileSystemModel_NameFilterDisables(void* ptr);
int QFileSystemModel_ResolveSymlinks(void* ptr);
int QFileSystemModel_Rmdir(void* ptr, void* index);
void QFileSystemModel_SetNameFilterDisables(void* ptr, int enable);
void QFileSystemModel_SetReadOnly(void* ptr, int enable);
void QFileSystemModel_SetResolveSymlinks(void* ptr, int enable);
void* QFileSystemModel_NewQFileSystemModel(void* parent);
int QFileSystemModel_CanFetchMore(void* ptr, void* parent);
int QFileSystemModel_CanFetchMoreDefault(void* ptr, void* parent);
int QFileSystemModel_ColumnCount(void* ptr, void* parent);
int QFileSystemModel_ColumnCountDefault(void* ptr, void* parent);
void* QFileSystemModel_Data(void* ptr, void* index, int role);
void* QFileSystemModel_DataDefault(void* ptr, void* index, int role);
void QFileSystemModel_ConnectDirectoryLoaded(void* ptr);
void QFileSystemModel_DisconnectDirectoryLoaded(void* ptr);
void QFileSystemModel_DirectoryLoaded(void* ptr, char* path);
int QFileSystemModel_DropMimeData(void* ptr, void* data, int action, int row, int column, void* parent);
int QFileSystemModel_DropMimeDataDefault(void* ptr, void* data, int action, int row, int column, void* parent);
int QFileSystemModel_Event(void* ptr, void* event);
int QFileSystemModel_EventDefault(void* ptr, void* event);
void QFileSystemModel_FetchMore(void* ptr, void* parent);
void QFileSystemModel_FetchMoreDefault(void* ptr, void* parent);
void* QFileSystemModel_FileIcon(void* ptr, void* index);
char* QFileSystemModel_FileName(void* ptr, void* index);
char* QFileSystemModel_FilePath(void* ptr, void* index);
void QFileSystemModel_ConnectFileRenamed(void* ptr);
void QFileSystemModel_DisconnectFileRenamed(void* ptr);
void QFileSystemModel_FileRenamed(void* ptr, char* path, char* oldName, char* newName);
int QFileSystemModel_Filter(void* ptr);
int QFileSystemModel_Flags(void* ptr, void* index);
int QFileSystemModel_FlagsDefault(void* ptr, void* index);
int QFileSystemModel_HasChildren(void* ptr, void* parent);
int QFileSystemModel_HasChildrenDefault(void* ptr, void* parent);
void* QFileSystemModel_HeaderData(void* ptr, int section, int orientation, int role);
void* QFileSystemModel_HeaderDataDefault(void* ptr, int section, int orientation, int role);
void* QFileSystemModel_IconProvider(void* ptr);
void* QFileSystemModel_Index2(void* ptr, char* path, int column);
void* QFileSystemModel_Index(void* ptr, int row, int column, void* parent);
void* QFileSystemModel_IndexDefault(void* ptr, int row, int column, void* parent);
int QFileSystemModel_IsDir(void* ptr, void* index);
void* QFileSystemModel_LastModified(void* ptr, void* index);
char* QFileSystemModel_MimeTypes(void* ptr);
char* QFileSystemModel_MimeTypesDefault(void* ptr);
void* QFileSystemModel_Mkdir(void* ptr, void* parent, char* name);
void* QFileSystemModel_MyComputer(void* ptr, int role);
char* QFileSystemModel_NameFilters(void* ptr);
void* QFileSystemModel_Parent(void* ptr, void* index);
void* QFileSystemModel_ParentDefault(void* ptr, void* index);
void* QFileSystemModel_RootDirectory(void* ptr);
char* QFileSystemModel_RootPath(void* ptr);
void QFileSystemModel_ConnectRootPathChanged(void* ptr);
void QFileSystemModel_DisconnectRootPathChanged(void* ptr);
void QFileSystemModel_RootPathChanged(void* ptr, char* newPath);
int QFileSystemModel_RowCount(void* ptr, void* parent);
int QFileSystemModel_RowCountDefault(void* ptr, void* parent);
int QFileSystemModel_SetData(void* ptr, void* idx, void* value, int role);
int QFileSystemModel_SetDataDefault(void* ptr, void* idx, void* value, int role);
void QFileSystemModel_SetFilter(void* ptr, int filters);
void QFileSystemModel_SetIconProvider(void* ptr, void* provider);
void QFileSystemModel_SetNameFilters(void* ptr, char* filters);
void* QFileSystemModel_SetRootPath(void* ptr, char* newPath);
long long QFileSystemModel_Size(void* ptr, void* index);
void QFileSystemModel_Sort(void* ptr, int column, int order);
void QFileSystemModel_SortDefault(void* ptr, int column, int order);
int QFileSystemModel_SupportedDropActions(void* ptr);
int QFileSystemModel_SupportedDropActionsDefault(void* ptr);
void QFileSystemModel_TimerEvent(void* ptr, void* event);
void QFileSystemModel_TimerEventDefault(void* ptr, void* event);
char* QFileSystemModel_Type(void* ptr, void* index);
void QFileSystemModel_DestroyQFileSystemModel(void* ptr);
void QFileSystemModel_Revert(void* ptr);
void QFileSystemModel_RevertDefault(void* ptr);
void QFileSystemModel_ChildEvent(void* ptr, void* event);
void QFileSystemModel_ChildEventDefault(void* ptr, void* event);
void QFileSystemModel_CustomEvent(void* ptr, void* event);
void QFileSystemModel_CustomEventDefault(void* ptr, void* event);
void* QFocusFrame_NewQFocusFrame(void* parent);
int QFocusFrame_Event(void* ptr, void* e);
int QFocusFrame_EventDefault(void* ptr, void* e);
int QFocusFrame_EventFilter(void* ptr, void* o, void* e);
int QFocusFrame_EventFilterDefault(void* ptr, void* o, void* e);
void QFocusFrame_PaintEvent(void* ptr, void* v);
void QFocusFrame_PaintEventDefault(void* ptr, void* v);
void QFocusFrame_SetWidget(void* ptr, void* widget);
void* QFocusFrame_Widget(void* ptr);
void QFocusFrame_DestroyQFocusFrame(void* ptr);
void QFocusFrame_ActionEvent(void* ptr, void* event);
void QFocusFrame_ActionEventDefault(void* ptr, void* event);
void QFocusFrame_DragEnterEvent(void* ptr, void* event);
void QFocusFrame_DragEnterEventDefault(void* ptr, void* event);
void QFocusFrame_DragLeaveEvent(void* ptr, void* event);
void QFocusFrame_DragLeaveEventDefault(void* ptr, void* event);
void QFocusFrame_DragMoveEvent(void* ptr, void* event);
void QFocusFrame_DragMoveEventDefault(void* ptr, void* event);
void QFocusFrame_DropEvent(void* ptr, void* event);
void QFocusFrame_DropEventDefault(void* ptr, void* event);
void QFocusFrame_EnterEvent(void* ptr, void* event);
void QFocusFrame_EnterEventDefault(void* ptr, void* event);
void QFocusFrame_FocusInEvent(void* ptr, void* event);
void QFocusFrame_FocusInEventDefault(void* ptr, void* event);
void QFocusFrame_FocusOutEvent(void* ptr, void* event);
void QFocusFrame_FocusOutEventDefault(void* ptr, void* event);
void QFocusFrame_HideEvent(void* ptr, void* event);
void QFocusFrame_HideEventDefault(void* ptr, void* event);
void QFocusFrame_LeaveEvent(void* ptr, void* event);
void QFocusFrame_LeaveEventDefault(void* ptr, void* event);
void QFocusFrame_MoveEvent(void* ptr, void* event);
void QFocusFrame_MoveEventDefault(void* ptr, void* event);
void QFocusFrame_SetVisible(void* ptr, int visible);
void QFocusFrame_SetVisibleDefault(void* ptr, int visible);
void QFocusFrame_ShowEvent(void* ptr, void* event);
void QFocusFrame_ShowEventDefault(void* ptr, void* event);
void QFocusFrame_ChangeEvent(void* ptr, void* event);
void QFocusFrame_ChangeEventDefault(void* ptr, void* event);
void QFocusFrame_CloseEvent(void* ptr, void* event);
void QFocusFrame_CloseEventDefault(void* ptr, void* event);
void QFocusFrame_ContextMenuEvent(void* ptr, void* event);
void QFocusFrame_ContextMenuEventDefault(void* ptr, void* event);
void QFocusFrame_InitPainter(void* ptr, void* painter);
void QFocusFrame_InitPainterDefault(void* ptr, void* painter);
void QFocusFrame_InputMethodEvent(void* ptr, void* event);
void QFocusFrame_InputMethodEventDefault(void* ptr, void* event);
void QFocusFrame_KeyPressEvent(void* ptr, void* event);
void QFocusFrame_KeyPressEventDefault(void* ptr, void* event);
void QFocusFrame_KeyReleaseEvent(void* ptr, void* event);
void QFocusFrame_KeyReleaseEventDefault(void* ptr, void* event);
void QFocusFrame_MouseDoubleClickEvent(void* ptr, void* event);
void QFocusFrame_MouseDoubleClickEventDefault(void* ptr, void* event);
void QFocusFrame_MouseMoveEvent(void* ptr, void* event);
void QFocusFrame_MouseMoveEventDefault(void* ptr, void* event);
void QFocusFrame_MousePressEvent(void* ptr, void* event);
void QFocusFrame_MousePressEventDefault(void* ptr, void* event);
void QFocusFrame_MouseReleaseEvent(void* ptr, void* event);
void QFocusFrame_MouseReleaseEventDefault(void* ptr, void* event);
void QFocusFrame_ResizeEvent(void* ptr, void* event);
void QFocusFrame_ResizeEventDefault(void* ptr, void* event);
void QFocusFrame_TabletEvent(void* ptr, void* event);
void QFocusFrame_TabletEventDefault(void* ptr, void* event);
void QFocusFrame_WheelEvent(void* ptr, void* event);
void QFocusFrame_WheelEventDefault(void* ptr, void* event);
void QFocusFrame_TimerEvent(void* ptr, void* event);
void QFocusFrame_TimerEventDefault(void* ptr, void* event);
void QFocusFrame_ChildEvent(void* ptr, void* event);
void QFocusFrame_ChildEventDefault(void* ptr, void* event);
void QFocusFrame_CustomEvent(void* ptr, void* event);
void QFocusFrame_CustomEventDefault(void* ptr, void* event);
int QFontComboBox_FontFilters(void* ptr);
void QFontComboBox_SetCurrentFont(void* ptr, void* font);
void QFontComboBox_SetFontFilters(void* ptr, int filters);
void QFontComboBox_SetWritingSystem(void* ptr, int script);
int QFontComboBox_WritingSystem(void* ptr);
void* QFontComboBox_NewQFontComboBox(void* parent);
int QFontComboBox_Event(void* ptr, void* e);
int QFontComboBox_EventDefault(void* ptr, void* e);
void* QFontComboBox_SizeHint(void* ptr);
void* QFontComboBox_SizeHintDefault(void* ptr);
void QFontComboBox_DestroyQFontComboBox(void* ptr);
void QFontComboBox_ChangeEvent(void* ptr, void* e);
void QFontComboBox_ChangeEventDefault(void* ptr, void* e);
void QFontComboBox_ContextMenuEvent(void* ptr, void* e);
void QFontComboBox_ContextMenuEventDefault(void* ptr, void* e);
void QFontComboBox_FocusInEvent(void* ptr, void* e);
void QFontComboBox_FocusInEventDefault(void* ptr, void* e);
void QFontComboBox_FocusOutEvent(void* ptr, void* e);
void QFontComboBox_FocusOutEventDefault(void* ptr, void* e);
void QFontComboBox_HideEvent(void* ptr, void* e);
void QFontComboBox_HideEventDefault(void* ptr, void* e);
void QFontComboBox_HidePopup(void* ptr);
void QFontComboBox_HidePopupDefault(void* ptr);
void QFontComboBox_InputMethodEvent(void* ptr, void* e);
void QFontComboBox_InputMethodEventDefault(void* ptr, void* e);
void QFontComboBox_KeyPressEvent(void* ptr, void* e);
void QFontComboBox_KeyPressEventDefault(void* ptr, void* e);
void QFontComboBox_KeyReleaseEvent(void* ptr, void* e);
void QFontComboBox_KeyReleaseEventDefault(void* ptr, void* e);
void QFontComboBox_MousePressEvent(void* ptr, void* e);
void QFontComboBox_MousePressEventDefault(void* ptr, void* e);
void QFontComboBox_MouseReleaseEvent(void* ptr, void* e);
void QFontComboBox_MouseReleaseEventDefault(void* ptr, void* e);
void QFontComboBox_PaintEvent(void* ptr, void* e);
void QFontComboBox_PaintEventDefault(void* ptr, void* e);
void QFontComboBox_ResizeEvent(void* ptr, void* e);
void QFontComboBox_ResizeEventDefault(void* ptr, void* e);
void QFontComboBox_ShowEvent(void* ptr, void* e);
void QFontComboBox_ShowEventDefault(void* ptr, void* e);
void QFontComboBox_ShowPopup(void* ptr);
void QFontComboBox_ShowPopupDefault(void* ptr);
void QFontComboBox_WheelEvent(void* ptr, void* e);
void QFontComboBox_WheelEventDefault(void* ptr, void* e);
void QFontComboBox_ActionEvent(void* ptr, void* event);
void QFontComboBox_ActionEventDefault(void* ptr, void* event);
void QFontComboBox_DragEnterEvent(void* ptr, void* event);
void QFontComboBox_DragEnterEventDefault(void* ptr, void* event);
void QFontComboBox_DragLeaveEvent(void* ptr, void* event);
void QFontComboBox_DragLeaveEventDefault(void* ptr, void* event);
void QFontComboBox_DragMoveEvent(void* ptr, void* event);
void QFontComboBox_DragMoveEventDefault(void* ptr, void* event);
void QFontComboBox_DropEvent(void* ptr, void* event);
void QFontComboBox_DropEventDefault(void* ptr, void* event);
void QFontComboBox_EnterEvent(void* ptr, void* event);
void QFontComboBox_EnterEventDefault(void* ptr, void* event);
void QFontComboBox_LeaveEvent(void* ptr, void* event);
void QFontComboBox_LeaveEventDefault(void* ptr, void* event);
void QFontComboBox_MoveEvent(void* ptr, void* event);
void QFontComboBox_MoveEventDefault(void* ptr, void* event);
void QFontComboBox_SetVisible(void* ptr, int visible);
void QFontComboBox_SetVisibleDefault(void* ptr, int visible);
void QFontComboBox_CloseEvent(void* ptr, void* event);
void QFontComboBox_CloseEventDefault(void* ptr, void* event);
void QFontComboBox_InitPainter(void* ptr, void* painter);
void QFontComboBox_InitPainterDefault(void* ptr, void* painter);
void QFontComboBox_MouseDoubleClickEvent(void* ptr, void* event);
void QFontComboBox_MouseDoubleClickEventDefault(void* ptr, void* event);
void QFontComboBox_MouseMoveEvent(void* ptr, void* event);
void QFontComboBox_MouseMoveEventDefault(void* ptr, void* event);
void QFontComboBox_TabletEvent(void* ptr, void* event);
void QFontComboBox_TabletEventDefault(void* ptr, void* event);
void QFontComboBox_TimerEvent(void* ptr, void* event);
void QFontComboBox_TimerEventDefault(void* ptr, void* event);
void QFontComboBox_ChildEvent(void* ptr, void* event);
void QFontComboBox_ChildEventDefault(void* ptr, void* event);
void QFontComboBox_CustomEvent(void* ptr, void* event);
void QFontComboBox_CustomEventDefault(void* ptr, void* event);
int QFontDialog_Options(void* ptr);
void QFontDialog_SetOptions(void* ptr, int options);
void* QFontDialog_NewQFontDialog(void* parent);
void* QFontDialog_NewQFontDialog2(void* initial, void* parent);
void QFontDialog_ChangeEvent(void* ptr, void* e);
void QFontDialog_ChangeEventDefault(void* ptr, void* e);
void QFontDialog_Done(void* ptr, int result);
void QFontDialog_DoneDefault(void* ptr, int result);
void QFontDialog_Open(void* ptr, void* receiver, char* member);
void QFontDialog_SetCurrentFont(void* ptr, void* font);
void QFontDialog_SetOption(void* ptr, int option, int on);
void QFontDialog_SetVisible(void* ptr, int visible);
void QFontDialog_SetVisibleDefault(void* ptr, int visible);
int QFontDialog_TestOption(void* ptr, int option);
void QFontDialog_Accept(void* ptr);
void QFontDialog_AcceptDefault(void* ptr);
void QFontDialog_CloseEvent(void* ptr, void* e);
void QFontDialog_CloseEventDefault(void* ptr, void* e);
void QFontDialog_ContextMenuEvent(void* ptr, void* e);
void QFontDialog_ContextMenuEventDefault(void* ptr, void* e);
void QFontDialog_KeyPressEvent(void* ptr, void* e);
void QFontDialog_KeyPressEventDefault(void* ptr, void* e);
void QFontDialog_Reject(void* ptr);
void QFontDialog_RejectDefault(void* ptr);
void QFontDialog_ResizeEvent(void* ptr, void* v);
void QFontDialog_ResizeEventDefault(void* ptr, void* v);
void QFontDialog_ShowEvent(void* ptr, void* event);
void QFontDialog_ShowEventDefault(void* ptr, void* event);
void QFontDialog_ActionEvent(void* ptr, void* event);
void QFontDialog_ActionEventDefault(void* ptr, void* event);
void QFontDialog_DragEnterEvent(void* ptr, void* event);
void QFontDialog_DragEnterEventDefault(void* ptr, void* event);
void QFontDialog_DragLeaveEvent(void* ptr, void* event);
void QFontDialog_DragLeaveEventDefault(void* ptr, void* event);
void QFontDialog_DragMoveEvent(void* ptr, void* event);
void QFontDialog_DragMoveEventDefault(void* ptr, void* event);
void QFontDialog_DropEvent(void* ptr, void* event);
void QFontDialog_DropEventDefault(void* ptr, void* event);
void QFontDialog_EnterEvent(void* ptr, void* event);
void QFontDialog_EnterEventDefault(void* ptr, void* event);
void QFontDialog_FocusInEvent(void* ptr, void* event);
void QFontDialog_FocusInEventDefault(void* ptr, void* event);
void QFontDialog_FocusOutEvent(void* ptr, void* event);
void QFontDialog_FocusOutEventDefault(void* ptr, void* event);
void QFontDialog_HideEvent(void* ptr, void* event);
void QFontDialog_HideEventDefault(void* ptr, void* event);
void QFontDialog_LeaveEvent(void* ptr, void* event);
void QFontDialog_LeaveEventDefault(void* ptr, void* event);
void QFontDialog_MoveEvent(void* ptr, void* event);
void QFontDialog_MoveEventDefault(void* ptr, void* event);
void QFontDialog_PaintEvent(void* ptr, void* event);
void QFontDialog_PaintEventDefault(void* ptr, void* event);
void QFontDialog_InitPainter(void* ptr, void* painter);
void QFontDialog_InitPainterDefault(void* ptr, void* painter);
void QFontDialog_InputMethodEvent(void* ptr, void* event);
void QFontDialog_InputMethodEventDefault(void* ptr, void* event);
void QFontDialog_KeyReleaseEvent(void* ptr, void* event);
void QFontDialog_KeyReleaseEventDefault(void* ptr, void* event);
void QFontDialog_MouseDoubleClickEvent(void* ptr, void* event);
void QFontDialog_MouseDoubleClickEventDefault(void* ptr, void* event);
void QFontDialog_MouseMoveEvent(void* ptr, void* event);
void QFontDialog_MouseMoveEventDefault(void* ptr, void* event);
void QFontDialog_MousePressEvent(void* ptr, void* event);
void QFontDialog_MousePressEventDefault(void* ptr, void* event);
void QFontDialog_MouseReleaseEvent(void* ptr, void* event);
void QFontDialog_MouseReleaseEventDefault(void* ptr, void* event);
void QFontDialog_TabletEvent(void* ptr, void* event);
void QFontDialog_TabletEventDefault(void* ptr, void* event);
void QFontDialog_WheelEvent(void* ptr, void* event);
void QFontDialog_WheelEventDefault(void* ptr, void* event);
void QFontDialog_TimerEvent(void* ptr, void* event);
void QFontDialog_TimerEventDefault(void* ptr, void* event);
void QFontDialog_ChildEvent(void* ptr, void* event);
void QFontDialog_ChildEventDefault(void* ptr, void* event);
void QFontDialog_CustomEvent(void* ptr, void* event);
void QFontDialog_CustomEventDefault(void* ptr, void* event);
int QFormLayout_FieldGrowthPolicy(void* ptr);
int QFormLayout_FormAlignment(void* ptr);
int QFormLayout_HorizontalSpacing(void* ptr);
int QFormLayout_LabelAlignment(void* ptr);
int QFormLayout_RowWrapPolicy(void* ptr);
void QFormLayout_SetFieldGrowthPolicy(void* ptr, int policy);
void QFormLayout_SetFormAlignment(void* ptr, int alignment);
void QFormLayout_SetHorizontalSpacing(void* ptr, int spacing);
void QFormLayout_SetLabelAlignment(void* ptr, int alignment);
void QFormLayout_SetRowWrapPolicy(void* ptr, int policy);
void QFormLayout_SetVerticalSpacing(void* ptr, int spacing);
int QFormLayout_VerticalSpacing(void* ptr);
void* QFormLayout_NewQFormLayout(void* parent);
void QFormLayout_AddItem(void* ptr, void* item);
void QFormLayout_AddItemDefault(void* ptr, void* item);
void QFormLayout_AddRow6(void* ptr, void* layout);
void QFormLayout_AddRow2(void* ptr, void* label, void* field);
void QFormLayout_AddRow(void* ptr, void* label, void* field);
void QFormLayout_AddRow5(void* ptr, void* widget);
void QFormLayout_AddRow4(void* ptr, char* labelText, void* field);
void QFormLayout_AddRow3(void* ptr, char* labelText, void* field);
int QFormLayout_Count(void* ptr);
int QFormLayout_CountDefault(void* ptr);
int QFormLayout_ExpandingDirections(void* ptr);
int QFormLayout_ExpandingDirectionsDefault(void* ptr);
int QFormLayout_HasHeightForWidth(void* ptr);
int QFormLayout_HasHeightForWidthDefault(void* ptr);
int QFormLayout_HeightForWidth(void* ptr, int width);
int QFormLayout_HeightForWidthDefault(void* ptr, int width);
void QFormLayout_InsertRow6(void* ptr, int row, void* layout);
void QFormLayout_InsertRow2(void* ptr, int row, void* label, void* field);
void QFormLayout_InsertRow(void* ptr, int row, void* label, void* field);
void QFormLayout_InsertRow5(void* ptr, int row, void* widget);
void QFormLayout_InsertRow4(void* ptr, int row, char* labelText, void* field);
void QFormLayout_InsertRow3(void* ptr, int row, char* labelText, void* field);
void QFormLayout_Invalidate(void* ptr);
void QFormLayout_InvalidateDefault(void* ptr);
void* QFormLayout_ItemAt(void* ptr, int row, int role);
void* QFormLayout_LabelForField2(void* ptr, void* field);
void* QFormLayout_LabelForField(void* ptr, void* field);
void* QFormLayout_MinimumSize(void* ptr);
void* QFormLayout_MinimumSizeDefault(void* ptr);
int QFormLayout_RowCount(void* ptr);
void QFormLayout_SetGeometry(void* ptr, void* rect);
void QFormLayout_SetGeometryDefault(void* ptr, void* rect);
void QFormLayout_SetItem(void* ptr, int row, int role, void* item);
void QFormLayout_SetLayout(void* ptr, int row, int role, void* layout);
void QFormLayout_SetSpacing(void* ptr, int spacing);
void QFormLayout_SetWidget(void* ptr, int row, int role, void* widget);
void* QFormLayout_SizeHint(void* ptr);
void* QFormLayout_SizeHintDefault(void* ptr);
int QFormLayout_Spacing(void* ptr);
void* QFormLayout_TakeAt(void* ptr, int index);
void* QFormLayout_TakeAtDefault(void* ptr, int index);
void QFormLayout_DestroyQFormLayout(void* ptr);
void QFormLayout_ChildEvent(void* ptr, void* e);
void QFormLayout_ChildEventDefault(void* ptr, void* e);
void QFormLayout_TimerEvent(void* ptr, void* event);
void QFormLayout_TimerEventDefault(void* ptr, void* event);
void QFormLayout_CustomEvent(void* ptr, void* event);
void QFormLayout_CustomEventDefault(void* ptr, void* event);
void* QFrame_FrameRect(void* ptr);
int QFrame_FrameShadow(void* ptr);
int QFrame_FrameShape(void* ptr);
int QFrame_FrameWidth(void* ptr);
int QFrame_LineWidth(void* ptr);
int QFrame_MidLineWidth(void* ptr);
void QFrame_SetFrameRect(void* ptr, void* v);
void QFrame_SetFrameShadow(void* ptr, int v);
void QFrame_SetFrameShape(void* ptr, int v);
void QFrame_SetLineWidth(void* ptr, int v);
void QFrame_SetMidLineWidth(void* ptr, int v);
void* QFrame_NewQFrame(void* parent, int f);
void QFrame_ChangeEvent(void* ptr, void* ev);
void QFrame_ChangeEventDefault(void* ptr, void* ev);
int QFrame_Event(void* ptr, void* e);
int QFrame_EventDefault(void* ptr, void* e);
int QFrame_FrameStyle(void* ptr);
void QFrame_PaintEvent(void* ptr, void* v);
void QFrame_PaintEventDefault(void* ptr, void* v);
void QFrame_SetFrameStyle(void* ptr, int style);
void* QFrame_SizeHint(void* ptr);
void* QFrame_SizeHintDefault(void* ptr);
void QFrame_DestroyQFrame(void* ptr);
void QFrame_ActionEvent(void* ptr, void* event);
void QFrame_ActionEventDefault(void* ptr, void* event);
void QFrame_DragEnterEvent(void* ptr, void* event);
void QFrame_DragEnterEventDefault(void* ptr, void* event);
void QFrame_DragLeaveEvent(void* ptr, void* event);
void QFrame_DragLeaveEventDefault(void* ptr, void* event);
void QFrame_DragMoveEvent(void* ptr, void* event);
void QFrame_DragMoveEventDefault(void* ptr, void* event);
void QFrame_DropEvent(void* ptr, void* event);
void QFrame_DropEventDefault(void* ptr, void* event);
void QFrame_EnterEvent(void* ptr, void* event);
void QFrame_EnterEventDefault(void* ptr, void* event);
void QFrame_FocusInEvent(void* ptr, void* event);
void QFrame_FocusInEventDefault(void* ptr, void* event);
void QFrame_FocusOutEvent(void* ptr, void* event);
void QFrame_FocusOutEventDefault(void* ptr, void* event);
void QFrame_HideEvent(void* ptr, void* event);
void QFrame_HideEventDefault(void* ptr, void* event);
void QFrame_LeaveEvent(void* ptr, void* event);
void QFrame_LeaveEventDefault(void* ptr, void* event);
void QFrame_MoveEvent(void* ptr, void* event);
void QFrame_MoveEventDefault(void* ptr, void* event);
void QFrame_SetVisible(void* ptr, int visible);
void QFrame_SetVisibleDefault(void* ptr, int visible);
void QFrame_ShowEvent(void* ptr, void* event);
void QFrame_ShowEventDefault(void* ptr, void* event);
void QFrame_CloseEvent(void* ptr, void* event);
void QFrame_CloseEventDefault(void* ptr, void* event);
void QFrame_ContextMenuEvent(void* ptr, void* event);
void QFrame_ContextMenuEventDefault(void* ptr, void* event);
void QFrame_InitPainter(void* ptr, void* painter);
void QFrame_InitPainterDefault(void* ptr, void* painter);
void QFrame_InputMethodEvent(void* ptr, void* event);
void QFrame_InputMethodEventDefault(void* ptr, void* event);
void QFrame_KeyPressEvent(void* ptr, void* event);
void QFrame_KeyPressEventDefault(void* ptr, void* event);
void QFrame_KeyReleaseEvent(void* ptr, void* event);
void QFrame_KeyReleaseEventDefault(void* ptr, void* event);
void QFrame_MouseDoubleClickEvent(void* ptr, void* event);
void QFrame_MouseDoubleClickEventDefault(void* ptr, void* event);
void QFrame_MouseMoveEvent(void* ptr, void* event);
void QFrame_MouseMoveEventDefault(void* ptr, void* event);
void QFrame_MousePressEvent(void* ptr, void* event);
void QFrame_MousePressEventDefault(void* ptr, void* event);
void QFrame_MouseReleaseEvent(void* ptr, void* event);
void QFrame_MouseReleaseEventDefault(void* ptr, void* event);
void QFrame_ResizeEvent(void* ptr, void* event);
void QFrame_ResizeEventDefault(void* ptr, void* event);
void QFrame_TabletEvent(void* ptr, void* event);
void QFrame_TabletEventDefault(void* ptr, void* event);
void QFrame_WheelEvent(void* ptr, void* event);
void QFrame_WheelEventDefault(void* ptr, void* event);
void QFrame_TimerEvent(void* ptr, void* event);
void QFrame_TimerEventDefault(void* ptr, void* event);
void QFrame_ChildEvent(void* ptr, void* event);
void QFrame_ChildEventDefault(void* ptr, void* event);
void QFrame_CustomEvent(void* ptr, void* event);
void QFrame_CustomEventDefault(void* ptr, void* event);
int QGesture_GestureCancelPolicy(void* ptr);
int QGesture_GestureType(void* ptr);
int QGesture_HasHotSpot(void* ptr);
void QGesture_SetGestureCancelPolicy(void* ptr, int policy);
void QGesture_SetHotSpot(void* ptr, void* value);
int QGesture_State(void* ptr);
void QGesture_UnsetHotSpot(void* ptr);
void* QGesture_NewQGesture(void* parent);
void QGesture_DestroyQGesture(void* ptr);
void QGesture_TimerEvent(void* ptr, void* event);
void QGesture_TimerEventDefault(void* ptr, void* event);
void QGesture_ChildEvent(void* ptr, void* event);
void QGesture_ChildEventDefault(void* ptr, void* event);
void QGesture_CustomEvent(void* ptr, void* event);
void QGesture_CustomEventDefault(void* ptr, void* event);
void QGestureEvent_Accept(void* ptr, void* gesture);
void QGestureEvent_Accept2(void* ptr, int gestureType);
void* QGestureEvent_Gesture(void* ptr, int ty);
void QGestureEvent_Ignore(void* ptr, void* gesture);
void QGestureEvent_Ignore2(void* ptr, int gestureType);
int QGestureEvent_IsAccepted(void* ptr, void* gesture);
int QGestureEvent_IsAccepted2(void* ptr, int gestureType);
void QGestureEvent_SetAccepted(void* ptr, void* gesture, int value);
void QGestureEvent_SetAccepted2(void* ptr, int gestureType, int value);
void* QGestureEvent_Widget(void* ptr);
void QGestureEvent_DestroyQGestureEvent(void* ptr);
void QGraphicsAnchor_SetSizePolicy(void* ptr, int policy);
void QGraphicsAnchor_SetSpacing(void* ptr, double spacing);
int QGraphicsAnchor_SizePolicy(void* ptr);
double QGraphicsAnchor_Spacing(void* ptr);
void QGraphicsAnchor_UnsetSpacing(void* ptr);
void QGraphicsAnchor_DestroyQGraphicsAnchor(void* ptr);
void QGraphicsAnchor_TimerEvent(void* ptr, void* event);
void QGraphicsAnchor_TimerEventDefault(void* ptr, void* event);
void QGraphicsAnchor_ChildEvent(void* ptr, void* event);
void QGraphicsAnchor_ChildEventDefault(void* ptr, void* event);
void QGraphicsAnchor_CustomEvent(void* ptr, void* event);
void QGraphicsAnchor_CustomEventDefault(void* ptr, void* event);
void* QGraphicsAnchorLayout_NewQGraphicsAnchorLayout(void* parent);
void* QGraphicsAnchorLayout_AddAnchor(void* ptr, void* firstItem, int firstEdge, void* secondItem, int secondEdge);
void QGraphicsAnchorLayout_AddAnchors(void* ptr, void* firstItem, void* secondItem, int orientations);
void QGraphicsAnchorLayout_AddCornerAnchors(void* ptr, void* firstItem, int firstCorner, void* secondItem, int secondCorner);
void* QGraphicsAnchorLayout_Anchor(void* ptr, void* firstItem, int firstEdge, void* secondItem, int secondEdge);
int QGraphicsAnchorLayout_Count(void* ptr);
int QGraphicsAnchorLayout_CountDefault(void* ptr);
double QGraphicsAnchorLayout_HorizontalSpacing(void* ptr);
void QGraphicsAnchorLayout_Invalidate(void* ptr);
void QGraphicsAnchorLayout_InvalidateDefault(void* ptr);
void* QGraphicsAnchorLayout_ItemAt(void* ptr, int index);
void* QGraphicsAnchorLayout_ItemAtDefault(void* ptr, int index);
void QGraphicsAnchorLayout_RemoveAt(void* ptr, int index);
void QGraphicsAnchorLayout_RemoveAtDefault(void* ptr, int index);
void QGraphicsAnchorLayout_SetHorizontalSpacing(void* ptr, double spacing);
void QGraphicsAnchorLayout_SetSpacing(void* ptr, double spacing);
void QGraphicsAnchorLayout_SetVerticalSpacing(void* ptr, double spacing);
double QGraphicsAnchorLayout_VerticalSpacing(void* ptr);
void QGraphicsAnchorLayout_DestroyQGraphicsAnchorLayout(void* ptr);
char* QGraphicsAnchorLayout_ObjectNameAbs(void* ptr);
void QGraphicsAnchorLayout_SetObjectNameAbs(void* ptr, char* name);
int QGraphicsBlurEffect_BlurHints(void* ptr);
double QGraphicsBlurEffect_BlurRadius(void* ptr);
void QGraphicsBlurEffect_SetBlurHints(void* ptr, int hints);
void QGraphicsBlurEffect_SetBlurRadius(void* ptr, double blurRadius);
void* QGraphicsBlurEffect_NewQGraphicsBlurEffect(void* parent);
void QGraphicsBlurEffect_ConnectBlurHintsChanged(void* ptr);
void QGraphicsBlurEffect_DisconnectBlurHintsChanged(void* ptr);
void QGraphicsBlurEffect_BlurHintsChanged(void* ptr, int hints);
void QGraphicsBlurEffect_ConnectBlurRadiusChanged(void* ptr);
void QGraphicsBlurEffect_DisconnectBlurRadiusChanged(void* ptr);
void QGraphicsBlurEffect_BlurRadiusChanged(void* ptr, double radius);
void QGraphicsBlurEffect_DestroyQGraphicsBlurEffect(void* ptr);
void QGraphicsBlurEffect_TimerEvent(void* ptr, void* event);
void QGraphicsBlurEffect_TimerEventDefault(void* ptr, void* event);
void QGraphicsBlurEffect_ChildEvent(void* ptr, void* event);
void QGraphicsBlurEffect_ChildEventDefault(void* ptr, void* event);
void QGraphicsBlurEffect_CustomEvent(void* ptr, void* event);
void QGraphicsBlurEffect_CustomEventDefault(void* ptr, void* event);
void* QGraphicsColorizeEffect_Color(void* ptr);
void QGraphicsColorizeEffect_SetColor(void* ptr, void* c);
void QGraphicsColorizeEffect_SetStrength(void* ptr, double strength);
double QGraphicsColorizeEffect_Strength(void* ptr);
void* QGraphicsColorizeEffect_NewQGraphicsColorizeEffect(void* parent);
void QGraphicsColorizeEffect_ConnectColorChanged(void* ptr);
void QGraphicsColorizeEffect_DisconnectColorChanged(void* ptr);
void QGraphicsColorizeEffect_ColorChanged(void* ptr, void* color);
void QGraphicsColorizeEffect_ConnectStrengthChanged(void* ptr);
void QGraphicsColorizeEffect_DisconnectStrengthChanged(void* ptr);
void QGraphicsColorizeEffect_StrengthChanged(void* ptr, double strength);
void QGraphicsColorizeEffect_DestroyQGraphicsColorizeEffect(void* ptr);
void QGraphicsColorizeEffect_TimerEvent(void* ptr, void* event);
void QGraphicsColorizeEffect_TimerEventDefault(void* ptr, void* event);
void QGraphicsColorizeEffect_ChildEvent(void* ptr, void* event);
void QGraphicsColorizeEffect_ChildEventDefault(void* ptr, void* event);
void QGraphicsColorizeEffect_CustomEvent(void* ptr, void* event);
void QGraphicsColorizeEffect_CustomEventDefault(void* ptr, void* event);
double QGraphicsDropShadowEffect_BlurRadius(void* ptr);
void* QGraphicsDropShadowEffect_Color(void* ptr);
void QGraphicsDropShadowEffect_SetBlurRadius(void* ptr, double blurRadius);
void QGraphicsDropShadowEffect_SetColor(void* ptr, void* color);
void QGraphicsDropShadowEffect_SetOffset(void* ptr, void* ofs);
void* QGraphicsDropShadowEffect_NewQGraphicsDropShadowEffect(void* parent);
void QGraphicsDropShadowEffect_ConnectBlurRadiusChanged(void* ptr);
void QGraphicsDropShadowEffect_DisconnectBlurRadiusChanged(void* ptr);
void QGraphicsDropShadowEffect_BlurRadiusChanged(void* ptr, double blurRadius);
void QGraphicsDropShadowEffect_ConnectColorChanged(void* ptr);
void QGraphicsDropShadowEffect_DisconnectColorChanged(void* ptr);
void QGraphicsDropShadowEffect_ColorChanged(void* ptr, void* color);
void QGraphicsDropShadowEffect_SetOffset3(void* ptr, double d);
void QGraphicsDropShadowEffect_SetOffset2(void* ptr, double dx, double dy);
void QGraphicsDropShadowEffect_SetXOffset(void* ptr, double dx);
void QGraphicsDropShadowEffect_SetYOffset(void* ptr, double dy);
double QGraphicsDropShadowEffect_XOffset(void* ptr);
double QGraphicsDropShadowEffect_YOffset(void* ptr);
void QGraphicsDropShadowEffect_DestroyQGraphicsDropShadowEffect(void* ptr);
void QGraphicsDropShadowEffect_TimerEvent(void* ptr, void* event);
void QGraphicsDropShadowEffect_TimerEventDefault(void* ptr, void* event);
void QGraphicsDropShadowEffect_ChildEvent(void* ptr, void* event);
void QGraphicsDropShadowEffect_ChildEventDefault(void* ptr, void* event);
void QGraphicsDropShadowEffect_CustomEvent(void* ptr, void* event);
void QGraphicsDropShadowEffect_CustomEventDefault(void* ptr, void* event);
void QGraphicsEffect_TimerEvent(void* ptr, void* event);
void QGraphicsEffect_TimerEventDefault(void* ptr, void* event);
void QGraphicsEffect_ChildEvent(void* ptr, void* event);
void QGraphicsEffect_ChildEventDefault(void* ptr, void* event);
void QGraphicsEffect_CustomEvent(void* ptr, void* event);
void QGraphicsEffect_CustomEventDefault(void* ptr, void* event);
int QGraphicsEllipseItem_Contains(void* ptr, void* point);
int QGraphicsEllipseItem_ContainsDefault(void* ptr, void* point);
int QGraphicsEllipseItem_IsObscuredBy(void* ptr, void* item);
int QGraphicsEllipseItem_IsObscuredByDefault(void* ptr, void* item);
void QGraphicsEllipseItem_Paint(void* ptr, void* painter, void* option, void* widget);
void QGraphicsEllipseItem_PaintDefault(void* ptr, void* painter, void* option, void* widget);
void QGraphicsEllipseItem_SetRect(void* ptr, void* rect);
void QGraphicsEllipseItem_SetRect2(void* ptr, double x, double y, double width, double height);
void QGraphicsEllipseItem_SetSpanAngle(void* ptr, int angle);
void QGraphicsEllipseItem_SetStartAngle(void* ptr, int angle);
int QGraphicsEllipseItem_SpanAngle(void* ptr);
int QGraphicsEllipseItem_StartAngle(void* ptr);
int QGraphicsEllipseItem_Type(void* ptr);
int QGraphicsEllipseItem_TypeDefault(void* ptr);
void QGraphicsEllipseItem_DestroyQGraphicsEllipseItem(void* ptr);
char* QGraphicsEllipseItem_ObjectNameAbs(void* ptr);
void QGraphicsEllipseItem_SetObjectNameAbs(void* ptr, char* name);
void* QGraphicsGridLayout_NewQGraphicsGridLayout(void* parent);
void QGraphicsGridLayout_AddItem2(void* ptr, void* item, int row, int column, int alignment);
void QGraphicsGridLayout_AddItem(void* ptr, void* item, int row, int column, int rowSpan, int columnSpan, int alignment);
int QGraphicsGridLayout_Alignment(void* ptr, void* item);
int QGraphicsGridLayout_ColumnAlignment(void* ptr, int column);
int QGraphicsGridLayout_ColumnCount(void* ptr);
double QGraphicsGridLayout_ColumnMaximumWidth(void* ptr, int column);
double QGraphicsGridLayout_ColumnMinimumWidth(void* ptr, int column);
double QGraphicsGridLayout_ColumnPreferredWidth(void* ptr, int column);
double QGraphicsGridLayout_ColumnSpacing(void* ptr, int column);
int QGraphicsGridLayout_ColumnStretchFactor(void* ptr, int column);
int QGraphicsGridLayout_Count(void* ptr);
int QGraphicsGridLayout_CountDefault(void* ptr);
double QGraphicsGridLayout_HorizontalSpacing(void* ptr);
void QGraphicsGridLayout_Invalidate(void* ptr);
void QGraphicsGridLayout_InvalidateDefault(void* ptr);
void* QGraphicsGridLayout_ItemAt(void* ptr, int row, int column);
void QGraphicsGridLayout_RemoveAt(void* ptr, int index);
void QGraphicsGridLayout_RemoveAtDefault(void* ptr, int index);
void QGraphicsGridLayout_RemoveItem(void* ptr, void* item);
int QGraphicsGridLayout_RowAlignment(void* ptr, int row);
int QGraphicsGridLayout_RowCount(void* ptr);
double QGraphicsGridLayout_RowMaximumHeight(void* ptr, int row);
double QGraphicsGridLayout_RowMinimumHeight(void* ptr, int row);
double QGraphicsGridLayout_RowPreferredHeight(void* ptr, int row);
double QGraphicsGridLayout_RowSpacing(void* ptr, int row);
int QGraphicsGridLayout_RowStretchFactor(void* ptr, int row);
void QGraphicsGridLayout_SetAlignment(void* ptr, void* item, int alignment);
void QGraphicsGridLayout_SetColumnAlignment(void* ptr, int column, int alignment);
void QGraphicsGridLayout_SetColumnFixedWidth(void* ptr, int column, double width);
void QGraphicsGridLayout_SetColumnMaximumWidth(void* ptr, int column, double width);
void QGraphicsGridLayout_SetColumnMinimumWidth(void* ptr, int column, double width);
void QGraphicsGridLayout_SetColumnPreferredWidth(void* ptr, int column, double width);
void QGraphicsGridLayout_SetColumnSpacing(void* ptr, int column, double spacing);
void QGraphicsGridLayout_SetColumnStretchFactor(void* ptr, int column, int stretch);
void QGraphicsGridLayout_SetHorizontalSpacing(void* ptr, double spacing);
void QGraphicsGridLayout_SetRowAlignment(void* ptr, int row, int alignment);
void QGraphicsGridLayout_SetRowFixedHeight(void* ptr, int row, double height);
void QGraphicsGridLayout_SetRowMaximumHeight(void* ptr, int row, double height);
void QGraphicsGridLayout_SetRowMinimumHeight(void* ptr, int row, double height);
void QGraphicsGridLayout_SetRowPreferredHeight(void* ptr, int row, double height);
void QGraphicsGridLayout_SetRowSpacing(void* ptr, int row, double spacing);
void QGraphicsGridLayout_SetRowStretchFactor(void* ptr, int row, int stretch);
void QGraphicsGridLayout_SetSpacing(void* ptr, double spacing);
void QGraphicsGridLayout_SetVerticalSpacing(void* ptr, double spacing);
double QGraphicsGridLayout_VerticalSpacing(void* ptr);
void QGraphicsGridLayout_DestroyQGraphicsGridLayout(void* ptr);
char* QGraphicsGridLayout_ObjectNameAbs(void* ptr);
void QGraphicsGridLayout_SetObjectNameAbs(void* ptr, char* name);
void* QGraphicsItemGroup_NewQGraphicsItemGroup(void* parent);
void QGraphicsItemGroup_AddToGroup(void* ptr, void* item);
int QGraphicsItemGroup_IsObscuredBy(void* ptr, void* item);
int QGraphicsItemGroup_IsObscuredByDefault(void* ptr, void* item);
void QGraphicsItemGroup_Paint(void* ptr, void* painter, void* option, void* widget);
void QGraphicsItemGroup_PaintDefault(void* ptr, void* painter, void* option, void* widget);
void QGraphicsItemGroup_RemoveFromGroup(void* ptr, void* item);
int QGraphicsItemGroup_Type(void* ptr);
int QGraphicsItemGroup_TypeDefault(void* ptr);
void QGraphicsItemGroup_DestroyQGraphicsItemGroup(void* ptr);
char* QGraphicsItemGroup_ObjectNameAbs(void* ptr);
void QGraphicsItemGroup_SetObjectNameAbs(void* ptr, char* name);
void* QGraphicsLineItem_NewQGraphicsLineItem(void* parent);
void* QGraphicsLineItem_NewQGraphicsLineItem2(void* line, void* parent);
void* QGraphicsLineItem_NewQGraphicsLineItem3(double x1, double y1, double x2, double y2, void* parent);
int QGraphicsLineItem_Contains(void* ptr, void* point);
int QGraphicsLineItem_ContainsDefault(void* ptr, void* point);
int QGraphicsLineItem_IsObscuredBy(void* ptr, void* item);
int QGraphicsLineItem_IsObscuredByDefault(void* ptr, void* item);
void QGraphicsLineItem_Paint(void* ptr, void* painter, void* option, void* widget);
void QGraphicsLineItem_PaintDefault(void* ptr, void* painter, void* option, void* widget);
void QGraphicsLineItem_SetLine(void* ptr, void* line);
void QGraphicsLineItem_SetLine2(void* ptr, double x1, double y1, double x2, double y2);
void QGraphicsLineItem_SetPen(void* ptr, void* pen);
int QGraphicsLineItem_Type(void* ptr);
int QGraphicsLineItem_TypeDefault(void* ptr);
void QGraphicsLineItem_DestroyQGraphicsLineItem(void* ptr);
char* QGraphicsLineItem_ObjectNameAbs(void* ptr);
void QGraphicsLineItem_SetObjectNameAbs(void* ptr, char* name);
void* QGraphicsLinearLayout_NewQGraphicsLinearLayout(void* parent);
void* QGraphicsLinearLayout_NewQGraphicsLinearLayout2(int orientation, void* parent);
void QGraphicsLinearLayout_AddItem(void* ptr, void* item);
void QGraphicsLinearLayout_AddStretch(void* ptr, int stretch);
int QGraphicsLinearLayout_Alignment(void* ptr, void* item);
int QGraphicsLinearLayout_Count(void* ptr);
int QGraphicsLinearLayout_CountDefault(void* ptr);
void QGraphicsLinearLayout_InsertItem(void* ptr, int index, void* item);
void QGraphicsLinearLayout_InsertStretch(void* ptr, int index, int stretch);
void QGraphicsLinearLayout_Invalidate(void* ptr);
void QGraphicsLinearLayout_InvalidateDefault(void* ptr);
void* QGraphicsLinearLayout_ItemAt(void* ptr, int index);
void* QGraphicsLinearLayout_ItemAtDefault(void* ptr, int index);
double QGraphicsLinearLayout_ItemSpacing(void* ptr, int index);
int QGraphicsLinearLayout_Orientation(void* ptr);
void QGraphicsLinearLayout_RemoveAt(void* ptr, int index);
void QGraphicsLinearLayout_RemoveAtDefault(void* ptr, int index);
void QGraphicsLinearLayout_RemoveItem(void* ptr, void* item);
void QGraphicsLinearLayout_SetAlignment(void* ptr, void* item, int alignment);
void QGraphicsLinearLayout_SetItemSpacing(void* ptr, int index, double spacing);
void QGraphicsLinearLayout_SetOrientation(void* ptr, int orientation);
void QGraphicsLinearLayout_SetSpacing(void* ptr, double spacing);
void QGraphicsLinearLayout_SetStretchFactor(void* ptr, void* item, int stretch);
double QGraphicsLinearLayout_Spacing(void* ptr);
int QGraphicsLinearLayout_StretchFactor(void* ptr, void* item);
void QGraphicsLinearLayout_DestroyQGraphicsLinearLayout(void* ptr);
char* QGraphicsLinearLayout_ObjectNameAbs(void* ptr);
void QGraphicsLinearLayout_SetObjectNameAbs(void* ptr, char* name);
void QGraphicsObject_ConnectEnabledChanged(void* ptr);
void QGraphicsObject_DisconnectEnabledChanged(void* ptr);
void QGraphicsObject_EnabledChanged(void* ptr);
int QGraphicsObject_Event(void* ptr, void* ev);
int QGraphicsObject_EventDefault(void* ptr, void* ev);
void QGraphicsObject_GrabGesture(void* ptr, int gesture, int flags);
void QGraphicsObject_ConnectOpacityChanged(void* ptr);
void QGraphicsObject_DisconnectOpacityChanged(void* ptr);
void QGraphicsObject_OpacityChanged(void* ptr);
void QGraphicsObject_ConnectParentChanged(void* ptr);
void QGraphicsObject_DisconnectParentChanged(void* ptr);
void QGraphicsObject_ParentChanged(void* ptr);
void QGraphicsObject_ConnectRotationChanged(void* ptr);
void QGraphicsObject_DisconnectRotationChanged(void* ptr);
void QGraphicsObject_RotationChanged(void* ptr);
void QGraphicsObject_ConnectScaleChanged(void* ptr);
void QGraphicsObject_DisconnectScaleChanged(void* ptr);
void QGraphicsObject_ScaleChanged(void* ptr);
void QGraphicsObject_UngrabGesture(void* ptr, int gesture);
void QGraphicsObject_ConnectVisibleChanged(void* ptr);
void QGraphicsObject_DisconnectVisibleChanged(void* ptr);
void QGraphicsObject_VisibleChanged(void* ptr);
void QGraphicsObject_ConnectXChanged(void* ptr);
void QGraphicsObject_DisconnectXChanged(void* ptr);
void QGraphicsObject_XChanged(void* ptr);
void QGraphicsObject_ConnectYChanged(void* ptr);
void QGraphicsObject_DisconnectYChanged(void* ptr);
void QGraphicsObject_YChanged(void* ptr);
void QGraphicsObject_ConnectZChanged(void* ptr);
void QGraphicsObject_DisconnectZChanged(void* ptr);
void QGraphicsObject_ZChanged(void* ptr);
void QGraphicsObject_DestroyQGraphicsObject(void* ptr);
void QGraphicsObject_TimerEvent(void* ptr, void* event);
void QGraphicsObject_TimerEventDefault(void* ptr, void* event);
void QGraphicsObject_ChildEvent(void* ptr, void* event);
void QGraphicsObject_ChildEventDefault(void* ptr, void* event);
void QGraphicsObject_CustomEvent(void* ptr, void* event);
void QGraphicsObject_CustomEventDefault(void* ptr, void* event);
double QGraphicsOpacityEffect_Opacity(void* ptr);
void* QGraphicsOpacityEffect_OpacityMask(void* ptr);
void QGraphicsOpacityEffect_SetOpacity(void* ptr, double opacity);
void QGraphicsOpacityEffect_SetOpacityMask(void* ptr, void* mask);
void* QGraphicsOpacityEffect_NewQGraphicsOpacityEffect(void* parent);
void QGraphicsOpacityEffect_ConnectOpacityChanged(void* ptr);
void QGraphicsOpacityEffect_DisconnectOpacityChanged(void* ptr);
void QGraphicsOpacityEffect_OpacityChanged(void* ptr, double opacity);
void QGraphicsOpacityEffect_ConnectOpacityMaskChanged(void* ptr);
void QGraphicsOpacityEffect_DisconnectOpacityMaskChanged(void* ptr);
void QGraphicsOpacityEffect_OpacityMaskChanged(void* ptr, void* mask);
void QGraphicsOpacityEffect_DestroyQGraphicsOpacityEffect(void* ptr);
void QGraphicsOpacityEffect_TimerEvent(void* ptr, void* event);
void QGraphicsOpacityEffect_TimerEventDefault(void* ptr, void* event);
void QGraphicsOpacityEffect_ChildEvent(void* ptr, void* event);
void QGraphicsOpacityEffect_ChildEventDefault(void* ptr, void* event);
void QGraphicsOpacityEffect_CustomEvent(void* ptr, void* event);
void QGraphicsOpacityEffect_CustomEventDefault(void* ptr, void* event);
int QGraphicsPathItem_Contains(void* ptr, void* point);
int QGraphicsPathItem_ContainsDefault(void* ptr, void* point);
int QGraphicsPathItem_IsObscuredBy(void* ptr, void* item);
int QGraphicsPathItem_IsObscuredByDefault(void* ptr, void* item);
void QGraphicsPathItem_Paint(void* ptr, void* painter, void* option, void* widget);
void QGraphicsPathItem_PaintDefault(void* ptr, void* painter, void* option, void* widget);
void QGraphicsPathItem_SetPath(void* ptr, void* path);
int QGraphicsPathItem_Type(void* ptr);
int QGraphicsPathItem_TypeDefault(void* ptr);
void QGraphicsPathItem_DestroyQGraphicsPathItem(void* ptr);
char* QGraphicsPathItem_ObjectNameAbs(void* ptr);
void QGraphicsPathItem_SetObjectNameAbs(void* ptr, char* name);
void* QGraphicsPixmapItem_NewQGraphicsPixmapItem(void* parent);
void* QGraphicsPixmapItem_NewQGraphicsPixmapItem2(void* pixmap, void* parent);
int QGraphicsPixmapItem_Contains(void* ptr, void* point);
int QGraphicsPixmapItem_ContainsDefault(void* ptr, void* point);
int QGraphicsPixmapItem_IsObscuredBy(void* ptr, void* item);
int QGraphicsPixmapItem_IsObscuredByDefault(void* ptr, void* item);
void QGraphicsPixmapItem_Paint(void* ptr, void* painter, void* option, void* widget);
void QGraphicsPixmapItem_PaintDefault(void* ptr, void* painter, void* option, void* widget);
void QGraphicsPixmapItem_SetOffset(void* ptr, void* offset);
void QGraphicsPixmapItem_SetOffset2(void* ptr, double x, double y);
void QGraphicsPixmapItem_SetPixmap(void* ptr, void* pixmap);
void QGraphicsPixmapItem_SetShapeMode(void* ptr, int mode);
void QGraphicsPixmapItem_SetTransformationMode(void* ptr, int mode);
int QGraphicsPixmapItem_ShapeMode(void* ptr);
int QGraphicsPixmapItem_TransformationMode(void* ptr);
int QGraphicsPixmapItem_Type(void* ptr);
int QGraphicsPixmapItem_TypeDefault(void* ptr);
void QGraphicsPixmapItem_DestroyQGraphicsPixmapItem(void* ptr);
char* QGraphicsPixmapItem_ObjectNameAbs(void* ptr);
void QGraphicsPixmapItem_SetObjectNameAbs(void* ptr, char* name);
int QGraphicsPolygonItem_Contains(void* ptr, void* point);
int QGraphicsPolygonItem_ContainsDefault(void* ptr, void* point);
int QGraphicsPolygonItem_FillRule(void* ptr);
int QGraphicsPolygonItem_IsObscuredBy(void* ptr, void* item);
int QGraphicsPolygonItem_IsObscuredByDefault(void* ptr, void* item);
void QGraphicsPolygonItem_Paint(void* ptr, void* painter, void* option, void* widget);
void QGraphicsPolygonItem_PaintDefault(void* ptr, void* painter, void* option, void* widget);
void QGraphicsPolygonItem_SetFillRule(void* ptr, int rule);
void QGraphicsPolygonItem_SetPolygon(void* ptr, void* polygon);
int QGraphicsPolygonItem_Type(void* ptr);
int QGraphicsPolygonItem_TypeDefault(void* ptr);
void QGraphicsPolygonItem_DestroyQGraphicsPolygonItem(void* ptr);
char* QGraphicsPolygonItem_ObjectNameAbs(void* ptr);
void QGraphicsPolygonItem_SetObjectNameAbs(void* ptr, char* name);
void* QGraphicsProxyWidget_NewQGraphicsProxyWidget(void* parent, int wFlags);
void QGraphicsProxyWidget_ContextMenuEvent(void* ptr, void* event);
void QGraphicsProxyWidget_ContextMenuEventDefault(void* ptr, void* event);
void* QGraphicsProxyWidget_CreateProxyForChildWidget(void* ptr, void* child);
void QGraphicsProxyWidget_DragEnterEvent(void* ptr, void* event);
void QGraphicsProxyWidget_DragEnterEventDefault(void* ptr, void* event);
void QGraphicsProxyWidget_DragLeaveEvent(void* ptr, void* event);
void QGraphicsProxyWidget_DragLeaveEventDefault(void* ptr, void* event);
void QGraphicsProxyWidget_DragMoveEvent(void* ptr, void* event);
void QGraphicsProxyWidget_DragMoveEventDefault(void* ptr, void* event);
void QGraphicsProxyWidget_DropEvent(void* ptr, void* event);
void QGraphicsProxyWidget_DropEventDefault(void* ptr, void* event);
int QGraphicsProxyWidget_Event(void* ptr, void* event);
int QGraphicsProxyWidget_EventDefault(void* ptr, void* event);
int QGraphicsProxyWidget_EventFilter(void* ptr, void* object, void* event);
int QGraphicsProxyWidget_EventFilterDefault(void* ptr, void* object, void* event);
void QGraphicsProxyWidget_FocusInEvent(void* ptr, void* event);
void QGraphicsProxyWidget_FocusInEventDefault(void* ptr, void* event);
int QGraphicsProxyWidget_FocusNextPrevChild(void* ptr, int next);
int QGraphicsProxyWidget_FocusNextPrevChildDefault(void* ptr, int next);
void QGraphicsProxyWidget_FocusOutEvent(void* ptr, void* event);
void QGraphicsProxyWidget_FocusOutEventDefault(void* ptr, void* event);
void QGraphicsProxyWidget_GrabMouseEvent(void* ptr, void* event);
void QGraphicsProxyWidget_GrabMouseEventDefault(void* ptr, void* event);
void QGraphicsProxyWidget_HideEvent(void* ptr, void* event);
void QGraphicsProxyWidget_HideEventDefault(void* ptr, void* event);
void QGraphicsProxyWidget_HoverEnterEvent(void* ptr, void* event);
void QGraphicsProxyWidget_HoverEnterEventDefault(void* ptr, void* event);
void QGraphicsProxyWidget_HoverLeaveEvent(void* ptr, void* event);
void QGraphicsProxyWidget_HoverLeaveEventDefault(void* ptr, void* event);
void QGraphicsProxyWidget_HoverMoveEvent(void* ptr, void* event);
void QGraphicsProxyWidget_HoverMoveEventDefault(void* ptr, void* event);
void QGraphicsProxyWidget_InputMethodEvent(void* ptr, void* event);
void QGraphicsProxyWidget_InputMethodEventDefault(void* ptr, void* event);
void* QGraphicsProxyWidget_InputMethodQuery(void* ptr, int query);
void* QGraphicsProxyWidget_InputMethodQueryDefault(void* ptr, int query);
void* QGraphicsProxyWidget_ItemChange(void* ptr, int change, void* value);
void* QGraphicsProxyWidget_ItemChangeDefault(void* ptr, int change, void* value);
void QGraphicsProxyWidget_KeyPressEvent(void* ptr, void* event);
void QGraphicsProxyWidget_KeyPressEventDefault(void* ptr, void* event);
void QGraphicsProxyWidget_KeyReleaseEvent(void* ptr, void* event);
void QGraphicsProxyWidget_KeyReleaseEventDefault(void* ptr, void* event);
void QGraphicsProxyWidget_MouseDoubleClickEvent(void* ptr, void* event);
void QGraphicsProxyWidget_MouseDoubleClickEventDefault(void* ptr, void* event);
void QGraphicsProxyWidget_MouseMoveEvent(void* ptr, void* event);
void QGraphicsProxyWidget_MouseMoveEventDefault(void* ptr, void* event);
void QGraphicsProxyWidget_MousePressEvent(void* ptr, void* event);
void QGraphicsProxyWidget_MousePressEventDefault(void* ptr, void* event);
void QGraphicsProxyWidget_MouseReleaseEvent(void* ptr, void* event);
void QGraphicsProxyWidget_MouseReleaseEventDefault(void* ptr, void* event);
void QGraphicsProxyWidget_Paint(void* ptr, void* painter, void* option, void* widget);
void QGraphicsProxyWidget_PaintDefault(void* ptr, void* painter, void* option, void* widget);
void QGraphicsProxyWidget_ResizeEvent(void* ptr, void* event);
void QGraphicsProxyWidget_ResizeEventDefault(void* ptr, void* event);
void QGraphicsProxyWidget_SetWidget(void* ptr, void* widget);
void QGraphicsProxyWidget_ShowEvent(void* ptr, void* event);
void QGraphicsProxyWidget_ShowEventDefault(void* ptr, void* event);
int QGraphicsProxyWidget_Type(void* ptr);
int QGraphicsProxyWidget_TypeDefault(void* ptr);
void QGraphicsProxyWidget_UngrabMouseEvent(void* ptr, void* event);
void QGraphicsProxyWidget_UngrabMouseEventDefault(void* ptr, void* event);
void QGraphicsProxyWidget_WheelEvent(void* ptr, void* event);
void QGraphicsProxyWidget_WheelEventDefault(void* ptr, void* event);
void* QGraphicsProxyWidget_Widget(void* ptr);
void QGraphicsProxyWidget_DestroyQGraphicsProxyWidget(void* ptr);
void QGraphicsProxyWidget_ChangeEvent(void* ptr, void* event);
void QGraphicsProxyWidget_ChangeEventDefault(void* ptr, void* event);
void QGraphicsProxyWidget_CloseEvent(void* ptr, void* event);
void QGraphicsProxyWidget_CloseEventDefault(void* ptr, void* event);
void QGraphicsProxyWidget_GrabKeyboardEvent(void* ptr, void* event);
void QGraphicsProxyWidget_GrabKeyboardEventDefault(void* ptr, void* event);
void QGraphicsProxyWidget_InitStyleOption(void* ptr, void* option);
void QGraphicsProxyWidget_InitStyleOptionDefault(void* ptr, void* option);
void QGraphicsProxyWidget_MoveEvent(void* ptr, void* event);
void QGraphicsProxyWidget_MoveEventDefault(void* ptr, void* event);
void QGraphicsProxyWidget_PaintWindowFrame(void* ptr, void* painter, void* option, void* widget);
void QGraphicsProxyWidget_PaintWindowFrameDefault(void* ptr, void* painter, void* option, void* widget);
void QGraphicsProxyWidget_PolishEvent(void* ptr);
void QGraphicsProxyWidget_PolishEventDefault(void* ptr);
void QGraphicsProxyWidget_UngrabKeyboardEvent(void* ptr, void* event);
void QGraphicsProxyWidget_UngrabKeyboardEventDefault(void* ptr, void* event);
void QGraphicsProxyWidget_UpdateGeometry(void* ptr);
void QGraphicsProxyWidget_UpdateGeometryDefault(void* ptr);
void QGraphicsProxyWidget_TimerEvent(void* ptr, void* event);
void QGraphicsProxyWidget_TimerEventDefault(void* ptr, void* event);
void QGraphicsProxyWidget_ChildEvent(void* ptr, void* event);
void QGraphicsProxyWidget_ChildEventDefault(void* ptr, void* event);
void QGraphicsProxyWidget_CustomEvent(void* ptr, void* event);
void QGraphicsProxyWidget_CustomEventDefault(void* ptr, void* event);
void QGraphicsRectItem_SetRect(void* ptr, void* rectangle);
int QGraphicsRectItem_Contains(void* ptr, void* point);
int QGraphicsRectItem_ContainsDefault(void* ptr, void* point);
int QGraphicsRectItem_IsObscuredBy(void* ptr, void* item);
int QGraphicsRectItem_IsObscuredByDefault(void* ptr, void* item);
void QGraphicsRectItem_Paint(void* ptr, void* painter, void* option, void* widget);
void QGraphicsRectItem_PaintDefault(void* ptr, void* painter, void* option, void* widget);
void QGraphicsRectItem_SetRect2(void* ptr, double x, double y, double width, double height);
int QGraphicsRectItem_Type(void* ptr);
int QGraphicsRectItem_TypeDefault(void* ptr);
void QGraphicsRectItem_DestroyQGraphicsRectItem(void* ptr);
char* QGraphicsRectItem_ObjectNameAbs(void* ptr);
void QGraphicsRectItem_SetObjectNameAbs(void* ptr, char* name);
double QGraphicsRotation_Angle(void* ptr);
void QGraphicsRotation_SetAngle(void* ptr, double v);
void QGraphicsRotation_SetAxis2(void* ptr, int axis);
void QGraphicsRotation_SetAxis(void* ptr, void* axis);
void QGraphicsRotation_SetOrigin(void* ptr, void* point);
void* QGraphicsRotation_NewQGraphicsRotation(void* parent);
void QGraphicsRotation_ConnectAngleChanged(void* ptr);
void QGraphicsRotation_DisconnectAngleChanged(void* ptr);
void QGraphicsRotation_AngleChanged(void* ptr);
void QGraphicsRotation_ApplyTo(void* ptr, void* matrix);
void QGraphicsRotation_ApplyToDefault(void* ptr, void* matrix);
void QGraphicsRotation_ConnectAxisChanged(void* ptr);
void QGraphicsRotation_DisconnectAxisChanged(void* ptr);
void QGraphicsRotation_AxisChanged(void* ptr);
void QGraphicsRotation_ConnectOriginChanged(void* ptr);
void QGraphicsRotation_DisconnectOriginChanged(void* ptr);
void QGraphicsRotation_OriginChanged(void* ptr);
void QGraphicsRotation_DestroyQGraphicsRotation(void* ptr);
void QGraphicsRotation_TimerEvent(void* ptr, void* event);
void QGraphicsRotation_TimerEventDefault(void* ptr, void* event);
void QGraphicsRotation_ChildEvent(void* ptr, void* event);
void QGraphicsRotation_ChildEventDefault(void* ptr, void* event);
void QGraphicsRotation_CustomEvent(void* ptr, void* event);
void QGraphicsRotation_CustomEventDefault(void* ptr, void* event);
void QGraphicsScale_SetOrigin(void* ptr, void* point);
void QGraphicsScale_SetXScale(void* ptr, double v);
void QGraphicsScale_SetYScale(void* ptr, double v);
void QGraphicsScale_SetZScale(void* ptr, double v);
double QGraphicsScale_XScale(void* ptr);
double QGraphicsScale_YScale(void* ptr);
double QGraphicsScale_ZScale(void* ptr);
void* QGraphicsScale_NewQGraphicsScale(void* parent);
void QGraphicsScale_ApplyTo(void* ptr, void* matrix);
void QGraphicsScale_ApplyToDefault(void* ptr, void* matrix);
void QGraphicsScale_ConnectOriginChanged(void* ptr);
void QGraphicsScale_DisconnectOriginChanged(void* ptr);
void QGraphicsScale_OriginChanged(void* ptr);
void QGraphicsScale_ConnectScaleChanged(void* ptr);
void QGraphicsScale_DisconnectScaleChanged(void* ptr);
void QGraphicsScale_ScaleChanged(void* ptr);
void QGraphicsScale_ConnectXScaleChanged(void* ptr);
void QGraphicsScale_DisconnectXScaleChanged(void* ptr);
void QGraphicsScale_XScaleChanged(void* ptr);
void QGraphicsScale_ConnectYScaleChanged(void* ptr);
void QGraphicsScale_DisconnectYScaleChanged(void* ptr);
void QGraphicsScale_YScaleChanged(void* ptr);
void QGraphicsScale_ConnectZScaleChanged(void* ptr);
void QGraphicsScale_DisconnectZScaleChanged(void* ptr);
void QGraphicsScale_ZScaleChanged(void* ptr);
void QGraphicsScale_DestroyQGraphicsScale(void* ptr);
void QGraphicsScale_TimerEvent(void* ptr, void* event);
void QGraphicsScale_TimerEventDefault(void* ptr, void* event);
void QGraphicsScale_ChildEvent(void* ptr, void* event);
void QGraphicsScale_ChildEventDefault(void* ptr, void* event);
void QGraphicsScale_CustomEvent(void* ptr, void* event);
void QGraphicsScale_CustomEventDefault(void* ptr, void* event);
void* QGraphicsScene_BackgroundBrush(void* ptr);
int QGraphicsScene_BspTreeDepth(void* ptr);
void* QGraphicsScene_ForegroundBrush(void* ptr);
int QGraphicsScene_IsSortCacheEnabled(void* ptr);
int QGraphicsScene_ItemIndexMethod(void* ptr);
double QGraphicsScene_MinimumRenderSize(void* ptr);
void QGraphicsScene_SetBackgroundBrush(void* ptr, void* brush);
void QGraphicsScene_SetBspTreeDepth(void* ptr, int depth);
void QGraphicsScene_SetFont(void* ptr, void* font);
void QGraphicsScene_SetForegroundBrush(void* ptr, void* brush);
void QGraphicsScene_SetItemIndexMethod(void* ptr, int method);
void QGraphicsScene_SetMinimumRenderSize(void* ptr, double minSize);
void QGraphicsScene_SetPalette(void* ptr, void* palette);
void QGraphicsScene_SetSceneRect(void* ptr, void* rect);
void QGraphicsScene_SetSortCacheEnabled(void* ptr, int enabled);
void QGraphicsScene_SetStickyFocus(void* ptr, int enabled);
int QGraphicsScene_StickyFocus(void* ptr);
void QGraphicsScene_Update(void* ptr, void* rect);
void* QGraphicsScene_NewQGraphicsScene(void* parent);
void* QGraphicsScene_NewQGraphicsScene2(void* sceneRect, void* parent);
void* QGraphicsScene_NewQGraphicsScene3(double x, double y, double width, double height, void* parent);
void* QGraphicsScene_ActivePanel(void* ptr);
void* QGraphicsScene_ActiveWindow(void* ptr);
void* QGraphicsScene_AddEllipse(void* ptr, void* rect, void* pen, void* brush);
void* QGraphicsScene_AddEllipse2(void* ptr, double x, double y, double w, double h, void* pen, void* brush);
void QGraphicsScene_AddItem(void* ptr, void* item);
void* QGraphicsScene_AddLine(void* ptr, void* line, void* pen);
void* QGraphicsScene_AddLine2(void* ptr, double x1, double y1, double x2, double y2, void* pen);
void* QGraphicsScene_AddPath(void* ptr, void* path, void* pen, void* brush);
void* QGraphicsScene_AddPixmap(void* ptr, void* pixmap);
void* QGraphicsScene_AddPolygon(void* ptr, void* polygon, void* pen, void* brush);
void* QGraphicsScene_AddRect(void* ptr, void* rect, void* pen, void* brush);
void* QGraphicsScene_AddRect2(void* ptr, double x, double y, double w, double h, void* pen, void* brush);
void* QGraphicsScene_AddSimpleText(void* ptr, char* text, void* font);
void* QGraphicsScene_AddText(void* ptr, char* text, void* font);
void* QGraphicsScene_AddWidget(void* ptr, void* widget, int wFlags);
void QGraphicsScene_Advance(void* ptr);
void QGraphicsScene_Clear(void* ptr);
void QGraphicsScene_ClearFocus(void* ptr);
void QGraphicsScene_ClearSelection(void* ptr);
void QGraphicsScene_ContextMenuEvent(void* ptr, void* contextMenuEvent);
void QGraphicsScene_ContextMenuEventDefault(void* ptr, void* contextMenuEvent);
void QGraphicsScene_DestroyItemGroup(void* ptr, void* group);
void QGraphicsScene_DragEnterEvent(void* ptr, void* event);
void QGraphicsScene_DragEnterEventDefault(void* ptr, void* event);
void QGraphicsScene_DragLeaveEvent(void* ptr, void* event);
void QGraphicsScene_DragLeaveEventDefault(void* ptr, void* event);
void QGraphicsScene_DragMoveEvent(void* ptr, void* event);
void QGraphicsScene_DragMoveEventDefault(void* ptr, void* event);
void QGraphicsScene_DropEvent(void* ptr, void* event);
void QGraphicsScene_DropEventDefault(void* ptr, void* event);
int QGraphicsScene_Event(void* ptr, void* event);
int QGraphicsScene_EventDefault(void* ptr, void* event);
int QGraphicsScene_EventFilter(void* ptr, void* watched, void* event);
int QGraphicsScene_EventFilterDefault(void* ptr, void* watched, void* event);
void QGraphicsScene_FocusInEvent(void* ptr, void* focusEvent);
void QGraphicsScene_FocusInEventDefault(void* ptr, void* focusEvent);
void* QGraphicsScene_FocusItem(void* ptr);
void QGraphicsScene_ConnectFocusItemChanged(void* ptr);
void QGraphicsScene_DisconnectFocusItemChanged(void* ptr);
void QGraphicsScene_FocusItemChanged(void* ptr, void* newFocusItem, void* oldFocusItem, int reason);
int QGraphicsScene_FocusNextPrevChild(void* ptr, int next);
int QGraphicsScene_FocusNextPrevChildDefault(void* ptr, int next);
void QGraphicsScene_FocusOutEvent(void* ptr, void* focusEvent);
void QGraphicsScene_FocusOutEventDefault(void* ptr, void* focusEvent);
int QGraphicsScene_HasFocus(void* ptr);
double QGraphicsScene_Height(void* ptr);
void QGraphicsScene_HelpEvent(void* ptr, void* helpEvent);
void QGraphicsScene_HelpEventDefault(void* ptr, void* helpEvent);
void QGraphicsScene_InputMethodEvent(void* ptr, void* event);
void QGraphicsScene_InputMethodEventDefault(void* ptr, void* event);
void* QGraphicsScene_InputMethodQuery(void* ptr, int query);
void* QGraphicsScene_InputMethodQueryDefault(void* ptr, int query);
void QGraphicsScene_Invalidate(void* ptr, void* rect, int layers);
void QGraphicsScene_Invalidate2(void* ptr, double x, double y, double w, double h, int layers);
int QGraphicsScene_IsActive(void* ptr);
void* QGraphicsScene_ItemAt(void* ptr, void* position, void* deviceTransform);
void* QGraphicsScene_ItemAt3(void* ptr, double x, double y, void* deviceTransform);
void QGraphicsScene_KeyPressEvent(void* ptr, void* keyEvent);
void QGraphicsScene_KeyPressEventDefault(void* ptr, void* keyEvent);
void QGraphicsScene_KeyReleaseEvent(void* ptr, void* keyEvent);
void QGraphicsScene_KeyReleaseEventDefault(void* ptr, void* keyEvent);
void QGraphicsScene_MouseDoubleClickEvent(void* ptr, void* mouseEvent);
void QGraphicsScene_MouseDoubleClickEventDefault(void* ptr, void* mouseEvent);
void* QGraphicsScene_MouseGrabberItem(void* ptr);
void QGraphicsScene_MouseMoveEvent(void* ptr, void* mouseEvent);
void QGraphicsScene_MouseMoveEventDefault(void* ptr, void* mouseEvent);
void QGraphicsScene_MousePressEvent(void* ptr, void* mouseEvent);
void QGraphicsScene_MousePressEventDefault(void* ptr, void* mouseEvent);
void QGraphicsScene_MouseReleaseEvent(void* ptr, void* mouseEvent);
void QGraphicsScene_MouseReleaseEventDefault(void* ptr, void* mouseEvent);
void QGraphicsScene_RemoveItem(void* ptr, void* item);
void QGraphicsScene_Render(void* ptr, void* painter, void* target, void* source, int aspectRatioMode);
void QGraphicsScene_ConnectSelectionChanged(void* ptr);
void QGraphicsScene_DisconnectSelectionChanged(void* ptr);
void QGraphicsScene_SelectionChanged(void* ptr);
int QGraphicsScene_SendEvent(void* ptr, void* item, void* event);
void QGraphicsScene_SetActivePanel(void* ptr, void* item);
void QGraphicsScene_SetActiveWindow(void* ptr, void* widget);
void QGraphicsScene_SetFocus(void* ptr, int focusReason);
void QGraphicsScene_SetFocusItem(void* ptr, void* item, int focusReason);
void QGraphicsScene_SetSceneRect2(void* ptr, double x, double y, double w, double h);
void QGraphicsScene_SetSelectionArea2(void* ptr, void* path, int mode, void* deviceTransform);
void QGraphicsScene_SetSelectionArea3(void* ptr, void* path, int selectionOperation, int mode, void* deviceTransform);
void QGraphicsScene_SetSelectionArea(void* ptr, void* path, void* deviceTransform);
void QGraphicsScene_SetStyle(void* ptr, void* style);
void* QGraphicsScene_Style(void* ptr);
void QGraphicsScene_Update2(void* ptr, double x, double y, double w, double h);
void QGraphicsScene_WheelEvent(void* ptr, void* wheelEvent);
void QGraphicsScene_WheelEventDefault(void* ptr, void* wheelEvent);
double QGraphicsScene_Width(void* ptr);
void QGraphicsScene_DestroyQGraphicsScene(void* ptr);
void QGraphicsScene_TimerEvent(void* ptr, void* event);
void QGraphicsScene_TimerEventDefault(void* ptr, void* event);
void QGraphicsScene_ChildEvent(void* ptr, void* event);
void QGraphicsScene_ChildEventDefault(void* ptr, void* event);
void QGraphicsScene_CustomEvent(void* ptr, void* event);
void QGraphicsScene_CustomEventDefault(void* ptr, void* event);
int QGraphicsSceneContextMenuEvent_Modifiers(void* ptr);
int QGraphicsSceneContextMenuEvent_Reason(void* ptr);
void* QGraphicsSceneContextMenuEvent_ScreenPos(void* ptr);
void QGraphicsSceneContextMenuEvent_DestroyQGraphicsSceneContextMenuEvent(void* ptr);
void QGraphicsSceneDragDropEvent_AcceptProposedAction(void* ptr);
int QGraphicsSceneDragDropEvent_Buttons(void* ptr);
int QGraphicsSceneDragDropEvent_DropAction(void* ptr);
void* QGraphicsSceneDragDropEvent_MimeData(void* ptr);
int QGraphicsSceneDragDropEvent_Modifiers(void* ptr);
int QGraphicsSceneDragDropEvent_PossibleActions(void* ptr);
int QGraphicsSceneDragDropEvent_ProposedAction(void* ptr);
void* QGraphicsSceneDragDropEvent_ScreenPos(void* ptr);
void QGraphicsSceneDragDropEvent_SetDropAction(void* ptr, int action);
void* QGraphicsSceneDragDropEvent_Source(void* ptr);
void QGraphicsSceneDragDropEvent_DestroyQGraphicsSceneDragDropEvent(void* ptr);
void* QGraphicsSceneEvent_Widget(void* ptr);
void QGraphicsSceneEvent_DestroyQGraphicsSceneEvent(void* ptr);
void* QGraphicsSceneHelpEvent_ScreenPos(void* ptr);
void QGraphicsSceneHelpEvent_DestroyQGraphicsSceneHelpEvent(void* ptr);
void* QGraphicsSceneHoverEvent_LastScreenPos(void* ptr);
int QGraphicsSceneHoverEvent_Modifiers(void* ptr);
void* QGraphicsSceneHoverEvent_ScreenPos(void* ptr);
void QGraphicsSceneHoverEvent_DestroyQGraphicsSceneHoverEvent(void* ptr);
int QGraphicsSceneMouseEvent_Button(void* ptr);
void* QGraphicsSceneMouseEvent_ButtonDownScreenPos(void* ptr, int button);
int QGraphicsSceneMouseEvent_Buttons(void* ptr);
int QGraphicsSceneMouseEvent_Flags(void* ptr);
void* QGraphicsSceneMouseEvent_LastScreenPos(void* ptr);
int QGraphicsSceneMouseEvent_Modifiers(void* ptr);
void* QGraphicsSceneMouseEvent_ScreenPos(void* ptr);
int QGraphicsSceneMouseEvent_Source(void* ptr);
void QGraphicsSceneMouseEvent_DestroyQGraphicsSceneMouseEvent(void* ptr);
void* QGraphicsSceneMoveEvent_NewQGraphicsSceneMoveEvent();
void QGraphicsSceneMoveEvent_DestroyQGraphicsSceneMoveEvent(void* ptr);
void* QGraphicsSceneResizeEvent_NewQGraphicsSceneResizeEvent();
void QGraphicsSceneResizeEvent_DestroyQGraphicsSceneResizeEvent(void* ptr);
int QGraphicsSceneWheelEvent_Buttons(void* ptr);
int QGraphicsSceneWheelEvent_Delta(void* ptr);
int QGraphicsSceneWheelEvent_Modifiers(void* ptr);
int QGraphicsSceneWheelEvent_Orientation(void* ptr);
void* QGraphicsSceneWheelEvent_ScreenPos(void* ptr);
void QGraphicsSceneWheelEvent_DestroyQGraphicsSceneWheelEvent(void* ptr);
int QGraphicsSimpleTextItem_Contains(void* ptr, void* point);
int QGraphicsSimpleTextItem_ContainsDefault(void* ptr, void* point);
int QGraphicsSimpleTextItem_IsObscuredBy(void* ptr, void* item);
int QGraphicsSimpleTextItem_IsObscuredByDefault(void* ptr, void* item);
void QGraphicsSimpleTextItem_Paint(void* ptr, void* painter, void* option, void* widget);
void QGraphicsSimpleTextItem_PaintDefault(void* ptr, void* painter, void* option, void* widget);
void QGraphicsSimpleTextItem_SetFont(void* ptr, void* font);
void QGraphicsSimpleTextItem_SetText(void* ptr, char* text);
char* QGraphicsSimpleTextItem_Text(void* ptr);
int QGraphicsSimpleTextItem_Type(void* ptr);
int QGraphicsSimpleTextItem_TypeDefault(void* ptr);
void QGraphicsSimpleTextItem_DestroyQGraphicsSimpleTextItem(void* ptr);
char* QGraphicsSimpleTextItem_ObjectNameAbs(void* ptr);
void QGraphicsSimpleTextItem_SetObjectNameAbs(void* ptr, char* name);
int QGraphicsTextItem_OpenExternalLinks(void* ptr);
void QGraphicsTextItem_SetOpenExternalLinks(void* ptr, int open);
void QGraphicsTextItem_SetTextCursor(void* ptr, void* cursor);
void QGraphicsTextItem_AdjustSize(void* ptr);
int QGraphicsTextItem_Contains(void* ptr, void* point);
int QGraphicsTextItem_ContainsDefault(void* ptr, void* point);
void QGraphicsTextItem_ContextMenuEvent(void* ptr, void* event);
void QGraphicsTextItem_ContextMenuEventDefault(void* ptr, void* event);
void* QGraphicsTextItem_DefaultTextColor(void* ptr);
void* QGraphicsTextItem_Document(void* ptr);
void QGraphicsTextItem_DragEnterEvent(void* ptr, void* event);
void QGraphicsTextItem_DragEnterEventDefault(void* ptr, void* event);
void QGraphicsTextItem_DragLeaveEvent(void* ptr, void* event);
void QGraphicsTextItem_DragLeaveEventDefault(void* ptr, void* event);
void QGraphicsTextItem_DragMoveEvent(void* ptr, void* event);
void QGraphicsTextItem_DragMoveEventDefault(void* ptr, void* event);
void QGraphicsTextItem_DropEvent(void* ptr, void* event);
void QGraphicsTextItem_DropEventDefault(void* ptr, void* event);
void QGraphicsTextItem_FocusInEvent(void* ptr, void* event);
void QGraphicsTextItem_FocusInEventDefault(void* ptr, void* event);
void QGraphicsTextItem_FocusOutEvent(void* ptr, void* event);
void QGraphicsTextItem_FocusOutEventDefault(void* ptr, void* event);
void QGraphicsTextItem_HoverEnterEvent(void* ptr, void* event);
void QGraphicsTextItem_HoverEnterEventDefault(void* ptr, void* event);
void QGraphicsTextItem_HoverLeaveEvent(void* ptr, void* event);
void QGraphicsTextItem_HoverLeaveEventDefault(void* ptr, void* event);
void QGraphicsTextItem_HoverMoveEvent(void* ptr, void* event);
void QGraphicsTextItem_HoverMoveEventDefault(void* ptr, void* event);
void QGraphicsTextItem_InputMethodEvent(void* ptr, void* event);
void QGraphicsTextItem_InputMethodEventDefault(void* ptr, void* event);
void* QGraphicsTextItem_InputMethodQuery(void* ptr, int query);
void* QGraphicsTextItem_InputMethodQueryDefault(void* ptr, int query);
int QGraphicsTextItem_IsObscuredBy(void* ptr, void* item);
int QGraphicsTextItem_IsObscuredByDefault(void* ptr, void* item);
void QGraphicsTextItem_KeyPressEvent(void* ptr, void* event);
void QGraphicsTextItem_KeyPressEventDefault(void* ptr, void* event);
void QGraphicsTextItem_KeyReleaseEvent(void* ptr, void* event);
void QGraphicsTextItem_KeyReleaseEventDefault(void* ptr, void* event);
void QGraphicsTextItem_ConnectLinkActivated(void* ptr);
void QGraphicsTextItem_DisconnectLinkActivated(void* ptr);
void QGraphicsTextItem_LinkActivated(void* ptr, char* link);
void QGraphicsTextItem_ConnectLinkHovered(void* ptr);
void QGraphicsTextItem_DisconnectLinkHovered(void* ptr);
void QGraphicsTextItem_LinkHovered(void* ptr, char* link);
void QGraphicsTextItem_MouseDoubleClickEvent(void* ptr, void* event);
void QGraphicsTextItem_MouseDoubleClickEventDefault(void* ptr, void* event);
void QGraphicsTextItem_MouseMoveEvent(void* ptr, void* event);
void QGraphicsTextItem_MouseMoveEventDefault(void* ptr, void* event);
void QGraphicsTextItem_MousePressEvent(void* ptr, void* event);
void QGraphicsTextItem_MousePressEventDefault(void* ptr, void* event);
void QGraphicsTextItem_MouseReleaseEvent(void* ptr, void* event);
void QGraphicsTextItem_MouseReleaseEventDefault(void* ptr, void* event);
void QGraphicsTextItem_Paint(void* ptr, void* painter, void* option, void* widget);
void QGraphicsTextItem_PaintDefault(void* ptr, void* painter, void* option, void* widget);
int QGraphicsTextItem_SceneEvent(void* ptr, void* event);
int QGraphicsTextItem_SceneEventDefault(void* ptr, void* event);
void QGraphicsTextItem_SetDefaultTextColor(void* ptr, void* col);
void QGraphicsTextItem_SetDocument(void* ptr, void* document);
void QGraphicsTextItem_SetFont(void* ptr, void* font);
void QGraphicsTextItem_SetHtml(void* ptr, char* text);
void QGraphicsTextItem_SetPlainText(void* ptr, char* text);
void QGraphicsTextItem_SetTabChangesFocus(void* ptr, int b);
void QGraphicsTextItem_SetTextInteractionFlags(void* ptr, int flags);
void QGraphicsTextItem_SetTextWidth(void* ptr, double width);
int QGraphicsTextItem_TabChangesFocus(void* ptr);
int QGraphicsTextItem_TextInteractionFlags(void* ptr);
double QGraphicsTextItem_TextWidth(void* ptr);
char* QGraphicsTextItem_ToHtml(void* ptr);
char* QGraphicsTextItem_ToPlainText(void* ptr);
int QGraphicsTextItem_Type(void* ptr);
int QGraphicsTextItem_TypeDefault(void* ptr);
void QGraphicsTextItem_DestroyQGraphicsTextItem(void* ptr);
void QGraphicsTextItem_TimerEvent(void* ptr, void* event);
void QGraphicsTextItem_TimerEventDefault(void* ptr, void* event);
void QGraphicsTextItem_ChildEvent(void* ptr, void* event);
void QGraphicsTextItem_ChildEventDefault(void* ptr, void* event);
void QGraphicsTextItem_CustomEvent(void* ptr, void* event);
void QGraphicsTextItem_CustomEventDefault(void* ptr, void* event);
void QGraphicsTransform_TimerEvent(void* ptr, void* event);
void QGraphicsTransform_TimerEventDefault(void* ptr, void* event);
void QGraphicsTransform_ChildEvent(void* ptr, void* event);
void QGraphicsTransform_ChildEventDefault(void* ptr, void* event);
void QGraphicsTransform_CustomEvent(void* ptr, void* event);
void QGraphicsTransform_CustomEventDefault(void* ptr, void* event);
int QGraphicsView_Alignment(void* ptr);
void* QGraphicsView_BackgroundBrush(void* ptr);
int QGraphicsView_CacheMode(void* ptr);
int QGraphicsView_DragMode(void* ptr);
void* QGraphicsView_ForegroundBrush(void* ptr);
int QGraphicsView_IsInteractive(void* ptr);
int QGraphicsView_OptimizationFlags(void* ptr);
int QGraphicsView_RenderHints(void* ptr);
int QGraphicsView_ResizeAnchor(void* ptr);
int QGraphicsView_RubberBandSelectionMode(void* ptr);
void QGraphicsView_SetAlignment(void* ptr, int alignment);
void QGraphicsView_SetBackgroundBrush(void* ptr, void* brush);
void QGraphicsView_SetCacheMode(void* ptr, int mode);
void QGraphicsView_SetDragMode(void* ptr, int mode);
void QGraphicsView_SetForegroundBrush(void* ptr, void* brush);
void QGraphicsView_SetInteractive(void* ptr, int allowed);
void QGraphicsView_SetOptimizationFlags(void* ptr, int flags);
void QGraphicsView_SetRenderHints(void* ptr, int hints);
void QGraphicsView_SetResizeAnchor(void* ptr, int anchor);
void QGraphicsView_SetRubberBandSelectionMode(void* ptr, int mode);
void QGraphicsView_SetSceneRect(void* ptr, void* rect);
void QGraphicsView_SetTransformationAnchor(void* ptr, int anchor);
void QGraphicsView_SetViewportUpdateMode(void* ptr, int mode);
int QGraphicsView_TransformationAnchor(void* ptr);
int QGraphicsView_ViewportUpdateMode(void* ptr);
void* QGraphicsView_NewQGraphicsView2(void* scene, void* parent);
void* QGraphicsView_NewQGraphicsView(void* parent);
void QGraphicsView_CenterOn3(void* ptr, void* item);
void QGraphicsView_CenterOn(void* ptr, void* pos);
void QGraphicsView_CenterOn2(void* ptr, double x, double y);
void QGraphicsView_ContextMenuEvent(void* ptr, void* event);
void QGraphicsView_ContextMenuEventDefault(void* ptr, void* event);
void QGraphicsView_DragEnterEvent(void* ptr, void* event);
void QGraphicsView_DragEnterEventDefault(void* ptr, void* event);
void QGraphicsView_DragLeaveEvent(void* ptr, void* event);
void QGraphicsView_DragLeaveEventDefault(void* ptr, void* event);
void QGraphicsView_DragMoveEvent(void* ptr, void* event);
void QGraphicsView_DragMoveEventDefault(void* ptr, void* event);
void QGraphicsView_DropEvent(void* ptr, void* event);
void QGraphicsView_DropEventDefault(void* ptr, void* event);
void QGraphicsView_EnsureVisible3(void* ptr, void* item, int xmargin, int ymargin);
void QGraphicsView_EnsureVisible(void* ptr, void* rect, int xmargin, int ymargin);
void QGraphicsView_EnsureVisible2(void* ptr, double x, double y, double w, double h, int xmargin, int ymargin);
int QGraphicsView_Event(void* ptr, void* event);
int QGraphicsView_EventDefault(void* ptr, void* event);
void QGraphicsView_FitInView3(void* ptr, void* item, int aspectRatioMode);
void QGraphicsView_FitInView(void* ptr, void* rect, int aspectRatioMode);
void QGraphicsView_FitInView2(void* ptr, double x, double y, double w, double h, int aspectRatioMode);
void QGraphicsView_FocusInEvent(void* ptr, void* event);
void QGraphicsView_FocusInEventDefault(void* ptr, void* event);
int QGraphicsView_FocusNextPrevChild(void* ptr, int next);
int QGraphicsView_FocusNextPrevChildDefault(void* ptr, int next);
void QGraphicsView_FocusOutEvent(void* ptr, void* event);
void QGraphicsView_FocusOutEventDefault(void* ptr, void* event);
void QGraphicsView_InputMethodEvent(void* ptr, void* event);
void QGraphicsView_InputMethodEventDefault(void* ptr, void* event);
void* QGraphicsView_InputMethodQuery(void* ptr, int query);
void* QGraphicsView_InputMethodQueryDefault(void* ptr, int query);
void QGraphicsView_InvalidateScene(void* ptr, void* rect, int layers);
int QGraphicsView_IsTransformed(void* ptr);
void* QGraphicsView_ItemAt(void* ptr, void* pos);
void* QGraphicsView_ItemAt2(void* ptr, int x, int y);
void QGraphicsView_KeyPressEvent(void* ptr, void* event);
void QGraphicsView_KeyPressEventDefault(void* ptr, void* event);
void QGraphicsView_KeyReleaseEvent(void* ptr, void* event);
void QGraphicsView_KeyReleaseEventDefault(void* ptr, void* event);
void* QGraphicsView_MapFromScene(void* ptr, void* point);
void* QGraphicsView_MapFromScene5(void* ptr, double x, double y);
void QGraphicsView_MouseDoubleClickEvent(void* ptr, void* event);
void QGraphicsView_MouseDoubleClickEventDefault(void* ptr, void* event);
void QGraphicsView_MouseMoveEvent(void* ptr, void* event);
void QGraphicsView_MouseMoveEventDefault(void* ptr, void* event);
void QGraphicsView_MousePressEvent(void* ptr, void* event);
void QGraphicsView_MousePressEventDefault(void* ptr, void* event);
void QGraphicsView_MouseReleaseEvent(void* ptr, void* event);
void QGraphicsView_MouseReleaseEventDefault(void* ptr, void* event);
void QGraphicsView_PaintEvent(void* ptr, void* event);
void QGraphicsView_PaintEventDefault(void* ptr, void* event);
void QGraphicsView_Render(void* ptr, void* painter, void* target, void* source, int aspectRatioMode);
void QGraphicsView_ResetCachedContent(void* ptr);
void QGraphicsView_ResetMatrix(void* ptr);
void QGraphicsView_ResetTransform(void* ptr);
void QGraphicsView_ResizeEvent(void* ptr, void* event);
void QGraphicsView_ResizeEventDefault(void* ptr, void* event);
void QGraphicsView_Rotate(void* ptr, double angle);
void* QGraphicsView_RubberBandRect(void* ptr);
void QGraphicsView_Scale(void* ptr, double sx, double sy);
void* QGraphicsView_Scene(void* ptr);
void QGraphicsView_ScrollContentsBy(void* ptr, int dx, int dy);
void QGraphicsView_ScrollContentsByDefault(void* ptr, int dx, int dy);
void QGraphicsView_SetOptimizationFlag(void* ptr, int flag, int enabled);
void QGraphicsView_SetRenderHint(void* ptr, int hint, int enabled);
void QGraphicsView_SetScene(void* ptr, void* scene);
void QGraphicsView_SetSceneRect2(void* ptr, double x, double y, double w, double h);
void QGraphicsView_SetTransform(void* ptr, void* matrix, int combine);
void QGraphicsView_SetupViewport(void* ptr, void* widget);
void QGraphicsView_SetupViewportDefault(void* ptr, void* widget);
void QGraphicsView_Shear(void* ptr, double sh, double sv);
void QGraphicsView_ShowEvent(void* ptr, void* event);
void QGraphicsView_ShowEventDefault(void* ptr, void* event);
void* QGraphicsView_SizeHint(void* ptr);
void* QGraphicsView_SizeHintDefault(void* ptr);
void QGraphicsView_Translate(void* ptr, double dx, double dy);
void QGraphicsView_UpdateSceneRect(void* ptr, void* rect);
int QGraphicsView_ViewportEvent(void* ptr, void* event);
int QGraphicsView_ViewportEventDefault(void* ptr, void* event);
void QGraphicsView_WheelEvent(void* ptr, void* event);
void QGraphicsView_WheelEventDefault(void* ptr, void* event);
void QGraphicsView_DestroyQGraphicsView(void* ptr);
void QGraphicsView_ChangeEvent(void* ptr, void* ev);
void QGraphicsView_ChangeEventDefault(void* ptr, void* ev);
void QGraphicsView_ActionEvent(void* ptr, void* event);
void QGraphicsView_ActionEventDefault(void* ptr, void* event);
void QGraphicsView_EnterEvent(void* ptr, void* event);
void QGraphicsView_EnterEventDefault(void* ptr, void* event);
void QGraphicsView_HideEvent(void* ptr, void* event);
void QGraphicsView_HideEventDefault(void* ptr, void* event);
void QGraphicsView_LeaveEvent(void* ptr, void* event);
void QGraphicsView_LeaveEventDefault(void* ptr, void* event);
void QGraphicsView_MoveEvent(void* ptr, void* event);
void QGraphicsView_MoveEventDefault(void* ptr, void* event);
void QGraphicsView_SetVisible(void* ptr, int visible);
void QGraphicsView_SetVisibleDefault(void* ptr, int visible);
void QGraphicsView_CloseEvent(void* ptr, void* event);
void QGraphicsView_CloseEventDefault(void* ptr, void* event);
void QGraphicsView_InitPainter(void* ptr, void* painter);
void QGraphicsView_InitPainterDefault(void* ptr, void* painter);
void QGraphicsView_TabletEvent(void* ptr, void* event);
void QGraphicsView_TabletEventDefault(void* ptr, void* event);
void QGraphicsView_TimerEvent(void* ptr, void* event);
void QGraphicsView_TimerEventDefault(void* ptr, void* event);
void QGraphicsView_ChildEvent(void* ptr, void* event);
void QGraphicsView_ChildEventDefault(void* ptr, void* event);
void QGraphicsView_CustomEvent(void* ptr, void* event);
void QGraphicsView_CustomEventDefault(void* ptr, void* event);
int QGraphicsWidget_AutoFillBackground(void* ptr);
int QGraphicsWidget_FocusPolicy(void* ptr);
int QGraphicsWidget_LayoutDirection(void* ptr);
void QGraphicsWidget_Resize(void* ptr, void* size);
void QGraphicsWidget_SetAutoFillBackground(void* ptr, int enabled);
void QGraphicsWidget_SetFocusPolicy(void* ptr, int policy);
void QGraphicsWidget_SetFont(void* ptr, void* font);
void QGraphicsWidget_SetLayout(void* ptr, void* layout);
void QGraphicsWidget_SetLayoutDirection(void* ptr, int direction);
void QGraphicsWidget_SetPalette(void* ptr, void* palette);
void QGraphicsWidget_SetWindowFlags(void* ptr, int wFlags);
void QGraphicsWidget_SetWindowTitle(void* ptr, char* title);
void QGraphicsWidget_UnsetLayoutDirection(void* ptr);
int QGraphicsWidget_WindowFlags(void* ptr);
char* QGraphicsWidget_WindowTitle(void* ptr);
void* QGraphicsWidget_NewQGraphicsWidget(void* parent, int wFlags);
void QGraphicsWidget_AddAction(void* ptr, void* action);
void QGraphicsWidget_AdjustSize(void* ptr);
void QGraphicsWidget_ChangeEvent(void* ptr, void* event);
void QGraphicsWidget_ChangeEventDefault(void* ptr, void* event);
int QGraphicsWidget_Close(void* ptr);
void QGraphicsWidget_CloseEvent(void* ptr, void* event);
void QGraphicsWidget_CloseEventDefault(void* ptr, void* event);
int QGraphicsWidget_Event(void* ptr, void* event);
int QGraphicsWidget_EventDefault(void* ptr, void* event);
void QGraphicsWidget_FocusInEvent(void* ptr, void* event);
void QGraphicsWidget_FocusInEventDefault(void* ptr, void* event);
int QGraphicsWidget_FocusNextPrevChild(void* ptr, int next);
int QGraphicsWidget_FocusNextPrevChildDefault(void* ptr, int next);
void QGraphicsWidget_FocusOutEvent(void* ptr, void* event);
void QGraphicsWidget_FocusOutEventDefault(void* ptr, void* event);
void* QGraphicsWidget_FocusWidget(void* ptr);
void QGraphicsWidget_ConnectGeometryChanged(void* ptr);
void QGraphicsWidget_DisconnectGeometryChanged(void* ptr);
void QGraphicsWidget_GeometryChanged(void* ptr);
void QGraphicsWidget_GrabKeyboardEvent(void* ptr, void* event);
void QGraphicsWidget_GrabKeyboardEventDefault(void* ptr, void* event);
void QGraphicsWidget_GrabMouseEvent(void* ptr, void* event);
void QGraphicsWidget_GrabMouseEventDefault(void* ptr, void* event);
int QGraphicsWidget_GrabShortcut(void* ptr, void* sequence, int context);
void QGraphicsWidget_HideEvent(void* ptr, void* event);
void QGraphicsWidget_HideEventDefault(void* ptr, void* event);
void QGraphicsWidget_HoverLeaveEvent(void* ptr, void* event);
void QGraphicsWidget_HoverLeaveEventDefault(void* ptr, void* event);
void QGraphicsWidget_HoverMoveEvent(void* ptr, void* event);
void QGraphicsWidget_HoverMoveEventDefault(void* ptr, void* event);
void QGraphicsWidget_InitStyleOption(void* ptr, void* option);
void QGraphicsWidget_InitStyleOptionDefault(void* ptr, void* option);
void QGraphicsWidget_InsertAction(void* ptr, void* before, void* action);
int QGraphicsWidget_IsActiveWindow(void* ptr);
void* QGraphicsWidget_ItemChange(void* ptr, int change, void* value);
void* QGraphicsWidget_ItemChangeDefault(void* ptr, int change, void* value);
void* QGraphicsWidget_Layout(void* ptr);
void QGraphicsWidget_MoveEvent(void* ptr, void* event);
void QGraphicsWidget_MoveEventDefault(void* ptr, void* event);
void QGraphicsWidget_Paint(void* ptr, void* painter, void* option, void* widget);
void QGraphicsWidget_PaintDefault(void* ptr, void* painter, void* option, void* widget);
void QGraphicsWidget_PaintWindowFrame(void* ptr, void* painter, void* option, void* widget);
void QGraphicsWidget_PaintWindowFrameDefault(void* ptr, void* painter, void* option, void* widget);
void QGraphicsWidget_PolishEvent(void* ptr);
void QGraphicsWidget_PolishEventDefault(void* ptr);
void QGraphicsWidget_ReleaseShortcut(void* ptr, int id);
void QGraphicsWidget_RemoveAction(void* ptr, void* action);
void QGraphicsWidget_Resize2(void* ptr, double w, double h);
void QGraphicsWidget_ResizeEvent(void* ptr, void* event);
void QGraphicsWidget_ResizeEventDefault(void* ptr, void* event);
int QGraphicsWidget_SceneEvent(void* ptr, void* event);
int QGraphicsWidget_SceneEventDefault(void* ptr, void* event);
void QGraphicsWidget_SetAttribute(void* ptr, int attribute, int on);
void QGraphicsWidget_SetContentsMargins(void* ptr, double left, double top, double right, double bottom);
void QGraphicsWidget_SetGeometry2(void* ptr, double x, double y, double w, double h);
void QGraphicsWidget_SetShortcutAutoRepeat(void* ptr, int id, int enabled);
void QGraphicsWidget_SetShortcutEnabled(void* ptr, int id, int enabled);
void QGraphicsWidget_SetStyle(void* ptr, void* style);
void QGraphicsWidget_QGraphicsWidget_SetTabOrder(void* first, void* second);
void QGraphicsWidget_SetWindowFrameMargins(void* ptr, double left, double top, double right, double bottom);
void QGraphicsWidget_ShowEvent(void* ptr, void* event);
void QGraphicsWidget_ShowEventDefault(void* ptr, void* event);
void* QGraphicsWidget_Style(void* ptr);
int QGraphicsWidget_TestAttribute(void* ptr, int attribute);
int QGraphicsWidget_Type(void* ptr);
int QGraphicsWidget_TypeDefault(void* ptr);
void QGraphicsWidget_UngrabKeyboardEvent(void* ptr, void* event);
void QGraphicsWidget_UngrabKeyboardEventDefault(void* ptr, void* event);
void QGraphicsWidget_UngrabMouseEvent(void* ptr, void* event);
void QGraphicsWidget_UngrabMouseEventDefault(void* ptr, void* event);
void QGraphicsWidget_UnsetWindowFrameMargins(void* ptr);
void QGraphicsWidget_UpdateGeometry(void* ptr);
void QGraphicsWidget_UpdateGeometryDefault(void* ptr);
int QGraphicsWidget_WindowFrameEvent(void* ptr, void* event);
int QGraphicsWidget_WindowFrameEventDefault(void* ptr, void* event);
int QGraphicsWidget_WindowFrameSectionAt(void* ptr, void* pos);
int QGraphicsWidget_WindowFrameSectionAtDefault(void* ptr, void* pos);
int QGraphicsWidget_WindowType(void* ptr);
void QGraphicsWidget_DestroyQGraphicsWidget(void* ptr);
void QGraphicsWidget_TimerEvent(void* ptr, void* event);
void QGraphicsWidget_TimerEventDefault(void* ptr, void* event);
void QGraphicsWidget_ChildEvent(void* ptr, void* event);
void QGraphicsWidget_ChildEventDefault(void* ptr, void* event);
void QGraphicsWidget_CustomEvent(void* ptr, void* event);
void QGraphicsWidget_CustomEventDefault(void* ptr, void* event);
int QGridLayout_HorizontalSpacing(void* ptr);
void QGridLayout_SetHorizontalSpacing(void* ptr, int spacing);
void QGridLayout_SetVerticalSpacing(void* ptr, int spacing);
int QGridLayout_VerticalSpacing(void* ptr);
void* QGridLayout_NewQGridLayout2();
void* QGridLayout_NewQGridLayout(void* parent);
void QGridLayout_AddItem(void* ptr, void* item, int row, int column, int rowSpan, int columnSpan, int alignment);
void QGridLayout_AddLayout(void* ptr, void* layout, int row, int column, int alignment);
void QGridLayout_AddLayout2(void* ptr, void* layout, int row, int column, int rowSpan, int columnSpan, int alignment);
void QGridLayout_AddWidget2(void* ptr, void* widget, int fromRow, int fromColumn, int rowSpan, int columnSpan, int alignment);
void QGridLayout_AddWidget(void* ptr, void* widget, int row, int column, int alignment);
void* QGridLayout_CellRect(void* ptr, int row, int column);
int QGridLayout_ColumnCount(void* ptr);
int QGridLayout_ColumnMinimumWidth(void* ptr, int column);
int QGridLayout_ColumnStretch(void* ptr, int column);
int QGridLayout_Count(void* ptr);
int QGridLayout_CountDefault(void* ptr);
int QGridLayout_ExpandingDirections(void* ptr);
int QGridLayout_ExpandingDirectionsDefault(void* ptr);
void QGridLayout_GetItemPosition(void* ptr, int index, int row, int column, int rowSpan, int columnSpan);
int QGridLayout_HasHeightForWidth(void* ptr);
int QGridLayout_HasHeightForWidthDefault(void* ptr);
int QGridLayout_HeightForWidth(void* ptr, int w);
int QGridLayout_HeightForWidthDefault(void* ptr, int w);
void QGridLayout_Invalidate(void* ptr);
void QGridLayout_InvalidateDefault(void* ptr);
void* QGridLayout_ItemAt(void* ptr, int index);
void* QGridLayout_ItemAtDefault(void* ptr, int index);
void* QGridLayout_ItemAtPosition(void* ptr, int row, int column);
void* QGridLayout_MaximumSize(void* ptr);
void* QGridLayout_MaximumSizeDefault(void* ptr);
int QGridLayout_MinimumHeightForWidth(void* ptr, int w);
int QGridLayout_MinimumHeightForWidthDefault(void* ptr, int w);
void* QGridLayout_MinimumSize(void* ptr);
void* QGridLayout_MinimumSizeDefault(void* ptr);
int QGridLayout_OriginCorner(void* ptr);
int QGridLayout_RowCount(void* ptr);
int QGridLayout_RowMinimumHeight(void* ptr, int row);
int QGridLayout_RowStretch(void* ptr, int row);
void QGridLayout_SetColumnMinimumWidth(void* ptr, int column, int minSize);
void QGridLayout_SetColumnStretch(void* ptr, int column, int stretch);
void QGridLayout_SetGeometry(void* ptr, void* rect);
void QGridLayout_SetGeometryDefault(void* ptr, void* rect);
void QGridLayout_SetOriginCorner(void* ptr, int corner);
void QGridLayout_SetRowMinimumHeight(void* ptr, int row, int minSize);
void QGridLayout_SetRowStretch(void* ptr, int row, int stretch);
void QGridLayout_SetSpacing(void* ptr, int spacing);
void* QGridLayout_SizeHint(void* ptr);
void* QGridLayout_SizeHintDefault(void* ptr);
int QGridLayout_Spacing(void* ptr);
void* QGridLayout_TakeAt(void* ptr, int index);
void* QGridLayout_TakeAtDefault(void* ptr, int index);
void QGridLayout_DestroyQGridLayout(void* ptr);
void QGridLayout_ChildEvent(void* ptr, void* e);
void QGridLayout_ChildEventDefault(void* ptr, void* e);
void QGridLayout_TimerEvent(void* ptr, void* event);
void QGridLayout_TimerEventDefault(void* ptr, void* event);
void QGridLayout_CustomEvent(void* ptr, void* event);
void QGridLayout_CustomEventDefault(void* ptr, void* event);
int QGroupBox_Alignment(void* ptr);
int QGroupBox_IsCheckable(void* ptr);
int QGroupBox_IsChecked(void* ptr);
int QGroupBox_IsFlat(void* ptr);
void QGroupBox_SetAlignment(void* ptr, int alignment);
void QGroupBox_SetCheckable(void* ptr, int checkable);
void QGroupBox_SetChecked(void* ptr, int checked);
void QGroupBox_SetFlat(void* ptr, int flat);
void QGroupBox_SetTitle(void* ptr, char* title);
char* QGroupBox_Title(void* ptr);
void* QGroupBox_NewQGroupBox(void* parent);
void* QGroupBox_NewQGroupBox2(char* title, void* parent);
void QGroupBox_ChangeEvent(void* ptr, void* ev);
void QGroupBox_ChangeEventDefault(void* ptr, void* ev);
void QGroupBox_ChildEvent(void* ptr, void* c);
void QGroupBox_ChildEventDefault(void* ptr, void* c);
void QGroupBox_ConnectClicked(void* ptr);
void QGroupBox_DisconnectClicked(void* ptr);
void QGroupBox_Clicked(void* ptr, int checked);
int QGroupBox_Event(void* ptr, void* e);
int QGroupBox_EventDefault(void* ptr, void* e);
void QGroupBox_FocusInEvent(void* ptr, void* fe);
void QGroupBox_FocusInEventDefault(void* ptr, void* fe);
void* QGroupBox_MinimumSizeHint(void* ptr);
void* QGroupBox_MinimumSizeHintDefault(void* ptr);
void QGroupBox_MouseMoveEvent(void* ptr, void* event);
void QGroupBox_MouseMoveEventDefault(void* ptr, void* event);
void QGroupBox_MousePressEvent(void* ptr, void* event);
void QGroupBox_MousePressEventDefault(void* ptr, void* event);
void QGroupBox_MouseReleaseEvent(void* ptr, void* event);
void QGroupBox_MouseReleaseEventDefault(void* ptr, void* event);
void QGroupBox_PaintEvent(void* ptr, void* event);
void QGroupBox_PaintEventDefault(void* ptr, void* event);
void QGroupBox_ResizeEvent(void* ptr, void* e);
void QGroupBox_ResizeEventDefault(void* ptr, void* e);
void QGroupBox_ConnectToggled(void* ptr);
void QGroupBox_DisconnectToggled(void* ptr);
void QGroupBox_Toggled(void* ptr, int on);
void QGroupBox_DestroyQGroupBox(void* ptr);
void QGroupBox_ActionEvent(void* ptr, void* event);
void QGroupBox_ActionEventDefault(void* ptr, void* event);
void QGroupBox_DragEnterEvent(void* ptr, void* event);
void QGroupBox_DragEnterEventDefault(void* ptr, void* event);
void QGroupBox_DragLeaveEvent(void* ptr, void* event);
void QGroupBox_DragLeaveEventDefault(void* ptr, void* event);
void QGroupBox_DragMoveEvent(void* ptr, void* event);
void QGroupBox_DragMoveEventDefault(void* ptr, void* event);
void QGroupBox_DropEvent(void* ptr, void* event);
void QGroupBox_DropEventDefault(void* ptr, void* event);
void QGroupBox_EnterEvent(void* ptr, void* event);
void QGroupBox_EnterEventDefault(void* ptr, void* event);
void QGroupBox_FocusOutEvent(void* ptr, void* event);
void QGroupBox_FocusOutEventDefault(void* ptr, void* event);
void QGroupBox_HideEvent(void* ptr, void* event);
void QGroupBox_HideEventDefault(void* ptr, void* event);
void QGroupBox_LeaveEvent(void* ptr, void* event);
void QGroupBox_LeaveEventDefault(void* ptr, void* event);
void QGroupBox_MoveEvent(void* ptr, void* event);
void QGroupBox_MoveEventDefault(void* ptr, void* event);
void QGroupBox_SetVisible(void* ptr, int visible);
void QGroupBox_SetVisibleDefault(void* ptr, int visible);
void QGroupBox_ShowEvent(void* ptr, void* event);
void QGroupBox_ShowEventDefault(void* ptr, void* event);
void QGroupBox_CloseEvent(void* ptr, void* event);
void QGroupBox_CloseEventDefault(void* ptr, void* event);
void QGroupBox_ContextMenuEvent(void* ptr, void* event);
void QGroupBox_ContextMenuEventDefault(void* ptr, void* event);
void QGroupBox_InitPainter(void* ptr, void* painter);
void QGroupBox_InitPainterDefault(void* ptr, void* painter);
void QGroupBox_InputMethodEvent(void* ptr, void* event);
void QGroupBox_InputMethodEventDefault(void* ptr, void* event);
void QGroupBox_KeyPressEvent(void* ptr, void* event);
void QGroupBox_KeyPressEventDefault(void* ptr, void* event);
void QGroupBox_KeyReleaseEvent(void* ptr, void* event);
void QGroupBox_KeyReleaseEventDefault(void* ptr, void* event);
void QGroupBox_MouseDoubleClickEvent(void* ptr, void* event);
void QGroupBox_MouseDoubleClickEventDefault(void* ptr, void* event);
void QGroupBox_TabletEvent(void* ptr, void* event);
void QGroupBox_TabletEventDefault(void* ptr, void* event);
void QGroupBox_WheelEvent(void* ptr, void* event);
void QGroupBox_WheelEventDefault(void* ptr, void* event);
void QGroupBox_TimerEvent(void* ptr, void* event);
void QGroupBox_TimerEventDefault(void* ptr, void* event);
void QGroupBox_CustomEvent(void* ptr, void* event);
void QGroupBox_CustomEventDefault(void* ptr, void* event);
void* QHBoxLayout_NewQHBoxLayout();
void* QHBoxLayout_NewQHBoxLayout2(void* parent);
void QHBoxLayout_DestroyQHBoxLayout(void* ptr);
void QHBoxLayout_AddItem(void* ptr, void* item);
void QHBoxLayout_AddItemDefault(void* ptr, void* item);
void QHBoxLayout_Invalidate(void* ptr);
void QHBoxLayout_InvalidateDefault(void* ptr);
void QHBoxLayout_SetGeometry(void* ptr, void* r);
void QHBoxLayout_SetGeometryDefault(void* ptr, void* r);
void QHBoxLayout_ChildEvent(void* ptr, void* e);
void QHBoxLayout_ChildEventDefault(void* ptr, void* e);
void QHBoxLayout_TimerEvent(void* ptr, void* event);
void QHBoxLayout_TimerEventDefault(void* ptr, void* event);
void QHBoxLayout_CustomEvent(void* ptr, void* event);
void QHBoxLayout_CustomEventDefault(void* ptr, void* event);
int QHeaderView_CascadingSectionResizes(void* ptr);
int QHeaderView_DefaultAlignment(void* ptr);
int QHeaderView_DefaultSectionSize(void* ptr);
int QHeaderView_HighlightSections(void* ptr);
int QHeaderView_IsSortIndicatorShown(void* ptr);
int QHeaderView_MaximumSectionSize(void* ptr);
int QHeaderView_MinimumSectionSize(void* ptr);
void QHeaderView_ResetDefaultSectionSize(void* ptr);
void QHeaderView_ResizeSection(void* ptr, int logicalIndex, int size);
void QHeaderView_SetCascadingSectionResizes(void* ptr, int enable);
void QHeaderView_SetDefaultAlignment(void* ptr, int alignment);
void QHeaderView_SetDefaultSectionSize(void* ptr, int size);
void QHeaderView_SetHighlightSections(void* ptr, int highlight);
void QHeaderView_SetMaximumSectionSize(void* ptr, int size);
void QHeaderView_SetMinimumSectionSize(void* ptr, int size);
void QHeaderView_SetOffset(void* ptr, int offset);
void QHeaderView_SetSortIndicatorShown(void* ptr, int show);
void QHeaderView_SetStretchLastSection(void* ptr, int stretch);
int QHeaderView_StretchLastSection(void* ptr);
int QHeaderView_Count(void* ptr);
void QHeaderView_CurrentChanged(void* ptr, void* current, void* old);
void QHeaderView_CurrentChangedDefault(void* ptr, void* current, void* old);
int QHeaderView_Event(void* ptr, void* e);
int QHeaderView_EventDefault(void* ptr, void* e);
void QHeaderView_ConnectGeometriesChanged(void* ptr);
void QHeaderView_DisconnectGeometriesChanged(void* ptr);
void QHeaderView_GeometriesChanged(void* ptr);
void QHeaderView_HeaderDataChanged(void* ptr, int orientation, int logicalFirst, int logicalLast);
int QHeaderView_HiddenSectionCount(void* ptr);
void QHeaderView_HideSection(void* ptr, int logicalIndex);
int QHeaderView_HorizontalOffset(void* ptr);
int QHeaderView_HorizontalOffsetDefault(void* ptr);
int QHeaderView_IsSectionHidden(void* ptr, int logicalIndex);
int QHeaderView_Length(void* ptr);
int QHeaderView_LogicalIndex(void* ptr, int visualIndex);
int QHeaderView_LogicalIndexAt3(void* ptr, void* pos);
int QHeaderView_LogicalIndexAt(void* ptr, int position);
int QHeaderView_LogicalIndexAt2(void* ptr, int x, int y);
void QHeaderView_MouseDoubleClickEvent(void* ptr, void* e);
void QHeaderView_MouseDoubleClickEventDefault(void* ptr, void* e);
void QHeaderView_MouseMoveEvent(void* ptr, void* e);
void QHeaderView_MouseMoveEventDefault(void* ptr, void* e);
void QHeaderView_MousePressEvent(void* ptr, void* e);
void QHeaderView_MousePressEventDefault(void* ptr, void* e);
void QHeaderView_MouseReleaseEvent(void* ptr, void* e);
void QHeaderView_MouseReleaseEventDefault(void* ptr, void* e);
void QHeaderView_MoveSection(void* ptr, int from, int to);
int QHeaderView_Offset(void* ptr);
int QHeaderView_Orientation(void* ptr);
void QHeaderView_PaintEvent(void* ptr, void* e);
void QHeaderView_PaintEventDefault(void* ptr, void* e);
void QHeaderView_PaintSection(void* ptr, void* painter, void* rect, int logicalIndex);
void QHeaderView_PaintSectionDefault(void* ptr, void* painter, void* rect, int logicalIndex);
void QHeaderView_Reset(void* ptr);
void QHeaderView_ResetDefault(void* ptr);
int QHeaderView_ResizeContentsPrecision(void* ptr);
void QHeaderView_ResizeSections(void* ptr, int mode);
int QHeaderView_RestoreState(void* ptr, void* state);
void* QHeaderView_SaveState(void* ptr);
void QHeaderView_ConnectSectionClicked(void* ptr);
void QHeaderView_DisconnectSectionClicked(void* ptr);
void QHeaderView_SectionClicked(void* ptr, int logicalIndex);
void QHeaderView_ConnectSectionCountChanged(void* ptr);
void QHeaderView_DisconnectSectionCountChanged(void* ptr);
void QHeaderView_SectionCountChanged(void* ptr, int oldCount, int newCount);
void QHeaderView_ConnectSectionDoubleClicked(void* ptr);
void QHeaderView_DisconnectSectionDoubleClicked(void* ptr);
void QHeaderView_SectionDoubleClicked(void* ptr, int logicalIndex);
void QHeaderView_ConnectSectionEntered(void* ptr);
void QHeaderView_DisconnectSectionEntered(void* ptr);
void QHeaderView_SectionEntered(void* ptr, int logicalIndex);
void QHeaderView_ConnectSectionHandleDoubleClicked(void* ptr);
void QHeaderView_DisconnectSectionHandleDoubleClicked(void* ptr);
void QHeaderView_SectionHandleDoubleClicked(void* ptr, int logicalIndex);
void QHeaderView_ConnectSectionMoved(void* ptr);
void QHeaderView_DisconnectSectionMoved(void* ptr);
void QHeaderView_SectionMoved(void* ptr, int logicalIndex, int oldVisualIndex, int newVisualIndex);
int QHeaderView_SectionPosition(void* ptr, int logicalIndex);
void QHeaderView_ConnectSectionPressed(void* ptr);
void QHeaderView_DisconnectSectionPressed(void* ptr);
void QHeaderView_SectionPressed(void* ptr, int logicalIndex);
int QHeaderView_SectionResizeMode(void* ptr, int logicalIndex);
void QHeaderView_ConnectSectionResized(void* ptr);
void QHeaderView_DisconnectSectionResized(void* ptr);
void QHeaderView_SectionResized(void* ptr, int logicalIndex, int oldSize, int newSize);
int QHeaderView_SectionSize(void* ptr, int logicalIndex);
void* QHeaderView_SectionSizeFromContents(void* ptr, int logicalIndex);
void* QHeaderView_SectionSizeFromContentsDefault(void* ptr, int logicalIndex);
int QHeaderView_SectionSizeHint(void* ptr, int logicalIndex);
int QHeaderView_SectionViewportPosition(void* ptr, int logicalIndex);
int QHeaderView_SectionsClickable(void* ptr);
int QHeaderView_SectionsHidden(void* ptr);
int QHeaderView_SectionsMovable(void* ptr);
int QHeaderView_SectionsMoved(void* ptr);
void QHeaderView_SetModel(void* ptr, void* model);
void QHeaderView_SetModelDefault(void* ptr, void* model);
void QHeaderView_SetOffsetToLastSection(void* ptr);
void QHeaderView_SetOffsetToSectionPosition(void* ptr, int visualSectionNumber);
void QHeaderView_SetResizeContentsPrecision(void* ptr, int precision);
void QHeaderView_SetSectionHidden(void* ptr, int logicalIndex, int hide);
void QHeaderView_SetSectionResizeMode(void* ptr, int mode);
void QHeaderView_SetSectionResizeMode2(void* ptr, int logicalIndex, int mode);
void QHeaderView_SetSectionsClickable(void* ptr, int clickable);
void QHeaderView_SetSectionsMovable(void* ptr, int movable);
void QHeaderView_SetSelection(void* ptr, void* rect, int flags);
void QHeaderView_SetSelectionDefault(void* ptr, void* rect, int flags);
void QHeaderView_SetSortIndicator(void* ptr, int logicalIndex, int order);
void QHeaderView_SetVisible(void* ptr, int v);
void QHeaderView_SetVisibleDefault(void* ptr, int v);
void QHeaderView_ShowSection(void* ptr, int logicalIndex);
void* QHeaderView_SizeHint(void* ptr);
void* QHeaderView_SizeHintDefault(void* ptr);
void QHeaderView_ConnectSortIndicatorChanged(void* ptr);
void QHeaderView_DisconnectSortIndicatorChanged(void* ptr);
void QHeaderView_SortIndicatorChanged(void* ptr, int logicalIndex, int order);
int QHeaderView_SortIndicatorOrder(void* ptr);
int QHeaderView_SortIndicatorSection(void* ptr);
int QHeaderView_StretchSectionCount(void* ptr);
void QHeaderView_SwapSections(void* ptr, int first, int second);
int QHeaderView_VerticalOffset(void* ptr);
int QHeaderView_VerticalOffsetDefault(void* ptr);
int QHeaderView_ViewportEvent(void* ptr, void* e);
int QHeaderView_ViewportEventDefault(void* ptr, void* e);
int QHeaderView_VisualIndex(void* ptr, int logicalIndex);
int QHeaderView_VisualIndexAt(void* ptr, int position);
void QHeaderView_DestroyQHeaderView(void* ptr);
void QHeaderView_DragLeaveEvent(void* ptr, void* event);
void QHeaderView_DragLeaveEventDefault(void* ptr, void* event);
void QHeaderView_CloseEditor(void* ptr, void* editor, int hint);
void QHeaderView_CloseEditorDefault(void* ptr, void* editor, int hint);
void QHeaderView_CommitData(void* ptr, void* editor);
void QHeaderView_CommitDataDefault(void* ptr, void* editor);
void QHeaderView_DragEnterEvent(void* ptr, void* event);
void QHeaderView_DragEnterEventDefault(void* ptr, void* event);
void QHeaderView_DragMoveEvent(void* ptr, void* event);
void QHeaderView_DragMoveEventDefault(void* ptr, void* event);
void QHeaderView_DropEvent(void* ptr, void* event);
void QHeaderView_DropEventDefault(void* ptr, void* event);
void QHeaderView_EditorDestroyed(void* ptr, void* editor);
void QHeaderView_EditorDestroyedDefault(void* ptr, void* editor);
void QHeaderView_FocusInEvent(void* ptr, void* event);
void QHeaderView_FocusInEventDefault(void* ptr, void* event);
void QHeaderView_FocusOutEvent(void* ptr, void* event);
void QHeaderView_FocusOutEventDefault(void* ptr, void* event);
void QHeaderView_InputMethodEvent(void* ptr, void* event);
void QHeaderView_InputMethodEventDefault(void* ptr, void* event);
void QHeaderView_KeyPressEvent(void* ptr, void* event);
void QHeaderView_KeyPressEventDefault(void* ptr, void* event);
void QHeaderView_KeyboardSearch(void* ptr, char* search);
void QHeaderView_KeyboardSearchDefault(void* ptr, char* search);
void QHeaderView_ResizeEvent(void* ptr, void* event);
void QHeaderView_ResizeEventDefault(void* ptr, void* event);
void QHeaderView_RowsAboutToBeRemoved(void* ptr, void* parent, int start, int end);
void QHeaderView_RowsAboutToBeRemovedDefault(void* ptr, void* parent, int start, int end);
void QHeaderView_RowsInserted(void* ptr, void* parent, int start, int end);
void QHeaderView_RowsInsertedDefault(void* ptr, void* parent, int start, int end);
void QHeaderView_SelectAll(void* ptr);
void QHeaderView_SelectAllDefault(void* ptr);
void QHeaderView_SetRootIndex(void* ptr, void* index);
void QHeaderView_SetRootIndexDefault(void* ptr, void* index);
void QHeaderView_SetSelectionModel(void* ptr, void* selectionModel);
void QHeaderView_SetSelectionModelDefault(void* ptr, void* selectionModel);
void QHeaderView_StartDrag(void* ptr, int supportedActions);
void QHeaderView_StartDragDefault(void* ptr, int supportedActions);
void QHeaderView_TimerEvent(void* ptr, void* event);
void QHeaderView_TimerEventDefault(void* ptr, void* event);
void QHeaderView_UpdateGeometries(void* ptr);
void QHeaderView_UpdateGeometriesDefault(void* ptr);
void QHeaderView_ContextMenuEvent(void* ptr, void* e);
void QHeaderView_ContextMenuEventDefault(void* ptr, void* e);
void QHeaderView_ScrollContentsBy(void* ptr, int dx, int dy);
void QHeaderView_ScrollContentsByDefault(void* ptr, int dx, int dy);
void QHeaderView_SetupViewport(void* ptr, void* viewport);
void QHeaderView_SetupViewportDefault(void* ptr, void* viewport);
void QHeaderView_WheelEvent(void* ptr, void* e);
void QHeaderView_WheelEventDefault(void* ptr, void* e);
void QHeaderView_ChangeEvent(void* ptr, void* ev);
void QHeaderView_ChangeEventDefault(void* ptr, void* ev);
void QHeaderView_ActionEvent(void* ptr, void* event);
void QHeaderView_ActionEventDefault(void* ptr, void* event);
void QHeaderView_EnterEvent(void* ptr, void* event);
void QHeaderView_EnterEventDefault(void* ptr, void* event);
void QHeaderView_HideEvent(void* ptr, void* event);
void QHeaderView_HideEventDefault(void* ptr, void* event);
void QHeaderView_LeaveEvent(void* ptr, void* event);
void QHeaderView_LeaveEventDefault(void* ptr, void* event);
void QHeaderView_MoveEvent(void* ptr, void* event);
void QHeaderView_MoveEventDefault(void* ptr, void* event);
void QHeaderView_ShowEvent(void* ptr, void* event);
void QHeaderView_ShowEventDefault(void* ptr, void* event);
void QHeaderView_CloseEvent(void* ptr, void* event);
void QHeaderView_CloseEventDefault(void* ptr, void* event);
void QHeaderView_InitPainter(void* ptr, void* painter);
void QHeaderView_InitPainterDefault(void* ptr, void* painter);
void QHeaderView_KeyReleaseEvent(void* ptr, void* event);
void QHeaderView_KeyReleaseEventDefault(void* ptr, void* event);
void QHeaderView_TabletEvent(void* ptr, void* event);
void QHeaderView_TabletEventDefault(void* ptr, void* event);
void QHeaderView_ChildEvent(void* ptr, void* event);
void QHeaderView_ChildEventDefault(void* ptr, void* event);
void QHeaderView_CustomEvent(void* ptr, void* event);
void QHeaderView_CustomEventDefault(void* ptr, void* event);
char* QInputDialog_CancelButtonText(void* ptr);
char* QInputDialog_ComboBoxItems(void* ptr);
int QInputDialog_DoubleDecimals(void* ptr);
int QInputDialog_InputMode(void* ptr);
int QInputDialog_IntMaximum(void* ptr);
int QInputDialog_IntMinimum(void* ptr);
int QInputDialog_IntStep(void* ptr);
int QInputDialog_IntValue(void* ptr);
int QInputDialog_IsComboBoxEditable(void* ptr);
char* QInputDialog_LabelText(void* ptr);
char* QInputDialog_OkButtonText(void* ptr);
int QInputDialog_Options(void* ptr);
void QInputDialog_SetCancelButtonText(void* ptr, char* text);
void QInputDialog_SetComboBoxEditable(void* ptr, int editable);
void QInputDialog_SetComboBoxItems(void* ptr, char* items);
void QInputDialog_SetDoubleDecimals(void* ptr, int decimals);
void QInputDialog_SetInputMode(void* ptr, int mode);
void QInputDialog_SetIntMaximum(void* ptr, int max);
void QInputDialog_SetIntMinimum(void* ptr, int min);
void QInputDialog_SetIntStep(void* ptr, int step);
void QInputDialog_SetIntValue(void* ptr, int value);
void QInputDialog_SetLabelText(void* ptr, char* text);
void QInputDialog_SetOkButtonText(void* ptr, char* text);
void QInputDialog_SetOptions(void* ptr, int options);
void QInputDialog_SetTextEchoMode(void* ptr, int mode);
void QInputDialog_SetTextValue(void* ptr, char* text);
int QInputDialog_TextEchoMode(void* ptr);
char* QInputDialog_TextValue(void* ptr);
void* QInputDialog_NewQInputDialog(void* parent, int flags);
void QInputDialog_Done(void* ptr, int result);
void QInputDialog_DoneDefault(void* ptr, int result);
int QInputDialog_QInputDialog_GetInt(void* parent, char* title, char* label, int value, int min, int max, int step, int ok, int flags);
char* QInputDialog_QInputDialog_GetItem(void* parent, char* title, char* label, char* items, int current, int editable, int ok, int flags, int inputMethodHints);
char* QInputDialog_QInputDialog_GetMultiLineText(void* parent, char* title, char* label, char* text, int ok, int flags, int inputMethodHints);
char* QInputDialog_QInputDialog_GetText(void* parent, char* title, char* label, int mode, char* text, int ok, int flags, int inputMethodHints);
void QInputDialog_ConnectIntValueChanged(void* ptr);
void QInputDialog_DisconnectIntValueChanged(void* ptr);
void QInputDialog_IntValueChanged(void* ptr, int value);
void QInputDialog_ConnectIntValueSelected(void* ptr);
void QInputDialog_DisconnectIntValueSelected(void* ptr);
void QInputDialog_IntValueSelected(void* ptr, int value);
void* QInputDialog_MinimumSizeHint(void* ptr);
void* QInputDialog_MinimumSizeHintDefault(void* ptr);
void QInputDialog_Open(void* ptr, void* receiver, char* member);
void QInputDialog_SetIntRange(void* ptr, int min, int max);
void QInputDialog_SetOption(void* ptr, int option, int on);
void QInputDialog_SetVisible(void* ptr, int visible);
void QInputDialog_SetVisibleDefault(void* ptr, int visible);
void* QInputDialog_SizeHint(void* ptr);
void* QInputDialog_SizeHintDefault(void* ptr);
int QInputDialog_TestOption(void* ptr, int option);
void QInputDialog_ConnectTextValueChanged(void* ptr);
void QInputDialog_DisconnectTextValueChanged(void* ptr);
void QInputDialog_TextValueChanged(void* ptr, char* text);
void QInputDialog_ConnectTextValueSelected(void* ptr);
void QInputDialog_DisconnectTextValueSelected(void* ptr);
void QInputDialog_TextValueSelected(void* ptr, char* text);
void QInputDialog_DestroyQInputDialog(void* ptr);
void QInputDialog_Accept(void* ptr);
void QInputDialog_AcceptDefault(void* ptr);
void QInputDialog_CloseEvent(void* ptr, void* e);
void QInputDialog_CloseEventDefault(void* ptr, void* e);
void QInputDialog_ContextMenuEvent(void* ptr, void* e);
void QInputDialog_ContextMenuEventDefault(void* ptr, void* e);
void QInputDialog_KeyPressEvent(void* ptr, void* e);
void QInputDialog_KeyPressEventDefault(void* ptr, void* e);
void QInputDialog_Reject(void* ptr);
void QInputDialog_RejectDefault(void* ptr);
void QInputDialog_ResizeEvent(void* ptr, void* v);
void QInputDialog_ResizeEventDefault(void* ptr, void* v);
void QInputDialog_ShowEvent(void* ptr, void* event);
void QInputDialog_ShowEventDefault(void* ptr, void* event);
void QInputDialog_ActionEvent(void* ptr, void* event);
void QInputDialog_ActionEventDefault(void* ptr, void* event);
void QInputDialog_DragEnterEvent(void* ptr, void* event);
void QInputDialog_DragEnterEventDefault(void* ptr, void* event);
void QInputDialog_DragLeaveEvent(void* ptr, void* event);
void QInputDialog_DragLeaveEventDefault(void* ptr, void* event);
void QInputDialog_DragMoveEvent(void* ptr, void* event);
void QInputDialog_DragMoveEventDefault(void* ptr, void* event);
void QInputDialog_DropEvent(void* ptr, void* event);
void QInputDialog_DropEventDefault(void* ptr, void* event);
void QInputDialog_EnterEvent(void* ptr, void* event);
void QInputDialog_EnterEventDefault(void* ptr, void* event);
void QInputDialog_FocusInEvent(void* ptr, void* event);
void QInputDialog_FocusInEventDefault(void* ptr, void* event);
void QInputDialog_FocusOutEvent(void* ptr, void* event);
void QInputDialog_FocusOutEventDefault(void* ptr, void* event);
void QInputDialog_HideEvent(void* ptr, void* event);
void QInputDialog_HideEventDefault(void* ptr, void* event);
void QInputDialog_LeaveEvent(void* ptr, void* event);
void QInputDialog_LeaveEventDefault(void* ptr, void* event);
void QInputDialog_MoveEvent(void* ptr, void* event);
void QInputDialog_MoveEventDefault(void* ptr, void* event);
void QInputDialog_PaintEvent(void* ptr, void* event);
void QInputDialog_PaintEventDefault(void* ptr, void* event);
void QInputDialog_ChangeEvent(void* ptr, void* event);
void QInputDialog_ChangeEventDefault(void* ptr, void* event);
void QInputDialog_InitPainter(void* ptr, void* painter);
void QInputDialog_InitPainterDefault(void* ptr, void* painter);
void QInputDialog_InputMethodEvent(void* ptr, void* event);
void QInputDialog_InputMethodEventDefault(void* ptr, void* event);
void QInputDialog_KeyReleaseEvent(void* ptr, void* event);
void QInputDialog_KeyReleaseEventDefault(void* ptr, void* event);
void QInputDialog_MouseDoubleClickEvent(void* ptr, void* event);
void QInputDialog_MouseDoubleClickEventDefault(void* ptr, void* event);
void QInputDialog_MouseMoveEvent(void* ptr, void* event);
void QInputDialog_MouseMoveEventDefault(void* ptr, void* event);
void QInputDialog_MousePressEvent(void* ptr, void* event);
void QInputDialog_MousePressEventDefault(void* ptr, void* event);
void QInputDialog_MouseReleaseEvent(void* ptr, void* event);
void QInputDialog_MouseReleaseEventDefault(void* ptr, void* event);
void QInputDialog_TabletEvent(void* ptr, void* event);
void QInputDialog_TabletEventDefault(void* ptr, void* event);
void QInputDialog_WheelEvent(void* ptr, void* event);
void QInputDialog_WheelEventDefault(void* ptr, void* event);
void QInputDialog_TimerEvent(void* ptr, void* event);
void QInputDialog_TimerEventDefault(void* ptr, void* event);
void QInputDialog_ChildEvent(void* ptr, void* event);
void QInputDialog_ChildEventDefault(void* ptr, void* event);
void QInputDialog_CustomEvent(void* ptr, void* event);
void QInputDialog_CustomEventDefault(void* ptr, void* event);
int QItemDelegate_EventFilter(void* ptr, void* editor, void* event);
int QItemDelegate_EventFilterDefault(void* ptr, void* editor, void* event);
int QItemDelegate_HasClipping(void* ptr);
void QItemDelegate_SetClipping(void* ptr, int clip);
void* QItemDelegate_NewQItemDelegate(void* parent);
void* QItemDelegate_CreateEditor(void* ptr, void* parent, void* option, void* index);
void* QItemDelegate_CreateEditorDefault(void* ptr, void* parent, void* option, void* index);
int QItemDelegate_EditorEvent(void* ptr, void* event, void* model, void* option, void* index);
int QItemDelegate_EditorEventDefault(void* ptr, void* event, void* model, void* option, void* index);
void* QItemDelegate_ItemEditorFactory(void* ptr);
void QItemDelegate_SetEditorData(void* ptr, void* editor, void* index);
void QItemDelegate_SetEditorDataDefault(void* ptr, void* editor, void* index);
void QItemDelegate_SetItemEditorFactory(void* ptr, void* factory);
void QItemDelegate_SetModelData(void* ptr, void* editor, void* model, void* index);
void QItemDelegate_SetModelDataDefault(void* ptr, void* editor, void* model, void* index);
void* QItemDelegate_SizeHint(void* ptr, void* option, void* index);
void* QItemDelegate_SizeHintDefault(void* ptr, void* option, void* index);
void QItemDelegate_DestroyQItemDelegate(void* ptr);
void QItemDelegate_DestroyEditor(void* ptr, void* editor, void* index);
void QItemDelegate_DestroyEditorDefault(void* ptr, void* editor, void* index);
void QItemDelegate_TimerEvent(void* ptr, void* event);
void QItemDelegate_TimerEventDefault(void* ptr, void* event);
void QItemDelegate_ChildEvent(void* ptr, void* event);
void QItemDelegate_ChildEventDefault(void* ptr, void* event);
void QItemDelegate_CustomEvent(void* ptr, void* event);
void QItemDelegate_CustomEventDefault(void* ptr, void* event);
void QItemEditorCreatorBase_DestroyQItemEditorCreatorBase(void* ptr);
void* QItemEditorCreatorBase_CreateWidget(void* ptr, void* parent);
void* QItemEditorCreatorBase_ValuePropertyName(void* ptr);
char* QItemEditorCreatorBase_ObjectNameAbs(void* ptr);
void QItemEditorCreatorBase_SetObjectNameAbs(void* ptr, char* name);
void* QItemEditorFactory_NewQItemEditorFactory();
void* QItemEditorFactory_CreateEditor(void* ptr, int userType, void* parent);
void* QItemEditorFactory_CreateEditorDefault(void* ptr, int userType, void* parent);
void* QItemEditorFactory_QItemEditorFactory_DefaultFactory();
void QItemEditorFactory_RegisterEditor(void* ptr, int userType, void* creator);
void QItemEditorFactory_QItemEditorFactory_SetDefaultFactory(void* factory);
void* QItemEditorFactory_ValuePropertyName(void* ptr, int userType);
void* QItemEditorFactory_ValuePropertyNameDefault(void* ptr, int userType);
void QItemEditorFactory_DestroyQItemEditorFactory(void* ptr);
char* QItemEditorFactory_ObjectNameAbs(void* ptr);
void QItemEditorFactory_SetObjectNameAbs(void* ptr, char* name);
void* QKeyEventTransition_NewQKeyEventTransition2(void* object, int ty, int key, void* sourceState);
void* QKeyEventTransition_NewQKeyEventTransition(void* sourceState);
int QKeyEventTransition_EventTest(void* ptr, void* event);
int QKeyEventTransition_EventTestDefault(void* ptr, void* event);
int QKeyEventTransition_Key(void* ptr);
int QKeyEventTransition_ModifierMask(void* ptr);
void QKeyEventTransition_OnTransition(void* ptr, void* event);
void QKeyEventTransition_OnTransitionDefault(void* ptr, void* event);
void QKeyEventTransition_SetKey(void* ptr, int key);
void QKeyEventTransition_SetModifierMask(void* ptr, int modifierMask);
void QKeyEventTransition_DestroyQKeyEventTransition(void* ptr);
void QKeyEventTransition_TimerEvent(void* ptr, void* event);
void QKeyEventTransition_TimerEventDefault(void* ptr, void* event);
void QKeyEventTransition_ChildEvent(void* ptr, void* event);
void QKeyEventTransition_ChildEventDefault(void* ptr, void* event);
void QKeyEventTransition_CustomEvent(void* ptr, void* event);
void QKeyEventTransition_CustomEventDefault(void* ptr, void* event);
void QKeySequenceEdit_SetKeySequence(void* ptr, void* keySequence);
void* QKeySequenceEdit_NewQKeySequenceEdit(void* parent);
void* QKeySequenceEdit_NewQKeySequenceEdit2(void* keySequence, void* parent);
void QKeySequenceEdit_Clear(void* ptr);
void QKeySequenceEdit_ConnectEditingFinished(void* ptr);
void QKeySequenceEdit_DisconnectEditingFinished(void* ptr);
void QKeySequenceEdit_EditingFinished(void* ptr);
int QKeySequenceEdit_Event(void* ptr, void* e);
int QKeySequenceEdit_EventDefault(void* ptr, void* e);
void QKeySequenceEdit_KeyPressEvent(void* ptr, void* e);
void QKeySequenceEdit_KeyPressEventDefault(void* ptr, void* e);
void QKeySequenceEdit_KeyReleaseEvent(void* ptr, void* e);
void QKeySequenceEdit_KeyReleaseEventDefault(void* ptr, void* e);
void QKeySequenceEdit_TimerEvent(void* ptr, void* e);
void QKeySequenceEdit_TimerEventDefault(void* ptr, void* e);
void QKeySequenceEdit_DestroyQKeySequenceEdit(void* ptr);
void QKeySequenceEdit_ActionEvent(void* ptr, void* event);
void QKeySequenceEdit_ActionEventDefault(void* ptr, void* event);
void QKeySequenceEdit_DragEnterEvent(void* ptr, void* event);
void QKeySequenceEdit_DragEnterEventDefault(void* ptr, void* event);
void QKeySequenceEdit_DragLeaveEvent(void* ptr, void* event);
void QKeySequenceEdit_DragLeaveEventDefault(void* ptr, void* event);
void QKeySequenceEdit_DragMoveEvent(void* ptr, void* event);
void QKeySequenceEdit_DragMoveEventDefault(void* ptr, void* event);
void QKeySequenceEdit_DropEvent(void* ptr, void* event);
void QKeySequenceEdit_DropEventDefault(void* ptr, void* event);
void QKeySequenceEdit_EnterEvent(void* ptr, void* event);
void QKeySequenceEdit_EnterEventDefault(void* ptr, void* event);
void QKeySequenceEdit_FocusInEvent(void* ptr, void* event);
void QKeySequenceEdit_FocusInEventDefault(void* ptr, void* event);
void QKeySequenceEdit_FocusOutEvent(void* ptr, void* event);
void QKeySequenceEdit_FocusOutEventDefault(void* ptr, void* event);
void QKeySequenceEdit_HideEvent(void* ptr, void* event);
void QKeySequenceEdit_HideEventDefault(void* ptr, void* event);
void QKeySequenceEdit_LeaveEvent(void* ptr, void* event);
void QKeySequenceEdit_LeaveEventDefault(void* ptr, void* event);
void QKeySequenceEdit_MoveEvent(void* ptr, void* event);
void QKeySequenceEdit_MoveEventDefault(void* ptr, void* event);
void QKeySequenceEdit_PaintEvent(void* ptr, void* event);
void QKeySequenceEdit_PaintEventDefault(void* ptr, void* event);
void QKeySequenceEdit_SetVisible(void* ptr, int visible);
void QKeySequenceEdit_SetVisibleDefault(void* ptr, int visible);
void QKeySequenceEdit_ShowEvent(void* ptr, void* event);
void QKeySequenceEdit_ShowEventDefault(void* ptr, void* event);
void QKeySequenceEdit_ChangeEvent(void* ptr, void* event);
void QKeySequenceEdit_ChangeEventDefault(void* ptr, void* event);
void QKeySequenceEdit_CloseEvent(void* ptr, void* event);
void QKeySequenceEdit_CloseEventDefault(void* ptr, void* event);
void QKeySequenceEdit_ContextMenuEvent(void* ptr, void* event);
void QKeySequenceEdit_ContextMenuEventDefault(void* ptr, void* event);
void QKeySequenceEdit_InitPainter(void* ptr, void* painter);
void QKeySequenceEdit_InitPainterDefault(void* ptr, void* painter);
void QKeySequenceEdit_InputMethodEvent(void* ptr, void* event);
void QKeySequenceEdit_InputMethodEventDefault(void* ptr, void* event);
void QKeySequenceEdit_MouseDoubleClickEvent(void* ptr, void* event);
void QKeySequenceEdit_MouseDoubleClickEventDefault(void* ptr, void* event);
void QKeySequenceEdit_MouseMoveEvent(void* ptr, void* event);
void QKeySequenceEdit_MouseMoveEventDefault(void* ptr, void* event);
void QKeySequenceEdit_MousePressEvent(void* ptr, void* event);
void QKeySequenceEdit_MousePressEventDefault(void* ptr, void* event);
void QKeySequenceEdit_MouseReleaseEvent(void* ptr, void* event);
void QKeySequenceEdit_MouseReleaseEventDefault(void* ptr, void* event);
void QKeySequenceEdit_ResizeEvent(void* ptr, void* event);
void QKeySequenceEdit_ResizeEventDefault(void* ptr, void* event);
void QKeySequenceEdit_TabletEvent(void* ptr, void* event);
void QKeySequenceEdit_TabletEventDefault(void* ptr, void* event);
void QKeySequenceEdit_WheelEvent(void* ptr, void* event);
void QKeySequenceEdit_WheelEventDefault(void* ptr, void* event);
void QKeySequenceEdit_ChildEvent(void* ptr, void* event);
void QKeySequenceEdit_ChildEventDefault(void* ptr, void* event);
void QKeySequenceEdit_CustomEvent(void* ptr, void* event);
void QKeySequenceEdit_CustomEventDefault(void* ptr, void* event);
int QLCDNumber_IntValue(void* ptr);
int QLCDNumber_Mode(void* ptr);
int QLCDNumber_SegmentStyle(void* ptr);
void QLCDNumber_SetMode(void* ptr, int v);
void QLCDNumber_SetSegmentStyle(void* ptr, int v);
void QLCDNumber_SetSmallDecimalPoint(void* ptr, int v);
int QLCDNumber_SmallDecimalPoint(void* ptr);
void* QLCDNumber_NewQLCDNumber(void* parent);
int QLCDNumber_CheckOverflow2(void* ptr, int num);
int QLCDNumber_DigitCount(void* ptr);
void QLCDNumber_Display(void* ptr, char* s);
void QLCDNumber_Display3(void* ptr, int num);
int QLCDNumber_Event(void* ptr, void* e);
int QLCDNumber_EventDefault(void* ptr, void* e);
void QLCDNumber_ConnectOverflow(void* ptr);
void QLCDNumber_DisconnectOverflow(void* ptr);
void QLCDNumber_Overflow(void* ptr);
void QLCDNumber_PaintEvent(void* ptr, void* v);
void QLCDNumber_PaintEventDefault(void* ptr, void* v);
void QLCDNumber_SetBinMode(void* ptr);
void QLCDNumber_SetDecMode(void* ptr);
void QLCDNumber_SetDigitCount(void* ptr, int numDigits);
void QLCDNumber_SetHexMode(void* ptr);
void QLCDNumber_SetOctMode(void* ptr);
void* QLCDNumber_SizeHint(void* ptr);
void* QLCDNumber_SizeHintDefault(void* ptr);
void QLCDNumber_DestroyQLCDNumber(void* ptr);
void QLCDNumber_ChangeEvent(void* ptr, void* ev);
void QLCDNumber_ChangeEventDefault(void* ptr, void* ev);
void QLCDNumber_ActionEvent(void* ptr, void* event);
void QLCDNumber_ActionEventDefault(void* ptr, void* event);
void QLCDNumber_DragEnterEvent(void* ptr, void* event);
void QLCDNumber_DragEnterEventDefault(void* ptr, void* event);
void QLCDNumber_DragLeaveEvent(void* ptr, void* event);
void QLCDNumber_DragLeaveEventDefault(void* ptr, void* event);
void QLCDNumber_DragMoveEvent(void* ptr, void* event);
void QLCDNumber_DragMoveEventDefault(void* ptr, void* event);
void QLCDNumber_DropEvent(void* ptr, void* event);
void QLCDNumber_DropEventDefault(void* ptr, void* event);
void QLCDNumber_EnterEvent(void* ptr, void* event);
void QLCDNumber_EnterEventDefault(void* ptr, void* event);
void QLCDNumber_FocusInEvent(void* ptr, void* event);
void QLCDNumber_FocusInEventDefault(void* ptr, void* event);
void QLCDNumber_FocusOutEvent(void* ptr, void* event);
void QLCDNumber_FocusOutEventDefault(void* ptr, void* event);
void QLCDNumber_HideEvent(void* ptr, void* event);
void QLCDNumber_HideEventDefault(void* ptr, void* event);
void QLCDNumber_LeaveEvent(void* ptr, void* event);
void QLCDNumber_LeaveEventDefault(void* ptr, void* event);
void QLCDNumber_MoveEvent(void* ptr, void* event);
void QLCDNumber_MoveEventDefault(void* ptr, void* event);
void QLCDNumber_SetVisible(void* ptr, int visible);
void QLCDNumber_SetVisibleDefault(void* ptr, int visible);
void QLCDNumber_ShowEvent(void* ptr, void* event);
void QLCDNumber_ShowEventDefault(void* ptr, void* event);
void QLCDNumber_CloseEvent(void* ptr, void* event);
void QLCDNumber_CloseEventDefault(void* ptr, void* event);
void QLCDNumber_ContextMenuEvent(void* ptr, void* event);
void QLCDNumber_ContextMenuEventDefault(void* ptr, void* event);
void QLCDNumber_InitPainter(void* ptr, void* painter);
void QLCDNumber_InitPainterDefault(void* ptr, void* painter);
void QLCDNumber_InputMethodEvent(void* ptr, void* event);
void QLCDNumber_InputMethodEventDefault(void* ptr, void* event);
void QLCDNumber_KeyPressEvent(void* ptr, void* event);
void QLCDNumber_KeyPressEventDefault(void* ptr, void* event);
void QLCDNumber_KeyReleaseEvent(void* ptr, void* event);
void QLCDNumber_KeyReleaseEventDefault(void* ptr, void* event);
void QLCDNumber_MouseDoubleClickEvent(void* ptr, void* event);
void QLCDNumber_MouseDoubleClickEventDefault(void* ptr, void* event);
void QLCDNumber_MouseMoveEvent(void* ptr, void* event);
void QLCDNumber_MouseMoveEventDefault(void* ptr, void* event);
void QLCDNumber_MousePressEvent(void* ptr, void* event);
void QLCDNumber_MousePressEventDefault(void* ptr, void* event);
void QLCDNumber_MouseReleaseEvent(void* ptr, void* event);
void QLCDNumber_MouseReleaseEventDefault(void* ptr, void* event);
void QLCDNumber_ResizeEvent(void* ptr, void* event);
void QLCDNumber_ResizeEventDefault(void* ptr, void* event);
void QLCDNumber_TabletEvent(void* ptr, void* event);
void QLCDNumber_TabletEventDefault(void* ptr, void* event);
void QLCDNumber_WheelEvent(void* ptr, void* event);
void QLCDNumber_WheelEventDefault(void* ptr, void* event);
void QLCDNumber_TimerEvent(void* ptr, void* event);
void QLCDNumber_TimerEventDefault(void* ptr, void* event);
void QLCDNumber_ChildEvent(void* ptr, void* event);
void QLCDNumber_ChildEventDefault(void* ptr, void* event);
void QLCDNumber_CustomEvent(void* ptr, void* event);
void QLCDNumber_CustomEventDefault(void* ptr, void* event);
int QLabel_Alignment(void* ptr);
int QLabel_HasScaledContents(void* ptr);
int QLabel_HasSelectedText(void* ptr);
int QLabel_Indent(void* ptr);
int QLabel_Margin(void* ptr);
int QLabel_OpenExternalLinks(void* ptr);
void* QLabel_Pixmap(void* ptr);
char* QLabel_SelectedText(void* ptr);
void QLabel_SetAlignment(void* ptr, int v);
void QLabel_SetIndent(void* ptr, int v);
void QLabel_SetMargin(void* ptr, int v);
void QLabel_SetOpenExternalLinks(void* ptr, int open);
void QLabel_SetPixmap(void* ptr, void* v);
void QLabel_SetScaledContents(void* ptr, int v);
void QLabel_SetText(void* ptr, char* v);
void QLabel_SetTextFormat(void* ptr, int v);
void QLabel_SetTextInteractionFlags(void* ptr, int flags);
void QLabel_SetWordWrap(void* ptr, int on);
char* QLabel_Text(void* ptr);
int QLabel_TextFormat(void* ptr);
int QLabel_TextInteractionFlags(void* ptr);
int QLabel_WordWrap(void* ptr);
void* QLabel_NewQLabel(void* parent, int f);
void* QLabel_NewQLabel2(char* text, void* parent, int f);
void* QLabel_Buddy(void* ptr);
void QLabel_ChangeEvent(void* ptr, void* ev);
void QLabel_ChangeEventDefault(void* ptr, void* ev);
void QLabel_Clear(void* ptr);
void QLabel_ContextMenuEvent(void* ptr, void* ev);
void QLabel_ContextMenuEventDefault(void* ptr, void* ev);
int QLabel_Event(void* ptr, void* e);
int QLabel_EventDefault(void* ptr, void* e);
void QLabel_FocusInEvent(void* ptr, void* ev);
void QLabel_FocusInEventDefault(void* ptr, void* ev);
int QLabel_FocusNextPrevChild(void* ptr, int next);
int QLabel_FocusNextPrevChildDefault(void* ptr, int next);
void QLabel_FocusOutEvent(void* ptr, void* ev);
void QLabel_FocusOutEventDefault(void* ptr, void* ev);
int QLabel_HeightForWidth(void* ptr, int w);
int QLabel_HeightForWidthDefault(void* ptr, int w);
void QLabel_KeyPressEvent(void* ptr, void* ev);
void QLabel_KeyPressEventDefault(void* ptr, void* ev);
void QLabel_ConnectLinkActivated(void* ptr);
void QLabel_DisconnectLinkActivated(void* ptr);
void QLabel_LinkActivated(void* ptr, char* link);
void QLabel_ConnectLinkHovered(void* ptr);
void QLabel_DisconnectLinkHovered(void* ptr);
void QLabel_LinkHovered(void* ptr, char* link);
void* QLabel_MinimumSizeHint(void* ptr);
void* QLabel_MinimumSizeHintDefault(void* ptr);
void QLabel_MouseMoveEvent(void* ptr, void* ev);
void QLabel_MouseMoveEventDefault(void* ptr, void* ev);
void QLabel_MousePressEvent(void* ptr, void* ev);
void QLabel_MousePressEventDefault(void* ptr, void* ev);
void QLabel_MouseReleaseEvent(void* ptr, void* ev);
void QLabel_MouseReleaseEventDefault(void* ptr, void* ev);
void* QLabel_Movie(void* ptr);
void QLabel_PaintEvent(void* ptr, void* v);
void QLabel_PaintEventDefault(void* ptr, void* v);
void* QLabel_Picture(void* ptr);
int QLabel_SelectionStart(void* ptr);
void QLabel_SetBuddy(void* ptr, void* buddy);
void QLabel_SetMovie(void* ptr, void* movie);
void QLabel_SetNum(void* ptr, int num);
void QLabel_SetPicture(void* ptr, void* picture);
void QLabel_SetSelection(void* ptr, int start, int length);
void* QLabel_SizeHint(void* ptr);
void* QLabel_SizeHintDefault(void* ptr);
void QLabel_DestroyQLabel(void* ptr);
void QLabel_ActionEvent(void* ptr, void* event);
void QLabel_ActionEventDefault(void* ptr, void* event);
void QLabel_DragEnterEvent(void* ptr, void* event);
void QLabel_DragEnterEventDefault(void* ptr, void* event);
void QLabel_DragLeaveEvent(void* ptr, void* event);
void QLabel_DragLeaveEventDefault(void* ptr, void* event);
void QLabel_DragMoveEvent(void* ptr, void* event);
void QLabel_DragMoveEventDefault(void* ptr, void* event);
void QLabel_DropEvent(void* ptr, void* event);
void QLabel_DropEventDefault(void* ptr, void* event);
void QLabel_EnterEvent(void* ptr, void* event);
void QLabel_EnterEventDefault(void* ptr, void* event);
void QLabel_HideEvent(void* ptr, void* event);
void QLabel_HideEventDefault(void* ptr, void* event);
void QLabel_LeaveEvent(void* ptr, void* event);
void QLabel_LeaveEventDefault(void* ptr, void* event);
void QLabel_MoveEvent(void* ptr, void* event);
void QLabel_MoveEventDefault(void* ptr, void* event);
void QLabel_SetVisible(void* ptr, int visible);
void QLabel_SetVisibleDefault(void* ptr, int visible);
void QLabel_ShowEvent(void* ptr, void* event);
void QLabel_ShowEventDefault(void* ptr, void* event);
void QLabel_CloseEvent(void* ptr, void* event);
void QLabel_CloseEventDefault(void* ptr, void* event);
void QLabel_InitPainter(void* ptr, void* painter);
void QLabel_InitPainterDefault(void* ptr, void* painter);
void QLabel_InputMethodEvent(void* ptr, void* event);
void QLabel_InputMethodEventDefault(void* ptr, void* event);
void QLabel_KeyReleaseEvent(void* ptr, void* event);
void QLabel_KeyReleaseEventDefault(void* ptr, void* event);
void QLabel_MouseDoubleClickEvent(void* ptr, void* event);
void QLabel_MouseDoubleClickEventDefault(void* ptr, void* event);
void QLabel_ResizeEvent(void* ptr, void* event);
void QLabel_ResizeEventDefault(void* ptr, void* event);
void QLabel_TabletEvent(void* ptr, void* event);
void QLabel_TabletEventDefault(void* ptr, void* event);
void QLabel_WheelEvent(void* ptr, void* event);
void QLabel_WheelEventDefault(void* ptr, void* event);
void QLabel_TimerEvent(void* ptr, void* event);
void QLabel_TimerEventDefault(void* ptr, void* event);
void QLabel_ChildEvent(void* ptr, void* event);
void QLabel_ChildEventDefault(void* ptr, void* event);
void QLabel_CustomEvent(void* ptr, void* event);
void QLabel_CustomEventDefault(void* ptr, void* event);
void QLayout_SetSizeConstraint(void* ptr, int v);
void QLayout_SetSpacing(void* ptr, int v);
int QLayout_SizeConstraint(void* ptr);
int QLayout_Spacing(void* ptr);
int QLayout_Activate(void* ptr);
void QLayout_AddItem(void* ptr, void* item);
void QLayout_AddWidget(void* ptr, void* w);
void QLayout_ChildEvent(void* ptr, void* e);
void QLayout_ChildEventDefault(void* ptr, void* e);
void* QLayout_QLayout_ClosestAcceptableSize(void* widget, void* size);
void* QLayout_ContentsRect(void* ptr);
int QLayout_ControlTypes(void* ptr);
int QLayout_ControlTypesDefault(void* ptr);
int QLayout_Count(void* ptr);
int QLayout_ExpandingDirections(void* ptr);
int QLayout_ExpandingDirectionsDefault(void* ptr);
void* QLayout_Geometry(void* ptr);
void* QLayout_GeometryDefault(void* ptr);
void QLayout_GetContentsMargins(void* ptr, int left, int top, int right, int bottom);
int QLayout_IndexOf(void* ptr, void* widget);
int QLayout_IndexOfDefault(void* ptr, void* widget);
void QLayout_Invalidate(void* ptr);
void QLayout_InvalidateDefault(void* ptr);
int QLayout_IsEmpty(void* ptr);
int QLayout_IsEmptyDefault(void* ptr);
int QLayout_IsEnabled(void* ptr);
void* QLayout_ItemAt(void* ptr, int index);
void* QLayout_Layout(void* ptr);
void* QLayout_LayoutDefault(void* ptr);
void* QLayout_MaximumSize(void* ptr);
void* QLayout_MaximumSizeDefault(void* ptr);
void* QLayout_MenuBar(void* ptr);
void* QLayout_MinimumSize(void* ptr);
void* QLayout_MinimumSizeDefault(void* ptr);
void* QLayout_ParentWidget(void* ptr);
void QLayout_RemoveItem(void* ptr, void* item);
void QLayout_RemoveWidget(void* ptr, void* widget);
void* QLayout_ReplaceWidget(void* ptr, void* from, void* to, int options);
int QLayout_SetAlignment2(void* ptr, void* l, int alignment);
int QLayout_SetAlignment(void* ptr, void* w, int alignment);
void QLayout_SetContentsMargins2(void* ptr, void* margins);
void QLayout_SetContentsMargins(void* ptr, int left, int top, int right, int bottom);
void QLayout_SetEnabled(void* ptr, int enable);
void QLayout_SetGeometry(void* ptr, void* r);
void QLayout_SetGeometryDefault(void* ptr, void* r);
void QLayout_SetMenuBar(void* ptr, void* widget);
void* QLayout_TakeAt(void* ptr, int index);
void QLayout_Update(void* ptr);
void QLayout_TimerEvent(void* ptr, void* event);
void QLayout_TimerEventDefault(void* ptr, void* event);
void QLayout_CustomEvent(void* ptr, void* event);
void QLayout_CustomEventDefault(void* ptr, void* event);
int QLayoutItem_Alignment(void* ptr);
int QLayoutItem_ControlTypes(void* ptr);
int QLayoutItem_ControlTypesDefault(void* ptr);
int QLayoutItem_ExpandingDirections(void* ptr);
void* QLayoutItem_Geometry(void* ptr);
int QLayoutItem_HasHeightForWidth(void* ptr);
int QLayoutItem_HasHeightForWidthDefault(void* ptr);
int QLayoutItem_HeightForWidth(void* ptr, int w);
int QLayoutItem_HeightForWidthDefault(void* ptr, int w);
void QLayoutItem_Invalidate(void* ptr);
void QLayoutItem_InvalidateDefault(void* ptr);
int QLayoutItem_IsEmpty(void* ptr);
void* QLayoutItem_Layout(void* ptr);
void* QLayoutItem_LayoutDefault(void* ptr);
void* QLayoutItem_MaximumSize(void* ptr);
int QLayoutItem_MinimumHeightForWidth(void* ptr, int w);
int QLayoutItem_MinimumHeightForWidthDefault(void* ptr, int w);
void* QLayoutItem_MinimumSize(void* ptr);
void QLayoutItem_SetAlignment(void* ptr, int alignment);
void QLayoutItem_SetGeometry(void* ptr, void* r);
void* QLayoutItem_SizeHint(void* ptr);
void* QLayoutItem_SpacerItem(void* ptr);
void* QLayoutItem_SpacerItemDefault(void* ptr);
void* QLayoutItem_Widget(void* ptr);
void* QLayoutItem_WidgetDefault(void* ptr);
void QLayoutItem_DestroyQLayoutItem(void* ptr);
char* QLayoutItem_ObjectNameAbs(void* ptr);
void QLayoutItem_SetObjectNameAbs(void* ptr, char* name);
int QLineEdit_Alignment(void* ptr);
int QLineEdit_CursorMoveStyle(void* ptr);
int QLineEdit_CursorPosition(void* ptr);
char* QLineEdit_DisplayText(void* ptr);
int QLineEdit_DragEnabled(void* ptr);
int QLineEdit_EchoMode(void* ptr);
int QLineEdit_HasAcceptableInput(void* ptr);
int QLineEdit_HasFrame(void* ptr);
int QLineEdit_HasSelectedText(void* ptr);
char* QLineEdit_InputMask(void* ptr);
int QLineEdit_IsClearButtonEnabled(void* ptr);
int QLineEdit_IsModified(void* ptr);
int QLineEdit_IsReadOnly(void* ptr);
int QLineEdit_IsRedoAvailable(void* ptr);
int QLineEdit_IsUndoAvailable(void* ptr);
int QLineEdit_MaxLength(void* ptr);
char* QLineEdit_PlaceholderText(void* ptr);
char* QLineEdit_SelectedText(void* ptr);
void QLineEdit_SetAlignment(void* ptr, int flag);
void QLineEdit_SetClearButtonEnabled(void* ptr, int enable);
void QLineEdit_SetCursorMoveStyle(void* ptr, int style);
void QLineEdit_SetCursorPosition(void* ptr, int v);
void QLineEdit_SetDragEnabled(void* ptr, int b);
void QLineEdit_SetEchoMode(void* ptr, int v);
void QLineEdit_SetFrame(void* ptr, int v);
void QLineEdit_SetInputMask(void* ptr, char* inputMask);
void QLineEdit_SetMaxLength(void* ptr, int v);
void QLineEdit_SetModified(void* ptr, int v);
void QLineEdit_SetPlaceholderText(void* ptr, char* v);
void QLineEdit_SetReadOnly(void* ptr, int v);
void QLineEdit_SetText(void* ptr, char* v);
char* QLineEdit_Text(void* ptr);
void* QLineEdit_NewQLineEdit(void* parent);
void* QLineEdit_NewQLineEdit2(char* contents, void* parent);
void* QLineEdit_AddAction2(void* ptr, void* icon, int position);
void QLineEdit_AddAction(void* ptr, void* action, int position);
void QLineEdit_Backspace(void* ptr);
void QLineEdit_ChangeEvent(void* ptr, void* ev);
void QLineEdit_ChangeEventDefault(void* ptr, void* ev);
void QLineEdit_Clear(void* ptr);
void* QLineEdit_Completer(void* ptr);
void QLineEdit_ContextMenuEvent(void* ptr, void* event);
void QLineEdit_ContextMenuEventDefault(void* ptr, void* event);
void QLineEdit_Copy(void* ptr);
void* QLineEdit_CreateStandardContextMenu(void* ptr);
void QLineEdit_CursorBackward(void* ptr, int mark, int steps);
void QLineEdit_CursorForward(void* ptr, int mark, int steps);
int QLineEdit_CursorPositionAt(void* ptr, void* pos);
void QLineEdit_ConnectCursorPositionChanged(void* ptr);
void QLineEdit_DisconnectCursorPositionChanged(void* ptr);
void QLineEdit_CursorPositionChanged(void* ptr, int old, int n);
void QLineEdit_CursorWordBackward(void* ptr, int mark);
void QLineEdit_CursorWordForward(void* ptr, int mark);
void QLineEdit_Cut(void* ptr);
void QLineEdit_Del(void* ptr);
void QLineEdit_Deselect(void* ptr);
void QLineEdit_DragEnterEvent(void* ptr, void* e);
void QLineEdit_DragEnterEventDefault(void* ptr, void* e);
void QLineEdit_DragLeaveEvent(void* ptr, void* e);
void QLineEdit_DragLeaveEventDefault(void* ptr, void* e);
void QLineEdit_DragMoveEvent(void* ptr, void* e);
void QLineEdit_DragMoveEventDefault(void* ptr, void* e);
void QLineEdit_DropEvent(void* ptr, void* e);
void QLineEdit_DropEventDefault(void* ptr, void* e);
void QLineEdit_ConnectEditingFinished(void* ptr);
void QLineEdit_DisconnectEditingFinished(void* ptr);
void QLineEdit_EditingFinished(void* ptr);
void QLineEdit_End(void* ptr, int mark);
int QLineEdit_Event(void* ptr, void* e);
int QLineEdit_EventDefault(void* ptr, void* e);
void QLineEdit_FocusInEvent(void* ptr, void* e);
void QLineEdit_FocusInEventDefault(void* ptr, void* e);
void QLineEdit_FocusOutEvent(void* ptr, void* e);
void QLineEdit_FocusOutEventDefault(void* ptr, void* e);
void QLineEdit_GetTextMargins(void* ptr, int left, int top, int right, int bottom);
void QLineEdit_Home(void* ptr, int mark);
void QLineEdit_InputMethodEvent(void* ptr, void* e);
void QLineEdit_InputMethodEventDefault(void* ptr, void* e);
void* QLineEdit_InputMethodQuery(void* ptr, int property);
void* QLineEdit_InputMethodQueryDefault(void* ptr, int property);
void QLineEdit_KeyPressEvent(void* ptr, void* event);
void QLineEdit_KeyPressEventDefault(void* ptr, void* event);
void* QLineEdit_MinimumSizeHint(void* ptr);
void* QLineEdit_MinimumSizeHintDefault(void* ptr);
void QLineEdit_MouseDoubleClickEvent(void* ptr, void* e);
void QLineEdit_MouseDoubleClickEventDefault(void* ptr, void* e);
void QLineEdit_MouseMoveEvent(void* ptr, void* e);
void QLineEdit_MouseMoveEventDefault(void* ptr, void* e);
void QLineEdit_MousePressEvent(void* ptr, void* e);
void QLineEdit_MousePressEventDefault(void* ptr, void* e);
void QLineEdit_MouseReleaseEvent(void* ptr, void* e);
void QLineEdit_MouseReleaseEventDefault(void* ptr, void* e);
void QLineEdit_PaintEvent(void* ptr, void* v);
void QLineEdit_PaintEventDefault(void* ptr, void* v);
void QLineEdit_Paste(void* ptr);
void QLineEdit_Redo(void* ptr);
void QLineEdit_ConnectReturnPressed(void* ptr);
void QLineEdit_DisconnectReturnPressed(void* ptr);
void QLineEdit_ReturnPressed(void* ptr);
void QLineEdit_SelectAll(void* ptr);
void QLineEdit_ConnectSelectionChanged(void* ptr);
void QLineEdit_DisconnectSelectionChanged(void* ptr);
void QLineEdit_SelectionChanged(void* ptr);
int QLineEdit_SelectionStart(void* ptr);
void QLineEdit_SetCompleter(void* ptr, void* c);
void QLineEdit_SetSelection(void* ptr, int start, int length);
void QLineEdit_SetTextMargins2(void* ptr, void* margins);
void QLineEdit_SetTextMargins(void* ptr, int left, int top, int right, int bottom);
void QLineEdit_SetValidator(void* ptr, void* v);
void* QLineEdit_SizeHint(void* ptr);
void* QLineEdit_SizeHintDefault(void* ptr);
void QLineEdit_ConnectTextChanged(void* ptr);
void QLineEdit_DisconnectTextChanged(void* ptr);
void QLineEdit_TextChanged(void* ptr, char* text);
void QLineEdit_ConnectTextEdited(void* ptr);
void QLineEdit_DisconnectTextEdited(void* ptr);
void QLineEdit_TextEdited(void* ptr, char* text);
void QLineEdit_Undo(void* ptr);
void* QLineEdit_Validator(void* ptr);
void QLineEdit_DestroyQLineEdit(void* ptr);
void QLineEdit_ActionEvent(void* ptr, void* event);
void QLineEdit_ActionEventDefault(void* ptr, void* event);
void QLineEdit_EnterEvent(void* ptr, void* event);
void QLineEdit_EnterEventDefault(void* ptr, void* event);
void QLineEdit_HideEvent(void* ptr, void* event);
void QLineEdit_HideEventDefault(void* ptr, void* event);
void QLineEdit_LeaveEvent(void* ptr, void* event);
void QLineEdit_LeaveEventDefault(void* ptr, void* event);
void QLineEdit_MoveEvent(void* ptr, void* event);
void QLineEdit_MoveEventDefault(void* ptr, void* event);
void QLineEdit_SetVisible(void* ptr, int visible);
void QLineEdit_SetVisibleDefault(void* ptr, int visible);
void QLineEdit_ShowEvent(void* ptr, void* event);
void QLineEdit_ShowEventDefault(void* ptr, void* event);
void QLineEdit_CloseEvent(void* ptr, void* event);
void QLineEdit_CloseEventDefault(void* ptr, void* event);
void QLineEdit_InitPainter(void* ptr, void* painter);
void QLineEdit_InitPainterDefault(void* ptr, void* painter);
void QLineEdit_KeyReleaseEvent(void* ptr, void* event);
void QLineEdit_KeyReleaseEventDefault(void* ptr, void* event);
void QLineEdit_ResizeEvent(void* ptr, void* event);
void QLineEdit_ResizeEventDefault(void* ptr, void* event);
void QLineEdit_TabletEvent(void* ptr, void* event);
void QLineEdit_TabletEventDefault(void* ptr, void* event);
void QLineEdit_WheelEvent(void* ptr, void* event);
void QLineEdit_WheelEventDefault(void* ptr, void* event);
void QLineEdit_TimerEvent(void* ptr, void* event);
void QLineEdit_TimerEventDefault(void* ptr, void* event);
void QLineEdit_ChildEvent(void* ptr, void* event);
void QLineEdit_ChildEventDefault(void* ptr, void* event);
void QLineEdit_CustomEvent(void* ptr, void* event);
void QLineEdit_CustomEventDefault(void* ptr, void* event);
int QListView_BatchSize(void* ptr);
int QListView_Flow(void* ptr);
void* QListView_GridSize(void* ptr);
int QListView_IsSelectionRectVisible(void* ptr);
int QListView_IsWrapping(void* ptr);
int QListView_LayoutMode(void* ptr);
int QListView_ModelColumn(void* ptr);
int QListView_Movement(void* ptr);
int QListView_ResizeMode(void* ptr);
void QListView_SetBatchSize(void* ptr, int batchSize);
void QListView_SetFlow(void* ptr, int flow);
void QListView_SetGridSize(void* ptr, void* size);
void QListView_SetLayoutMode(void* ptr, int mode);
void QListView_SetModelColumn(void* ptr, int column);
void QListView_SetMovement(void* ptr, int movement);
void QListView_SetResizeMode(void* ptr, int mode);
void QListView_SetSelectionRectVisible(void* ptr, int show);
void QListView_SetSpacing(void* ptr, int space);
void QListView_SetUniformItemSizes(void* ptr, int enable);
void QListView_SetViewMode(void* ptr, int mode);
void QListView_SetWordWrap(void* ptr, int on);
void QListView_SetWrapping(void* ptr, int enable);
int QListView_Spacing(void* ptr);
int QListView_UniformItemSizes(void* ptr);
int QListView_ViewMode(void* ptr);
int QListView_WordWrap(void* ptr);
void* QListView_NewQListView(void* parent);
void QListView_ClearPropertyFlags(void* ptr);
void QListView_CurrentChanged(void* ptr, void* current, void* previous);
void QListView_CurrentChangedDefault(void* ptr, void* current, void* previous);
void QListView_DragLeaveEvent(void* ptr, void* e);
void QListView_DragLeaveEventDefault(void* ptr, void* e);
void QListView_DragMoveEvent(void* ptr, void* e);
void QListView_DragMoveEventDefault(void* ptr, void* e);
void QListView_DropEvent(void* ptr, void* e);
void QListView_DropEventDefault(void* ptr, void* e);
int QListView_Event(void* ptr, void* e);
int QListView_EventDefault(void* ptr, void* e);
int QListView_HorizontalOffset(void* ptr);
int QListView_HorizontalOffsetDefault(void* ptr);
void* QListView_IndexAt(void* ptr, void* p);
void* QListView_IndexAtDefault(void* ptr, void* p);
int QListView_IsIndexHidden(void* ptr, void* index);
int QListView_IsIndexHiddenDefault(void* ptr, void* index);
int QListView_IsRowHidden(void* ptr, int row);
void QListView_MouseMoveEvent(void* ptr, void* e);
void QListView_MouseMoveEventDefault(void* ptr, void* e);
void QListView_MouseReleaseEvent(void* ptr, void* e);
void QListView_MouseReleaseEventDefault(void* ptr, void* e);
void* QListView_MoveCursor(void* ptr, int cursorAction, int modifiers);
void* QListView_MoveCursorDefault(void* ptr, int cursorAction, int modifiers);
void QListView_PaintEvent(void* ptr, void* e);
void QListView_PaintEventDefault(void* ptr, void* e);
void QListView_ResizeEvent(void* ptr, void* e);
void QListView_ResizeEventDefault(void* ptr, void* e);
void QListView_RowsAboutToBeRemoved(void* ptr, void* parent, int start, int end);
void QListView_RowsAboutToBeRemovedDefault(void* ptr, void* parent, int start, int end);
void QListView_RowsInserted(void* ptr, void* parent, int start, int end);
void QListView_RowsInsertedDefault(void* ptr, void* parent, int start, int end);
void QListView_ScrollTo(void* ptr, void* index, int hint);
void QListView_ScrollToDefault(void* ptr, void* index, int hint);
void QListView_SetRowHidden(void* ptr, int row, int hide);
void QListView_SetSelection(void* ptr, void* rect, int command);
void QListView_SetSelectionDefault(void* ptr, void* rect, int command);
void QListView_StartDrag(void* ptr, int supportedActions);
void QListView_StartDragDefault(void* ptr, int supportedActions);
void QListView_TimerEvent(void* ptr, void* e);
void QListView_TimerEventDefault(void* ptr, void* e);
void QListView_UpdateGeometries(void* ptr);
void QListView_UpdateGeometriesDefault(void* ptr);
int QListView_VerticalOffset(void* ptr);
int QListView_VerticalOffsetDefault(void* ptr);
void* QListView_ViewportSizeHint(void* ptr);
void* QListView_ViewportSizeHintDefault(void* ptr);
void* QListView_VisualRect(void* ptr, void* index);
void* QListView_VisualRectDefault(void* ptr, void* index);
void* QListView_VisualRegionForSelection(void* ptr, void* selection);
void* QListView_VisualRegionForSelectionDefault(void* ptr, void* selection);
void QListView_DestroyQListView(void* ptr);
void QListView_CloseEditor(void* ptr, void* editor, int hint);
void QListView_CloseEditorDefault(void* ptr, void* editor, int hint);
void QListView_CommitData(void* ptr, void* editor);
void QListView_CommitDataDefault(void* ptr, void* editor);
void QListView_DragEnterEvent(void* ptr, void* event);
void QListView_DragEnterEventDefault(void* ptr, void* event);
void QListView_EditorDestroyed(void* ptr, void* editor);
void QListView_EditorDestroyedDefault(void* ptr, void* editor);
void QListView_FocusInEvent(void* ptr, void* event);
void QListView_FocusInEventDefault(void* ptr, void* event);
void QListView_FocusOutEvent(void* ptr, void* event);
void QListView_FocusOutEventDefault(void* ptr, void* event);
void QListView_InputMethodEvent(void* ptr, void* event);
void QListView_InputMethodEventDefault(void* ptr, void* event);
void QListView_KeyPressEvent(void* ptr, void* event);
void QListView_KeyPressEventDefault(void* ptr, void* event);
void QListView_KeyboardSearch(void* ptr, char* search);
void QListView_KeyboardSearchDefault(void* ptr, char* search);
void QListView_MouseDoubleClickEvent(void* ptr, void* event);
void QListView_MouseDoubleClickEventDefault(void* ptr, void* event);
void QListView_MousePressEvent(void* ptr, void* event);
void QListView_MousePressEventDefault(void* ptr, void* event);
void QListView_Reset(void* ptr);
void QListView_ResetDefault(void* ptr);
void QListView_SelectAll(void* ptr);
void QListView_SelectAllDefault(void* ptr);
void QListView_SetModel(void* ptr, void* model);
void QListView_SetModelDefault(void* ptr, void* model);
void QListView_SetRootIndex(void* ptr, void* index);
void QListView_SetRootIndexDefault(void* ptr, void* index);
void QListView_SetSelectionModel(void* ptr, void* selectionModel);
void QListView_SetSelectionModelDefault(void* ptr, void* selectionModel);
void QListView_ContextMenuEvent(void* ptr, void* e);
void QListView_ContextMenuEventDefault(void* ptr, void* e);
void QListView_ScrollContentsBy(void* ptr, int dx, int dy);
void QListView_ScrollContentsByDefault(void* ptr, int dx, int dy);
void QListView_SetupViewport(void* ptr, void* viewport);
void QListView_SetupViewportDefault(void* ptr, void* viewport);
void QListView_WheelEvent(void* ptr, void* e);
void QListView_WheelEventDefault(void* ptr, void* e);
void QListView_ChangeEvent(void* ptr, void* ev);
void QListView_ChangeEventDefault(void* ptr, void* ev);
void QListView_ActionEvent(void* ptr, void* event);
void QListView_ActionEventDefault(void* ptr, void* event);
void QListView_EnterEvent(void* ptr, void* event);
void QListView_EnterEventDefault(void* ptr, void* event);
void QListView_HideEvent(void* ptr, void* event);
void QListView_HideEventDefault(void* ptr, void* event);
void QListView_LeaveEvent(void* ptr, void* event);
void QListView_LeaveEventDefault(void* ptr, void* event);
void QListView_MoveEvent(void* ptr, void* event);
void QListView_MoveEventDefault(void* ptr, void* event);
void QListView_SetVisible(void* ptr, int visible);
void QListView_SetVisibleDefault(void* ptr, int visible);
void QListView_ShowEvent(void* ptr, void* event);
void QListView_ShowEventDefault(void* ptr, void* event);
void QListView_CloseEvent(void* ptr, void* event);
void QListView_CloseEventDefault(void* ptr, void* event);
void QListView_InitPainter(void* ptr, void* painter);
void QListView_InitPainterDefault(void* ptr, void* painter);
void QListView_KeyReleaseEvent(void* ptr, void* event);
void QListView_KeyReleaseEventDefault(void* ptr, void* event);
void QListView_TabletEvent(void* ptr, void* event);
void QListView_TabletEventDefault(void* ptr, void* event);
void QListView_ChildEvent(void* ptr, void* event);
void QListView_ChildEventDefault(void* ptr, void* event);
void QListView_CustomEvent(void* ptr, void* event);
void QListView_CustomEventDefault(void* ptr, void* event);
int QListWidget_Count(void* ptr);
int QListWidget_CurrentRow(void* ptr);
int QListWidget_IsSortingEnabled(void* ptr);
void QListWidget_SetCurrentRow(void* ptr, int row);
void QListWidget_SetSortingEnabled(void* ptr, int enable);
void* QListWidget_NewQListWidget(void* parent);
void QListWidget_AddItem2(void* ptr, void* item);
void QListWidget_AddItem(void* ptr, char* label);
void QListWidget_AddItems(void* ptr, char* labels);
void QListWidget_Clear(void* ptr);
void QListWidget_ClosePersistentEditor(void* ptr, void* item);
void* QListWidget_CurrentItem(void* ptr);
void QListWidget_ConnectCurrentItemChanged(void* ptr);
void QListWidget_DisconnectCurrentItemChanged(void* ptr);
void QListWidget_CurrentItemChanged(void* ptr, void* current, void* previous);
void QListWidget_ConnectCurrentRowChanged(void* ptr);
void QListWidget_DisconnectCurrentRowChanged(void* ptr);
void QListWidget_CurrentRowChanged(void* ptr, int currentRow);
void QListWidget_ConnectCurrentTextChanged(void* ptr);
void QListWidget_DisconnectCurrentTextChanged(void* ptr);
void QListWidget_CurrentTextChanged(void* ptr, char* currentText);
void QListWidget_DropEvent(void* ptr, void* event);
void QListWidget_DropEventDefault(void* ptr, void* event);
int QListWidget_DropMimeData(void* ptr, int index, void* data, int action);
int QListWidget_DropMimeDataDefault(void* ptr, int index, void* data, int action);
void QListWidget_EditItem(void* ptr, void* item);
int QListWidget_Event(void* ptr, void* e);
int QListWidget_EventDefault(void* ptr, void* e);
void QListWidget_InsertItem(void* ptr, int row, void* item);
void QListWidget_InsertItem2(void* ptr, int row, char* label);
void QListWidget_InsertItems(void* ptr, int row, char* labels);
void* QListWidget_Item(void* ptr, int row);
void QListWidget_ConnectItemActivated(void* ptr);
void QListWidget_DisconnectItemActivated(void* ptr);
void QListWidget_ItemActivated(void* ptr, void* item);
void* QListWidget_ItemAt(void* ptr, void* p);
void* QListWidget_ItemAt2(void* ptr, int x, int y);
void QListWidget_ConnectItemChanged(void* ptr);
void QListWidget_DisconnectItemChanged(void* ptr);
void QListWidget_ItemChanged(void* ptr, void* item);
void QListWidget_ConnectItemClicked(void* ptr);
void QListWidget_DisconnectItemClicked(void* ptr);
void QListWidget_ItemClicked(void* ptr, void* item);
void QListWidget_ConnectItemDoubleClicked(void* ptr);
void QListWidget_DisconnectItemDoubleClicked(void* ptr);
void QListWidget_ItemDoubleClicked(void* ptr, void* item);
void QListWidget_ConnectItemEntered(void* ptr);
void QListWidget_DisconnectItemEntered(void* ptr);
void QListWidget_ItemEntered(void* ptr, void* item);
void QListWidget_ConnectItemPressed(void* ptr);
void QListWidget_DisconnectItemPressed(void* ptr);
void QListWidget_ItemPressed(void* ptr, void* item);
void QListWidget_ConnectItemSelectionChanged(void* ptr);
void QListWidget_DisconnectItemSelectionChanged(void* ptr);
void QListWidget_ItemSelectionChanged(void* ptr);
void* QListWidget_ItemWidget(void* ptr, void* item);
char* QListWidget_MimeTypes(void* ptr);
char* QListWidget_MimeTypesDefault(void* ptr);
void QListWidget_OpenPersistentEditor(void* ptr, void* item);
void QListWidget_RemoveItemWidget(void* ptr, void* item);
int QListWidget_Row(void* ptr, void* item);
void QListWidget_ScrollToItem(void* ptr, void* item, int hint);
void QListWidget_SetCurrentItem(void* ptr, void* item);
void QListWidget_SetCurrentItem2(void* ptr, void* item, int command);
void QListWidget_SetCurrentRow2(void* ptr, int row, int command);
void QListWidget_SetItemWidget(void* ptr, void* item, void* widget);
void QListWidget_SortItems(void* ptr, int order);
int QListWidget_SupportedDropActions(void* ptr);
int QListWidget_SupportedDropActionsDefault(void* ptr);
void* QListWidget_TakeItem(void* ptr, int row);
void* QListWidget_VisualItemRect(void* ptr, void* item);
void QListWidget_DestroyQListWidget(void* ptr);
void QListWidget_CurrentChanged(void* ptr, void* current, void* previous);
void QListWidget_CurrentChangedDefault(void* ptr, void* current, void* previous);
void QListWidget_DragLeaveEvent(void* ptr, void* e);
void QListWidget_DragLeaveEventDefault(void* ptr, void* e);
void QListWidget_DragMoveEvent(void* ptr, void* e);
void QListWidget_DragMoveEventDefault(void* ptr, void* e);
void QListWidget_MouseMoveEvent(void* ptr, void* e);
void QListWidget_MouseMoveEventDefault(void* ptr, void* e);
void QListWidget_MouseReleaseEvent(void* ptr, void* e);
void QListWidget_MouseReleaseEventDefault(void* ptr, void* e);
void QListWidget_PaintEvent(void* ptr, void* e);
void QListWidget_PaintEventDefault(void* ptr, void* e);
void QListWidget_ResizeEvent(void* ptr, void* e);
void QListWidget_ResizeEventDefault(void* ptr, void* e);
void QListWidget_RowsAboutToBeRemoved(void* ptr, void* parent, int start, int end);
void QListWidget_RowsAboutToBeRemovedDefault(void* ptr, void* parent, int start, int end);
void QListWidget_RowsInserted(void* ptr, void* parent, int start, int end);
void QListWidget_RowsInsertedDefault(void* ptr, void* parent, int start, int end);
void QListWidget_ScrollTo(void* ptr, void* index, int hint);
void QListWidget_ScrollToDefault(void* ptr, void* index, int hint);
void QListWidget_SetSelection(void* ptr, void* rect, int command);
void QListWidget_SetSelectionDefault(void* ptr, void* rect, int command);
void QListWidget_StartDrag(void* ptr, int supportedActions);
void QListWidget_StartDragDefault(void* ptr, int supportedActions);
void QListWidget_TimerEvent(void* ptr, void* e);
void QListWidget_TimerEventDefault(void* ptr, void* e);
void QListWidget_UpdateGeometries(void* ptr);
void QListWidget_UpdateGeometriesDefault(void* ptr);
void QListWidget_CloseEditor(void* ptr, void* editor, int hint);
void QListWidget_CloseEditorDefault(void* ptr, void* editor, int hint);
void QListWidget_CommitData(void* ptr, void* editor);
void QListWidget_CommitDataDefault(void* ptr, void* editor);
void QListWidget_DragEnterEvent(void* ptr, void* event);
void QListWidget_DragEnterEventDefault(void* ptr, void* event);
void QListWidget_EditorDestroyed(void* ptr, void* editor);
void QListWidget_EditorDestroyedDefault(void* ptr, void* editor);
void QListWidget_FocusInEvent(void* ptr, void* event);
void QListWidget_FocusInEventDefault(void* ptr, void* event);
void QListWidget_FocusOutEvent(void* ptr, void* event);
void QListWidget_FocusOutEventDefault(void* ptr, void* event);
void QListWidget_InputMethodEvent(void* ptr, void* event);
void QListWidget_InputMethodEventDefault(void* ptr, void* event);
void QListWidget_KeyPressEvent(void* ptr, void* event);
void QListWidget_KeyPressEventDefault(void* ptr, void* event);
void QListWidget_KeyboardSearch(void* ptr, char* search);
void QListWidget_KeyboardSearchDefault(void* ptr, char* search);
void QListWidget_MouseDoubleClickEvent(void* ptr, void* event);
void QListWidget_MouseDoubleClickEventDefault(void* ptr, void* event);
void QListWidget_MousePressEvent(void* ptr, void* event);
void QListWidget_MousePressEventDefault(void* ptr, void* event);
void QListWidget_Reset(void* ptr);
void QListWidget_ResetDefault(void* ptr);
void QListWidget_SelectAll(void* ptr);
void QListWidget_SelectAllDefault(void* ptr);
void QListWidget_SetRootIndex(void* ptr, void* index);
void QListWidget_SetRootIndexDefault(void* ptr, void* index);
void QListWidget_SetSelectionModel(void* ptr, void* selectionModel);
void QListWidget_SetSelectionModelDefault(void* ptr, void* selectionModel);
void QListWidget_ContextMenuEvent(void* ptr, void* e);
void QListWidget_ContextMenuEventDefault(void* ptr, void* e);
void QListWidget_ScrollContentsBy(void* ptr, int dx, int dy);
void QListWidget_ScrollContentsByDefault(void* ptr, int dx, int dy);
void QListWidget_SetupViewport(void* ptr, void* viewport);
void QListWidget_SetupViewportDefault(void* ptr, void* viewport);
void QListWidget_WheelEvent(void* ptr, void* e);
void QListWidget_WheelEventDefault(void* ptr, void* e);
void QListWidget_ChangeEvent(void* ptr, void* ev);
void QListWidget_ChangeEventDefault(void* ptr, void* ev);
void QListWidget_ActionEvent(void* ptr, void* event);
void QListWidget_ActionEventDefault(void* ptr, void* event);
void QListWidget_EnterEvent(void* ptr, void* event);
void QListWidget_EnterEventDefault(void* ptr, void* event);
void QListWidget_HideEvent(void* ptr, void* event);
void QListWidget_HideEventDefault(void* ptr, void* event);
void QListWidget_LeaveEvent(void* ptr, void* event);
void QListWidget_LeaveEventDefault(void* ptr, void* event);
void QListWidget_MoveEvent(void* ptr, void* event);
void QListWidget_MoveEventDefault(void* ptr, void* event);
void QListWidget_SetVisible(void* ptr, int visible);
void QListWidget_SetVisibleDefault(void* ptr, int visible);
void QListWidget_ShowEvent(void* ptr, void* event);
void QListWidget_ShowEventDefault(void* ptr, void* event);
void QListWidget_CloseEvent(void* ptr, void* event);
void QListWidget_CloseEventDefault(void* ptr, void* event);
void QListWidget_InitPainter(void* ptr, void* painter);
void QListWidget_InitPainterDefault(void* ptr, void* painter);
void QListWidget_KeyReleaseEvent(void* ptr, void* event);
void QListWidget_KeyReleaseEventDefault(void* ptr, void* event);
void QListWidget_TabletEvent(void* ptr, void* event);
void QListWidget_TabletEventDefault(void* ptr, void* event);
void QListWidget_ChildEvent(void* ptr, void* event);
void QListWidget_ChildEventDefault(void* ptr, void* event);
void QListWidget_CustomEvent(void* ptr, void* event);
void QListWidget_CustomEventDefault(void* ptr, void* event);
void* QListWidgetItem_NewQListWidgetItem(void* parent, int ty);
void* QListWidgetItem_NewQListWidgetItem3(void* icon, char* text, void* parent, int ty);
void* QListWidgetItem_NewQListWidgetItem2(char* text, void* parent, int ty);
void QListWidgetItem_SetFlags(void* ptr, int flags);
void* QListWidgetItem_NewQListWidgetItem4(void* other);
void* QListWidgetItem_Background(void* ptr);
int QListWidgetItem_CheckState(void* ptr);
void* QListWidgetItem_Clone(void* ptr);
void* QListWidgetItem_CloneDefault(void* ptr);
void* QListWidgetItem_Data(void* ptr, int role);
void* QListWidgetItem_DataDefault(void* ptr, int role);
int QListWidgetItem_Flags(void* ptr);
void* QListWidgetItem_Foreground(void* ptr);
void* QListWidgetItem_Icon(void* ptr);
int QListWidgetItem_IsHidden(void* ptr);
int QListWidgetItem_IsSelected(void* ptr);
void* QListWidgetItem_ListWidget(void* ptr);
void QListWidgetItem_SetBackground(void* ptr, void* brush);
void QListWidgetItem_SetCheckState(void* ptr, int state);
void QListWidgetItem_SetData(void* ptr, int role, void* value);
void QListWidgetItem_SetDataDefault(void* ptr, int role, void* value);
void QListWidgetItem_SetFont(void* ptr, void* font);
void QListWidgetItem_SetForeground(void* ptr, void* brush);
void QListWidgetItem_SetHidden(void* ptr, int hide);
void QListWidgetItem_SetIcon(void* ptr, void* icon);
void QListWidgetItem_SetSelected(void* ptr, int sele);
void QListWidgetItem_SetSizeHint(void* ptr, void* size);
void QListWidgetItem_SetStatusTip(void* ptr, char* statusTip);
void QListWidgetItem_SetText(void* ptr, char* text);
void QListWidgetItem_SetTextAlignment(void* ptr, int alignment);
void QListWidgetItem_SetToolTip(void* ptr, char* toolTip);
void QListWidgetItem_SetWhatsThis(void* ptr, char* whatsThis);
void* QListWidgetItem_SizeHint(void* ptr);
char* QListWidgetItem_StatusTip(void* ptr);
char* QListWidgetItem_Text(void* ptr);
int QListWidgetItem_TextAlignment(void* ptr);
char* QListWidgetItem_ToolTip(void* ptr);
int QListWidgetItem_Type(void* ptr);
char* QListWidgetItem_WhatsThis(void* ptr);
void QListWidgetItem_DestroyQListWidgetItem(void* ptr);
char* QListWidgetItem_ObjectNameAbs(void* ptr);
void QListWidgetItem_SetObjectNameAbs(void* ptr, char* name);
void QMacCocoaViewContainer_DestroyQMacCocoaViewContainer(void* ptr);
void QMacCocoaViewContainer_ActionEvent(void* ptr, void* event);
void QMacCocoaViewContainer_ActionEventDefault(void* ptr, void* event);
void QMacCocoaViewContainer_DragEnterEvent(void* ptr, void* event);
void QMacCocoaViewContainer_DragEnterEventDefault(void* ptr, void* event);
void QMacCocoaViewContainer_DragLeaveEvent(void* ptr, void* event);
void QMacCocoaViewContainer_DragLeaveEventDefault(void* ptr, void* event);
void QMacCocoaViewContainer_DragMoveEvent(void* ptr, void* event);
void QMacCocoaViewContainer_DragMoveEventDefault(void* ptr, void* event);
void QMacCocoaViewContainer_DropEvent(void* ptr, void* event);
void QMacCocoaViewContainer_DropEventDefault(void* ptr, void* event);
void QMacCocoaViewContainer_EnterEvent(void* ptr, void* event);
void QMacCocoaViewContainer_EnterEventDefault(void* ptr, void* event);
void QMacCocoaViewContainer_FocusInEvent(void* ptr, void* event);
void QMacCocoaViewContainer_FocusInEventDefault(void* ptr, void* event);
void QMacCocoaViewContainer_FocusOutEvent(void* ptr, void* event);
void QMacCocoaViewContainer_FocusOutEventDefault(void* ptr, void* event);
void QMacCocoaViewContainer_HideEvent(void* ptr, void* event);
void QMacCocoaViewContainer_HideEventDefault(void* ptr, void* event);
void QMacCocoaViewContainer_LeaveEvent(void* ptr, void* event);
void QMacCocoaViewContainer_LeaveEventDefault(void* ptr, void* event);
void QMacCocoaViewContainer_MoveEvent(void* ptr, void* event);
void QMacCocoaViewContainer_MoveEventDefault(void* ptr, void* event);
void QMacCocoaViewContainer_PaintEvent(void* ptr, void* event);
void QMacCocoaViewContainer_PaintEventDefault(void* ptr, void* event);
void QMacCocoaViewContainer_SetVisible(void* ptr, int visible);
void QMacCocoaViewContainer_SetVisibleDefault(void* ptr, int visible);
void QMacCocoaViewContainer_ShowEvent(void* ptr, void* event);
void QMacCocoaViewContainer_ShowEventDefault(void* ptr, void* event);
void QMacCocoaViewContainer_ChangeEvent(void* ptr, void* event);
void QMacCocoaViewContainer_ChangeEventDefault(void* ptr, void* event);
void QMacCocoaViewContainer_CloseEvent(void* ptr, void* event);
void QMacCocoaViewContainer_CloseEventDefault(void* ptr, void* event);
void QMacCocoaViewContainer_ContextMenuEvent(void* ptr, void* event);
void QMacCocoaViewContainer_ContextMenuEventDefault(void* ptr, void* event);
void QMacCocoaViewContainer_InitPainter(void* ptr, void* painter);
void QMacCocoaViewContainer_InitPainterDefault(void* ptr, void* painter);
void QMacCocoaViewContainer_InputMethodEvent(void* ptr, void* event);
void QMacCocoaViewContainer_InputMethodEventDefault(void* ptr, void* event);
void QMacCocoaViewContainer_KeyPressEvent(void* ptr, void* event);
void QMacCocoaViewContainer_KeyPressEventDefault(void* ptr, void* event);
void QMacCocoaViewContainer_KeyReleaseEvent(void* ptr, void* event);
void QMacCocoaViewContainer_KeyReleaseEventDefault(void* ptr, void* event);
void QMacCocoaViewContainer_MouseDoubleClickEvent(void* ptr, void* event);
void QMacCocoaViewContainer_MouseDoubleClickEventDefault(void* ptr, void* event);
void QMacCocoaViewContainer_MouseMoveEvent(void* ptr, void* event);
void QMacCocoaViewContainer_MouseMoveEventDefault(void* ptr, void* event);
void QMacCocoaViewContainer_MousePressEvent(void* ptr, void* event);
void QMacCocoaViewContainer_MousePressEventDefault(void* ptr, void* event);
void QMacCocoaViewContainer_MouseReleaseEvent(void* ptr, void* event);
void QMacCocoaViewContainer_MouseReleaseEventDefault(void* ptr, void* event);
void QMacCocoaViewContainer_ResizeEvent(void* ptr, void* event);
void QMacCocoaViewContainer_ResizeEventDefault(void* ptr, void* event);
void QMacCocoaViewContainer_TabletEvent(void* ptr, void* event);
void QMacCocoaViewContainer_TabletEventDefault(void* ptr, void* event);
void QMacCocoaViewContainer_WheelEvent(void* ptr, void* event);
void QMacCocoaViewContainer_WheelEventDefault(void* ptr, void* event);
void QMacCocoaViewContainer_TimerEvent(void* ptr, void* event);
void QMacCocoaViewContainer_TimerEventDefault(void* ptr, void* event);
void QMacCocoaViewContainer_ChildEvent(void* ptr, void* event);
void QMacCocoaViewContainer_ChildEventDefault(void* ptr, void* event);
void QMacCocoaViewContainer_CustomEvent(void* ptr, void* event);
void QMacCocoaViewContainer_CustomEventDefault(void* ptr, void* event);
int QMacNativeWidget_Event(void* ptr, void* ev);
int QMacNativeWidget_EventDefault(void* ptr, void* ev);
void* QMacNativeWidget_SizeHint(void* ptr);
void* QMacNativeWidget_SizeHintDefault(void* ptr);
void QMacNativeWidget_DestroyQMacNativeWidget(void* ptr);
void QMacNativeWidget_ActionEvent(void* ptr, void* event);
void QMacNativeWidget_ActionEventDefault(void* ptr, void* event);
void QMacNativeWidget_DragEnterEvent(void* ptr, void* event);
void QMacNativeWidget_DragEnterEventDefault(void* ptr, void* event);
void QMacNativeWidget_DragLeaveEvent(void* ptr, void* event);
void QMacNativeWidget_DragLeaveEventDefault(void* ptr, void* event);
void QMacNativeWidget_DragMoveEvent(void* ptr, void* event);
void QMacNativeWidget_DragMoveEventDefault(void* ptr, void* event);
void QMacNativeWidget_DropEvent(void* ptr, void* event);
void QMacNativeWidget_DropEventDefault(void* ptr, void* event);
void QMacNativeWidget_EnterEvent(void* ptr, void* event);
void QMacNativeWidget_EnterEventDefault(void* ptr, void* event);
void QMacNativeWidget_FocusInEvent(void* ptr, void* event);
void QMacNativeWidget_FocusInEventDefault(void* ptr, void* event);
void QMacNativeWidget_FocusOutEvent(void* ptr, void* event);
void QMacNativeWidget_FocusOutEventDefault(void* ptr, void* event);
void QMacNativeWidget_HideEvent(void* ptr, void* event);
void QMacNativeWidget_HideEventDefault(void* ptr, void* event);
void QMacNativeWidget_LeaveEvent(void* ptr, void* event);
void QMacNativeWidget_LeaveEventDefault(void* ptr, void* event);
void QMacNativeWidget_MoveEvent(void* ptr, void* event);
void QMacNativeWidget_MoveEventDefault(void* ptr, void* event);
void QMacNativeWidget_PaintEvent(void* ptr, void* event);
void QMacNativeWidget_PaintEventDefault(void* ptr, void* event);
void QMacNativeWidget_SetVisible(void* ptr, int visible);
void QMacNativeWidget_SetVisibleDefault(void* ptr, int visible);
void QMacNativeWidget_ShowEvent(void* ptr, void* event);
void QMacNativeWidget_ShowEventDefault(void* ptr, void* event);
void QMacNativeWidget_ChangeEvent(void* ptr, void* event);
void QMacNativeWidget_ChangeEventDefault(void* ptr, void* event);
void QMacNativeWidget_CloseEvent(void* ptr, void* event);
void QMacNativeWidget_CloseEventDefault(void* ptr, void* event);
void QMacNativeWidget_ContextMenuEvent(void* ptr, void* event);
void QMacNativeWidget_ContextMenuEventDefault(void* ptr, void* event);
void QMacNativeWidget_InitPainter(void* ptr, void* painter);
void QMacNativeWidget_InitPainterDefault(void* ptr, void* painter);
void QMacNativeWidget_InputMethodEvent(void* ptr, void* event);
void QMacNativeWidget_InputMethodEventDefault(void* ptr, void* event);
void QMacNativeWidget_KeyPressEvent(void* ptr, void* event);
void QMacNativeWidget_KeyPressEventDefault(void* ptr, void* event);
void QMacNativeWidget_KeyReleaseEvent(void* ptr, void* event);
void QMacNativeWidget_KeyReleaseEventDefault(void* ptr, void* event);
void QMacNativeWidget_MouseDoubleClickEvent(void* ptr, void* event);
void QMacNativeWidget_MouseDoubleClickEventDefault(void* ptr, void* event);
void QMacNativeWidget_MouseMoveEvent(void* ptr, void* event);
void QMacNativeWidget_MouseMoveEventDefault(void* ptr, void* event);
void QMacNativeWidget_MousePressEvent(void* ptr, void* event);
void QMacNativeWidget_MousePressEventDefault(void* ptr, void* event);
void QMacNativeWidget_MouseReleaseEvent(void* ptr, void* event);
void QMacNativeWidget_MouseReleaseEventDefault(void* ptr, void* event);
void QMacNativeWidget_ResizeEvent(void* ptr, void* event);
void QMacNativeWidget_ResizeEventDefault(void* ptr, void* event);
void QMacNativeWidget_TabletEvent(void* ptr, void* event);
void QMacNativeWidget_TabletEventDefault(void* ptr, void* event);
void QMacNativeWidget_WheelEvent(void* ptr, void* event);
void QMacNativeWidget_WheelEventDefault(void* ptr, void* event);
void QMacNativeWidget_TimerEvent(void* ptr, void* event);
void QMacNativeWidget_TimerEventDefault(void* ptr, void* event);
void QMacNativeWidget_ChildEvent(void* ptr, void* event);
void QMacNativeWidget_ChildEventDefault(void* ptr, void* event);
void QMacNativeWidget_CustomEvent(void* ptr, void* event);
void QMacNativeWidget_CustomEventDefault(void* ptr, void* event);
int QMainWindow_DockOptions(void* ptr);
int QMainWindow_DocumentMode(void* ptr);
void* QMainWindow_IconSize(void* ptr);
int QMainWindow_IsAnimated(void* ptr);
int QMainWindow_IsDockNestingEnabled(void* ptr);
void QMainWindow_SetAnimated(void* ptr, int enabled);
void QMainWindow_SetDockNestingEnabled(void* ptr, int enabled);
void QMainWindow_SetDockOptions(void* ptr, int options);
void QMainWindow_SetDocumentMode(void* ptr, int enabled);
void QMainWindow_SetIconSize(void* ptr, void* iconSize);
void QMainWindow_SetTabShape(void* ptr, int tabShape);
void QMainWindow_SetToolButtonStyle(void* ptr, int toolButtonStyle);
void QMainWindow_SetUnifiedTitleAndToolBarOnMac(void* ptr, int set);
void QMainWindow_SplitDockWidget(void* ptr, void* first, void* second, int orientation);
int QMainWindow_TabShape(void* ptr);
void QMainWindow_TabifyDockWidget(void* ptr, void* first, void* second);
int QMainWindow_ToolButtonStyle(void* ptr);
int QMainWindow_UnifiedTitleAndToolBarOnMac(void* ptr);
void* QMainWindow_NewQMainWindow(void* parent, int flags);
void QMainWindow_AddDockWidget(void* ptr, int area, void* dockwidget);
void QMainWindow_AddDockWidget2(void* ptr, int area, void* dockwidget, int orientation);
void* QMainWindow_AddToolBar3(void* ptr, char* title);
void QMainWindow_AddToolBar2(void* ptr, void* toolbar);
void QMainWindow_AddToolBar(void* ptr, int area, void* toolbar);
void QMainWindow_AddToolBarBreak(void* ptr, int area);
void* QMainWindow_CentralWidget(void* ptr);
void QMainWindow_ContextMenuEvent(void* ptr, void* event);
void QMainWindow_ContextMenuEventDefault(void* ptr, void* event);
int QMainWindow_Corner(void* ptr, int corner);
void* QMainWindow_CreatePopupMenu(void* ptr);
void* QMainWindow_CreatePopupMenuDefault(void* ptr);
int QMainWindow_DockWidgetArea(void* ptr, void* dockwidget);
int QMainWindow_Event(void* ptr, void* event);
int QMainWindow_EventDefault(void* ptr, void* event);
void QMainWindow_ConnectIconSizeChanged(void* ptr);
void QMainWindow_DisconnectIconSizeChanged(void* ptr);
void QMainWindow_IconSizeChanged(void* ptr, void* iconSize);
void QMainWindow_InsertToolBar(void* ptr, void* before, void* toolbar);
void QMainWindow_InsertToolBarBreak(void* ptr, void* before);
void* QMainWindow_MenuBar(void* ptr);
void* QMainWindow_MenuWidget(void* ptr);
void QMainWindow_RemoveDockWidget(void* ptr, void* dockwidget);
void QMainWindow_RemoveToolBar(void* ptr, void* toolbar);
void QMainWindow_RemoveToolBarBreak(void* ptr, void* before);
int QMainWindow_RestoreDockWidget(void* ptr, void* dockwidget);
int QMainWindow_RestoreState(void* ptr, void* state, int version);
void* QMainWindow_SaveState(void* ptr, int version);
void QMainWindow_SetCentralWidget(void* ptr, void* widget);
void QMainWindow_SetCorner(void* ptr, int corner, int area);
void QMainWindow_SetMenuBar(void* ptr, void* menuBar);
void QMainWindow_SetMenuWidget(void* ptr, void* menuBar);
void QMainWindow_SetStatusBar(void* ptr, void* statusbar);
void QMainWindow_SetTabPosition(void* ptr, int areas, int tabPosition);
void* QMainWindow_StatusBar(void* ptr);
int QMainWindow_TabPosition(void* ptr, int area);
void* QMainWindow_TakeCentralWidget(void* ptr);
int QMainWindow_ToolBarArea(void* ptr, void* toolbar);
int QMainWindow_ToolBarBreak(void* ptr, void* toolbar);
void QMainWindow_ConnectToolButtonStyleChanged(void* ptr);
void QMainWindow_DisconnectToolButtonStyleChanged(void* ptr);
void QMainWindow_ToolButtonStyleChanged(void* ptr, int toolButtonStyle);
void QMainWindow_DestroyQMainWindow(void* ptr);
void QMainWindow_ActionEvent(void* ptr, void* event);
void QMainWindow_ActionEventDefault(void* ptr, void* event);
void QMainWindow_DragEnterEvent(void* ptr, void* event);
void QMainWindow_DragEnterEventDefault(void* ptr, void* event);
void QMainWindow_DragLeaveEvent(void* ptr, void* event);
void QMainWindow_DragLeaveEventDefault(void* ptr, void* event);
void QMainWindow_DragMoveEvent(void* ptr, void* event);
void QMainWindow_DragMoveEventDefault(void* ptr, void* event);
void QMainWindow_DropEvent(void* ptr, void* event);
void QMainWindow_DropEventDefault(void* ptr, void* event);
void QMainWindow_EnterEvent(void* ptr, void* event);
void QMainWindow_EnterEventDefault(void* ptr, void* event);
void QMainWindow_FocusInEvent(void* ptr, void* event);
void QMainWindow_FocusInEventDefault(void* ptr, void* event);
void QMainWindow_FocusOutEvent(void* ptr, void* event);
void QMainWindow_FocusOutEventDefault(void* ptr, void* event);
void QMainWindow_HideEvent(void* ptr, void* event);
void QMainWindow_HideEventDefault(void* ptr, void* event);
void QMainWindow_LeaveEvent(void* ptr, void* event);
void QMainWindow_LeaveEventDefault(void* ptr, void* event);
void QMainWindow_MoveEvent(void* ptr, void* event);
void QMainWindow_MoveEventDefault(void* ptr, void* event);
void QMainWindow_PaintEvent(void* ptr, void* event);
void QMainWindow_PaintEventDefault(void* ptr, void* event);
void QMainWindow_SetVisible(void* ptr, int visible);
void QMainWindow_SetVisibleDefault(void* ptr, int visible);
void QMainWindow_ShowEvent(void* ptr, void* event);
void QMainWindow_ShowEventDefault(void* ptr, void* event);
void QMainWindow_ChangeEvent(void* ptr, void* event);
void QMainWindow_ChangeEventDefault(void* ptr, void* event);
void QMainWindow_CloseEvent(void* ptr, void* event);
void QMainWindow_CloseEventDefault(void* ptr, void* event);
void QMainWindow_InitPainter(void* ptr, void* painter);
void QMainWindow_InitPainterDefault(void* ptr, void* painter);
void QMainWindow_InputMethodEvent(void* ptr, void* event);
void QMainWindow_InputMethodEventDefault(void* ptr, void* event);
void QMainWindow_KeyPressEvent(void* ptr, void* event);
void QMainWindow_KeyPressEventDefault(void* ptr, void* event);
void QMainWindow_KeyReleaseEvent(void* ptr, void* event);
void QMainWindow_KeyReleaseEventDefault(void* ptr, void* event);
void QMainWindow_MouseDoubleClickEvent(void* ptr, void* event);
void QMainWindow_MouseDoubleClickEventDefault(void* ptr, void* event);
void QMainWindow_MouseMoveEvent(void* ptr, void* event);
void QMainWindow_MouseMoveEventDefault(void* ptr, void* event);
void QMainWindow_MousePressEvent(void* ptr, void* event);
void QMainWindow_MousePressEventDefault(void* ptr, void* event);
void QMainWindow_MouseReleaseEvent(void* ptr, void* event);
void QMainWindow_MouseReleaseEventDefault(void* ptr, void* event);
void QMainWindow_ResizeEvent(void* ptr, void* event);
void QMainWindow_ResizeEventDefault(void* ptr, void* event);
void QMainWindow_TabletEvent(void* ptr, void* event);
void QMainWindow_TabletEventDefault(void* ptr, void* event);
void QMainWindow_WheelEvent(void* ptr, void* event);
void QMainWindow_WheelEventDefault(void* ptr, void* event);
void QMainWindow_TimerEvent(void* ptr, void* event);
void QMainWindow_TimerEventDefault(void* ptr, void* event);
void QMainWindow_ChildEvent(void* ptr, void* event);
void QMainWindow_ChildEventDefault(void* ptr, void* event);
void QMainWindow_CustomEvent(void* ptr, void* event);
void QMainWindow_CustomEventDefault(void* ptr, void* event);
int QMdiArea_ActivationOrder(void* ptr);
void* QMdiArea_Background(void* ptr);
int QMdiArea_DocumentMode(void* ptr);
void QMdiArea_SetActivationOrder(void* ptr, int order);
void QMdiArea_SetBackground(void* ptr, void* background);
void QMdiArea_SetDocumentMode(void* ptr, int enabled);
void QMdiArea_SetTabPosition(void* ptr, int position);
void QMdiArea_SetTabShape(void* ptr, int shape);
void QMdiArea_SetTabsClosable(void* ptr, int closable);
void QMdiArea_SetTabsMovable(void* ptr, int movable);
void QMdiArea_SetViewMode(void* ptr, int mode);
int QMdiArea_TabPosition(void* ptr);
int QMdiArea_TabShape(void* ptr);
int QMdiArea_TabsClosable(void* ptr);
int QMdiArea_TabsMovable(void* ptr);
int QMdiArea_ViewMode(void* ptr);
void* QMdiArea_NewQMdiArea(void* parent);
void QMdiArea_ActivateNextSubWindow(void* ptr);
void QMdiArea_ActivatePreviousSubWindow(void* ptr);
void* QMdiArea_ActiveSubWindow(void* ptr);
void* QMdiArea_AddSubWindow(void* ptr, void* widget, int windowFlags);
void QMdiArea_CascadeSubWindows(void* ptr);
void QMdiArea_ChildEvent(void* ptr, void* childEvent);
void QMdiArea_ChildEventDefault(void* ptr, void* childEvent);
void QMdiArea_CloseActiveSubWindow(void* ptr);
void QMdiArea_CloseAllSubWindows(void* ptr);
void* QMdiArea_CurrentSubWindow(void* ptr);
int QMdiArea_Event(void* ptr, void* event);
int QMdiArea_EventDefault(void* ptr, void* event);
int QMdiArea_EventFilter(void* ptr, void* object, void* event);
int QMdiArea_EventFilterDefault(void* ptr, void* object, void* event);
void* QMdiArea_MinimumSizeHint(void* ptr);
void* QMdiArea_MinimumSizeHintDefault(void* ptr);
void QMdiArea_PaintEvent(void* ptr, void* paintEvent);
void QMdiArea_PaintEventDefault(void* ptr, void* paintEvent);
void QMdiArea_RemoveSubWindow(void* ptr, void* widget);
void QMdiArea_ResizeEvent(void* ptr, void* resizeEvent);
void QMdiArea_ResizeEventDefault(void* ptr, void* resizeEvent);
void QMdiArea_ScrollContentsBy(void* ptr, int dx, int dy);
void QMdiArea_ScrollContentsByDefault(void* ptr, int dx, int dy);
void QMdiArea_SetActiveSubWindow(void* ptr, void* window);
void QMdiArea_SetOption(void* ptr, int option, int on);
void QMdiArea_SetupViewport(void* ptr, void* viewport);
void QMdiArea_SetupViewportDefault(void* ptr, void* viewport);
void QMdiArea_ShowEvent(void* ptr, void* showEvent);
void QMdiArea_ShowEventDefault(void* ptr, void* showEvent);
void* QMdiArea_SizeHint(void* ptr);
void* QMdiArea_SizeHintDefault(void* ptr);
void QMdiArea_ConnectSubWindowActivated(void* ptr);
void QMdiArea_DisconnectSubWindowActivated(void* ptr);
void QMdiArea_SubWindowActivated(void* ptr, void* window);
int QMdiArea_TestOption(void* ptr, int option);
void QMdiArea_TileSubWindows(void* ptr);
void QMdiArea_TimerEvent(void* ptr, void* timerEvent);
void QMdiArea_TimerEventDefault(void* ptr, void* timerEvent);
int QMdiArea_ViewportEvent(void* ptr, void* event);
int QMdiArea_ViewportEventDefault(void* ptr, void* event);
void QMdiArea_DestroyQMdiArea(void* ptr);
void QMdiArea_DragEnterEvent(void* ptr, void* event);
void QMdiArea_DragEnterEventDefault(void* ptr, void* event);
void QMdiArea_DragLeaveEvent(void* ptr, void* event);
void QMdiArea_DragLeaveEventDefault(void* ptr, void* event);
void QMdiArea_DragMoveEvent(void* ptr, void* event);
void QMdiArea_DragMoveEventDefault(void* ptr, void* event);
void QMdiArea_DropEvent(void* ptr, void* event);
void QMdiArea_DropEventDefault(void* ptr, void* event);
void QMdiArea_ContextMenuEvent(void* ptr, void* e);
void QMdiArea_ContextMenuEventDefault(void* ptr, void* e);
void QMdiArea_KeyPressEvent(void* ptr, void* e);
void QMdiArea_KeyPressEventDefault(void* ptr, void* e);
void QMdiArea_MouseDoubleClickEvent(void* ptr, void* e);
void QMdiArea_MouseDoubleClickEventDefault(void* ptr, void* e);
void QMdiArea_MouseMoveEvent(void* ptr, void* e);
void QMdiArea_MouseMoveEventDefault(void* ptr, void* e);
void QMdiArea_MousePressEvent(void* ptr, void* e);
void QMdiArea_MousePressEventDefault(void* ptr, void* e);
void QMdiArea_MouseReleaseEvent(void* ptr, void* e);
void QMdiArea_MouseReleaseEventDefault(void* ptr, void* e);
void QMdiArea_WheelEvent(void* ptr, void* e);
void QMdiArea_WheelEventDefault(void* ptr, void* e);
void QMdiArea_ChangeEvent(void* ptr, void* ev);
void QMdiArea_ChangeEventDefault(void* ptr, void* ev);
void QMdiArea_ActionEvent(void* ptr, void* event);
void QMdiArea_ActionEventDefault(void* ptr, void* event);
void QMdiArea_EnterEvent(void* ptr, void* event);
void QMdiArea_EnterEventDefault(void* ptr, void* event);
void QMdiArea_FocusInEvent(void* ptr, void* event);
void QMdiArea_FocusInEventDefault(void* ptr, void* event);
void QMdiArea_FocusOutEvent(void* ptr, void* event);
void QMdiArea_FocusOutEventDefault(void* ptr, void* event);
void QMdiArea_HideEvent(void* ptr, void* event);
void QMdiArea_HideEventDefault(void* ptr, void* event);
void QMdiArea_LeaveEvent(void* ptr, void* event);
void QMdiArea_LeaveEventDefault(void* ptr, void* event);
void QMdiArea_MoveEvent(void* ptr, void* event);
void QMdiArea_MoveEventDefault(void* ptr, void* event);
void QMdiArea_SetVisible(void* ptr, int visible);
void QMdiArea_SetVisibleDefault(void* ptr, int visible);
void QMdiArea_CloseEvent(void* ptr, void* event);
void QMdiArea_CloseEventDefault(void* ptr, void* event);
void QMdiArea_InitPainter(void* ptr, void* painter);
void QMdiArea_InitPainterDefault(void* ptr, void* painter);
void QMdiArea_InputMethodEvent(void* ptr, void* event);
void QMdiArea_InputMethodEventDefault(void* ptr, void* event);
void QMdiArea_KeyReleaseEvent(void* ptr, void* event);
void QMdiArea_KeyReleaseEventDefault(void* ptr, void* event);
void QMdiArea_TabletEvent(void* ptr, void* event);
void QMdiArea_TabletEventDefault(void* ptr, void* event);
void QMdiArea_CustomEvent(void* ptr, void* event);
void QMdiArea_CustomEventDefault(void* ptr, void* event);
int QMdiSubWindow_KeyboardPageStep(void* ptr);
int QMdiSubWindow_KeyboardSingleStep(void* ptr);
void QMdiSubWindow_SetKeyboardPageStep(void* ptr, int step);
void QMdiSubWindow_SetKeyboardSingleStep(void* ptr, int step);
void* QMdiSubWindow_NewQMdiSubWindow(void* parent, int flags);
void QMdiSubWindow_ConnectAboutToActivate(void* ptr);
void QMdiSubWindow_DisconnectAboutToActivate(void* ptr);
void QMdiSubWindow_AboutToActivate(void* ptr);
void QMdiSubWindow_ChangeEvent(void* ptr, void* changeEvent);
void QMdiSubWindow_ChangeEventDefault(void* ptr, void* changeEvent);
void QMdiSubWindow_ChildEvent(void* ptr, void* childEvent);
void QMdiSubWindow_ChildEventDefault(void* ptr, void* childEvent);
void QMdiSubWindow_CloseEvent(void* ptr, void* closeEvent);
void QMdiSubWindow_CloseEventDefault(void* ptr, void* closeEvent);
void QMdiSubWindow_ContextMenuEvent(void* ptr, void* contextMenuEvent);
void QMdiSubWindow_ContextMenuEventDefault(void* ptr, void* contextMenuEvent);
int QMdiSubWindow_Event(void* ptr, void* event);
int QMdiSubWindow_EventDefault(void* ptr, void* event);
int QMdiSubWindow_EventFilter(void* ptr, void* object, void* event);
int QMdiSubWindow_EventFilterDefault(void* ptr, void* object, void* event);
void QMdiSubWindow_FocusInEvent(void* ptr, void* focusInEvent);
void QMdiSubWindow_FocusInEventDefault(void* ptr, void* focusInEvent);
void QMdiSubWindow_FocusOutEvent(void* ptr, void* focusOutEvent);
void QMdiSubWindow_FocusOutEventDefault(void* ptr, void* focusOutEvent);
void QMdiSubWindow_HideEvent(void* ptr, void* hideEvent);
void QMdiSubWindow_HideEventDefault(void* ptr, void* hideEvent);
int QMdiSubWindow_IsShaded(void* ptr);
void QMdiSubWindow_KeyPressEvent(void* ptr, void* keyEvent);
void QMdiSubWindow_KeyPressEventDefault(void* ptr, void* keyEvent);
void QMdiSubWindow_LeaveEvent(void* ptr, void* leaveEvent);
void QMdiSubWindow_LeaveEventDefault(void* ptr, void* leaveEvent);
void* QMdiSubWindow_MdiArea(void* ptr);
void* QMdiSubWindow_MinimumSizeHint(void* ptr);
void* QMdiSubWindow_MinimumSizeHintDefault(void* ptr);
void QMdiSubWindow_MouseDoubleClickEvent(void* ptr, void* mouseEvent);
void QMdiSubWindow_MouseDoubleClickEventDefault(void* ptr, void* mouseEvent);
void QMdiSubWindow_MouseMoveEvent(void* ptr, void* mouseEvent);
void QMdiSubWindow_MouseMoveEventDefault(void* ptr, void* mouseEvent);
void QMdiSubWindow_MousePressEvent(void* ptr, void* mouseEvent);
void QMdiSubWindow_MousePressEventDefault(void* ptr, void* mouseEvent);
void QMdiSubWindow_MouseReleaseEvent(void* ptr, void* mouseEvent);
void QMdiSubWindow_MouseReleaseEventDefault(void* ptr, void* mouseEvent);
void QMdiSubWindow_MoveEvent(void* ptr, void* moveEvent);
void QMdiSubWindow_MoveEventDefault(void* ptr, void* moveEvent);
void QMdiSubWindow_PaintEvent(void* ptr, void* paintEvent);
void QMdiSubWindow_PaintEventDefault(void* ptr, void* paintEvent);
void QMdiSubWindow_ResizeEvent(void* ptr, void* resizeEvent);
void QMdiSubWindow_ResizeEventDefault(void* ptr, void* resizeEvent);
void QMdiSubWindow_SetOption(void* ptr, int option, int on);
void QMdiSubWindow_SetSystemMenu(void* ptr, void* systemMenu);
void QMdiSubWindow_SetWidget(void* ptr, void* widget);
void QMdiSubWindow_ShowEvent(void* ptr, void* showEvent);
void QMdiSubWindow_ShowEventDefault(void* ptr, void* showEvent);
void QMdiSubWindow_ShowShaded(void* ptr);
void QMdiSubWindow_ShowSystemMenu(void* ptr);
void* QMdiSubWindow_SizeHint(void* ptr);
void* QMdiSubWindow_SizeHintDefault(void* ptr);
void* QMdiSubWindow_SystemMenu(void* ptr);
int QMdiSubWindow_TestOption(void* ptr, int option);
void QMdiSubWindow_TimerEvent(void* ptr, void* timerEvent);
void QMdiSubWindow_TimerEventDefault(void* ptr, void* timerEvent);
void* QMdiSubWindow_Widget(void* ptr);
void QMdiSubWindow_ConnectWindowStateChanged(void* ptr);
void QMdiSubWindow_DisconnectWindowStateChanged(void* ptr);
void QMdiSubWindow_WindowStateChanged(void* ptr, int oldState, int newState);
void QMdiSubWindow_DestroyQMdiSubWindow(void* ptr);
void QMdiSubWindow_ActionEvent(void* ptr, void* event);
void QMdiSubWindow_ActionEventDefault(void* ptr, void* event);
void QMdiSubWindow_DragEnterEvent(void* ptr, void* event);
void QMdiSubWindow_DragEnterEventDefault(void* ptr, void* event);
void QMdiSubWindow_DragLeaveEvent(void* ptr, void* event);
void QMdiSubWindow_DragLeaveEventDefault(void* ptr, void* event);
void QMdiSubWindow_DragMoveEvent(void* ptr, void* event);
void QMdiSubWindow_DragMoveEventDefault(void* ptr, void* event);
void QMdiSubWindow_DropEvent(void* ptr, void* event);
void QMdiSubWindow_DropEventDefault(void* ptr, void* event);
void QMdiSubWindow_EnterEvent(void* ptr, void* event);
void QMdiSubWindow_EnterEventDefault(void* ptr, void* event);
void QMdiSubWindow_SetVisible(void* ptr, int visible);
void QMdiSubWindow_SetVisibleDefault(void* ptr, int visible);
void QMdiSubWindow_InitPainter(void* ptr, void* painter);
void QMdiSubWindow_InitPainterDefault(void* ptr, void* painter);
void QMdiSubWindow_InputMethodEvent(void* ptr, void* event);
void QMdiSubWindow_InputMethodEventDefault(void* ptr, void* event);
void QMdiSubWindow_KeyReleaseEvent(void* ptr, void* event);
void QMdiSubWindow_KeyReleaseEventDefault(void* ptr, void* event);
void QMdiSubWindow_TabletEvent(void* ptr, void* event);
void QMdiSubWindow_TabletEventDefault(void* ptr, void* event);
void QMdiSubWindow_WheelEvent(void* ptr, void* event);
void QMdiSubWindow_WheelEventDefault(void* ptr, void* event);
void QMdiSubWindow_CustomEvent(void* ptr, void* event);
void QMdiSubWindow_CustomEventDefault(void* ptr, void* event);
void* QMenu_Icon(void* ptr);
int QMenu_IsTearOffEnabled(void* ptr);
int QMenu_SeparatorsCollapsible(void* ptr);
void QMenu_SetIcon(void* ptr, void* icon);
void QMenu_SetSeparatorsCollapsible(void* ptr, int collapse);
void QMenu_SetTearOffEnabled(void* ptr, int v);
void QMenu_SetTitle(void* ptr, char* title);
void QMenu_SetToolTipsVisible(void* ptr, int visible);
char* QMenu_Title(void* ptr);
int QMenu_ToolTipsVisible(void* ptr);
void* QMenu_NewQMenu(void* parent);
void* QMenu_NewQMenu2(char* title, void* parent);
void QMenu_ConnectAboutToHide(void* ptr);
void QMenu_DisconnectAboutToHide(void* ptr);
void QMenu_AboutToHide(void* ptr);
void QMenu_ConnectAboutToShow(void* ptr);
void QMenu_DisconnectAboutToShow(void* ptr);
void QMenu_AboutToShow(void* ptr);
void* QMenu_ActionAt(void* ptr, void* pt);
void QMenu_ActionEvent(void* ptr, void* e);
void QMenu_ActionEventDefault(void* ptr, void* e);
void* QMenu_ActionGeometry(void* ptr, void* act);
void* QMenu_ActiveAction(void* ptr);
void* QMenu_AddAction2(void* ptr, void* icon, char* text);
void* QMenu_AddAction4(void* ptr, void* icon, char* text, void* receiver, char* member, void* shortcut);
void* QMenu_AddAction(void* ptr, char* text);
void* QMenu_AddAction3(void* ptr, char* text, void* receiver, char* member, void* shortcut);
void* QMenu_AddMenu(void* ptr, void* menu);
void* QMenu_AddMenu3(void* ptr, void* icon, char* title);
void* QMenu_AddMenu2(void* ptr, char* title);
void* QMenu_AddSection2(void* ptr, void* icon, char* text);
void* QMenu_AddSection(void* ptr, char* text);
void* QMenu_AddSeparator(void* ptr);
void QMenu_ChangeEvent(void* ptr, void* e);
void QMenu_ChangeEventDefault(void* ptr, void* e);
void QMenu_Clear(void* ptr);
void QMenu_EnterEvent(void* ptr, void* v);
void QMenu_EnterEventDefault(void* ptr, void* v);
int QMenu_Event(void* ptr, void* e);
int QMenu_EventDefault(void* ptr, void* e);
void* QMenu_Exec(void* ptr);
void* QMenu_Exec2(void* ptr, void* p, void* action);
int QMenu_FocusNextPrevChild(void* ptr, int next);
int QMenu_FocusNextPrevChildDefault(void* ptr, int next);
void QMenu_HideEvent(void* ptr, void* v);
void QMenu_HideEventDefault(void* ptr, void* v);
void QMenu_HideTearOffMenu(void* ptr);
void QMenu_ConnectHovered(void* ptr);
void QMenu_DisconnectHovered(void* ptr);
void QMenu_Hovered(void* ptr, void* action);
void* QMenu_InsertMenu(void* ptr, void* before, void* menu);
void* QMenu_InsertSection2(void* ptr, void* before, void* icon, char* text);
void* QMenu_InsertSection(void* ptr, void* before, char* text);
void* QMenu_InsertSeparator(void* ptr, void* before);
int QMenu_IsEmpty(void* ptr);
int QMenu_IsTearOffMenuVisible(void* ptr);
void QMenu_KeyPressEvent(void* ptr, void* e);
void QMenu_KeyPressEventDefault(void* ptr, void* e);
void QMenu_LeaveEvent(void* ptr, void* v);
void QMenu_LeaveEventDefault(void* ptr, void* v);
void* QMenu_MenuAction(void* ptr);
void QMenu_MouseMoveEvent(void* ptr, void* e);
void QMenu_MouseMoveEventDefault(void* ptr, void* e);
void QMenu_MousePressEvent(void* ptr, void* e);
void QMenu_MousePressEventDefault(void* ptr, void* e);
void QMenu_MouseReleaseEvent(void* ptr, void* e);
void QMenu_MouseReleaseEventDefault(void* ptr, void* e);
void QMenu_PaintEvent(void* ptr, void* e);
void QMenu_PaintEventDefault(void* ptr, void* e);
void QMenu_Popup(void* ptr, void* p, void* atAction);
void QMenu_SetActiveAction(void* ptr, void* act);
void* QMenu_SizeHint(void* ptr);
void* QMenu_SizeHintDefault(void* ptr);
void QMenu_TimerEvent(void* ptr, void* e);
void QMenu_TimerEventDefault(void* ptr, void* e);
void QMenu_ConnectTriggered(void* ptr);
void QMenu_DisconnectTriggered(void* ptr);
void QMenu_Triggered(void* ptr, void* action);
void QMenu_WheelEvent(void* ptr, void* e);
void QMenu_WheelEventDefault(void* ptr, void* e);
void QMenu_DestroyQMenu(void* ptr);
void QMenu_DragEnterEvent(void* ptr, void* event);
void QMenu_DragEnterEventDefault(void* ptr, void* event);
void QMenu_DragLeaveEvent(void* ptr, void* event);
void QMenu_DragLeaveEventDefault(void* ptr, void* event);
void QMenu_DragMoveEvent(void* ptr, void* event);
void QMenu_DragMoveEventDefault(void* ptr, void* event);
void QMenu_DropEvent(void* ptr, void* event);
void QMenu_DropEventDefault(void* ptr, void* event);
void QMenu_FocusInEvent(void* ptr, void* event);
void QMenu_FocusInEventDefault(void* ptr, void* event);
void QMenu_FocusOutEvent(void* ptr, void* event);
void QMenu_FocusOutEventDefault(void* ptr, void* event);
void QMenu_MoveEvent(void* ptr, void* event);
void QMenu_MoveEventDefault(void* ptr, void* event);
void QMenu_SetVisible(void* ptr, int visible);
void QMenu_SetVisibleDefault(void* ptr, int visible);
void QMenu_ShowEvent(void* ptr, void* event);
void QMenu_ShowEventDefault(void* ptr, void* event);
void QMenu_CloseEvent(void* ptr, void* event);
void QMenu_CloseEventDefault(void* ptr, void* event);
void QMenu_ContextMenuEvent(void* ptr, void* event);
void QMenu_ContextMenuEventDefault(void* ptr, void* event);
void QMenu_InitPainter(void* ptr, void* painter);
void QMenu_InitPainterDefault(void* ptr, void* painter);
void QMenu_InputMethodEvent(void* ptr, void* event);
void QMenu_InputMethodEventDefault(void* ptr, void* event);
void QMenu_KeyReleaseEvent(void* ptr, void* event);
void QMenu_KeyReleaseEventDefault(void* ptr, void* event);
void QMenu_MouseDoubleClickEvent(void* ptr, void* event);
void QMenu_MouseDoubleClickEventDefault(void* ptr, void* event);
void QMenu_ResizeEvent(void* ptr, void* event);
void QMenu_ResizeEventDefault(void* ptr, void* event);
void QMenu_TabletEvent(void* ptr, void* event);
void QMenu_TabletEventDefault(void* ptr, void* event);
void QMenu_ChildEvent(void* ptr, void* event);
void QMenu_ChildEventDefault(void* ptr, void* event);
void QMenu_CustomEvent(void* ptr, void* event);
void QMenu_CustomEventDefault(void* ptr, void* event);
int QMenuBar_IsDefaultUp(void* ptr);
int QMenuBar_IsNativeMenuBar(void* ptr);
void QMenuBar_SetCornerWidget(void* ptr, void* widget, int corner);
void QMenuBar_SetDefaultUp(void* ptr, int v);
void QMenuBar_SetNativeMenuBar(void* ptr, int nativeMenuBar);
void* QMenuBar_NewQMenuBar(void* parent);
void* QMenuBar_ActionAt(void* ptr, void* pt);
void QMenuBar_ActionEvent(void* ptr, void* e);
void QMenuBar_ActionEventDefault(void* ptr, void* e);
void* QMenuBar_ActionGeometry(void* ptr, void* act);
void* QMenuBar_ActiveAction(void* ptr);
void* QMenuBar_AddAction(void* ptr, char* text);
void* QMenuBar_AddAction2(void* ptr, char* text, void* receiver, char* member);
void* QMenuBar_AddMenu(void* ptr, void* menu);
void* QMenuBar_AddMenu3(void* ptr, void* icon, char* title);
void* QMenuBar_AddMenu2(void* ptr, char* title);
void* QMenuBar_AddSeparator(void* ptr);
void QMenuBar_ChangeEvent(void* ptr, void* e);
void QMenuBar_ChangeEventDefault(void* ptr, void* e);
void QMenuBar_Clear(void* ptr);
void* QMenuBar_CornerWidget(void* ptr, int corner);
int QMenuBar_Event(void* ptr, void* e);
int QMenuBar_EventDefault(void* ptr, void* e);
int QMenuBar_EventFilter(void* ptr, void* object, void* event);
int QMenuBar_EventFilterDefault(void* ptr, void* object, void* event);
void QMenuBar_FocusInEvent(void* ptr, void* v);
void QMenuBar_FocusInEventDefault(void* ptr, void* v);
void QMenuBar_FocusOutEvent(void* ptr, void* v);
void QMenuBar_FocusOutEventDefault(void* ptr, void* v);
int QMenuBar_HeightForWidth(void* ptr, int v);
int QMenuBar_HeightForWidthDefault(void* ptr, int v);
void QMenuBar_ConnectHovered(void* ptr);
void QMenuBar_DisconnectHovered(void* ptr);
void QMenuBar_Hovered(void* ptr, void* action);
void* QMenuBar_InsertMenu(void* ptr, void* before, void* menu);
void* QMenuBar_InsertSeparator(void* ptr, void* before);
void QMenuBar_KeyPressEvent(void* ptr, void* e);
void QMenuBar_KeyPressEventDefault(void* ptr, void* e);
void QMenuBar_LeaveEvent(void* ptr, void* v);
void QMenuBar_LeaveEventDefault(void* ptr, void* v);
void* QMenuBar_MinimumSizeHint(void* ptr);
void* QMenuBar_MinimumSizeHintDefault(void* ptr);
void QMenuBar_MouseMoveEvent(void* ptr, void* e);
void QMenuBar_MouseMoveEventDefault(void* ptr, void* e);
void QMenuBar_MousePressEvent(void* ptr, void* e);
void QMenuBar_MousePressEventDefault(void* ptr, void* e);
void QMenuBar_MouseReleaseEvent(void* ptr, void* e);
void QMenuBar_MouseReleaseEventDefault(void* ptr, void* e);
void QMenuBar_PaintEvent(void* ptr, void* e);
void QMenuBar_PaintEventDefault(void* ptr, void* e);
void QMenuBar_ResizeEvent(void* ptr, void* v);
void QMenuBar_ResizeEventDefault(void* ptr, void* v);
void QMenuBar_SetActiveAction(void* ptr, void* act);
void QMenuBar_SetVisible(void* ptr, int visible);
void QMenuBar_SetVisibleDefault(void* ptr, int visible);
void* QMenuBar_SizeHint(void* ptr);
void* QMenuBar_SizeHintDefault(void* ptr);
void QMenuBar_TimerEvent(void* ptr, void* e);
void QMenuBar_TimerEventDefault(void* ptr, void* e);
void QMenuBar_ConnectTriggered(void* ptr);
void QMenuBar_DisconnectTriggered(void* ptr);
void QMenuBar_Triggered(void* ptr, void* action);
void QMenuBar_DestroyQMenuBar(void* ptr);
void QMenuBar_DragEnterEvent(void* ptr, void* event);
void QMenuBar_DragEnterEventDefault(void* ptr, void* event);
void QMenuBar_DragLeaveEvent(void* ptr, void* event);
void QMenuBar_DragLeaveEventDefault(void* ptr, void* event);
void QMenuBar_DragMoveEvent(void* ptr, void* event);
void QMenuBar_DragMoveEventDefault(void* ptr, void* event);
void QMenuBar_DropEvent(void* ptr, void* event);
void QMenuBar_DropEventDefault(void* ptr, void* event);
void QMenuBar_EnterEvent(void* ptr, void* event);
void QMenuBar_EnterEventDefault(void* ptr, void* event);
void QMenuBar_HideEvent(void* ptr, void* event);
void QMenuBar_HideEventDefault(void* ptr, void* event);
void QMenuBar_MoveEvent(void* ptr, void* event);
void QMenuBar_MoveEventDefault(void* ptr, void* event);
void QMenuBar_ShowEvent(void* ptr, void* event);
void QMenuBar_ShowEventDefault(void* ptr, void* event);
void QMenuBar_CloseEvent(void* ptr, void* event);
void QMenuBar_CloseEventDefault(void* ptr, void* event);
void QMenuBar_ContextMenuEvent(void* ptr, void* event);
void QMenuBar_ContextMenuEventDefault(void* ptr, void* event);
void QMenuBar_InitPainter(void* ptr, void* painter);
void QMenuBar_InitPainterDefault(void* ptr, void* painter);
void QMenuBar_InputMethodEvent(void* ptr, void* event);
void QMenuBar_InputMethodEventDefault(void* ptr, void* event);
void QMenuBar_KeyReleaseEvent(void* ptr, void* event);
void QMenuBar_KeyReleaseEventDefault(void* ptr, void* event);
void QMenuBar_MouseDoubleClickEvent(void* ptr, void* event);
void QMenuBar_MouseDoubleClickEventDefault(void* ptr, void* event);
void QMenuBar_TabletEvent(void* ptr, void* event);
void QMenuBar_TabletEventDefault(void* ptr, void* event);
void QMenuBar_WheelEvent(void* ptr, void* event);
void QMenuBar_WheelEventDefault(void* ptr, void* event);
void QMenuBar_ChildEvent(void* ptr, void* event);
void QMenuBar_ChildEventDefault(void* ptr, void* event);
void QMenuBar_CustomEvent(void* ptr, void* event);
void QMenuBar_CustomEventDefault(void* ptr, void* event);
int QMessageBox_ButtonMask_Type();
char* QMessageBox_DetailedText(void* ptr);
int QMessageBox_Icon(void* ptr);
char* QMessageBox_InformativeText(void* ptr);
void QMessageBox_SetDetailedText(void* ptr, char* text);
void QMessageBox_SetIcon(void* ptr, int v);
void QMessageBox_SetIconPixmap(void* ptr, void* pixmap);
void QMessageBox_SetInformativeText(void* ptr, char* text);
void QMessageBox_SetStandardButtons(void* ptr, int buttons);
void QMessageBox_SetText(void* ptr, char* text);
void QMessageBox_SetTextFormat(void* ptr, int format);
void QMessageBox_SetTextInteractionFlags(void* ptr, int flags);
int QMessageBox_StandardButtons(void* ptr);
char* QMessageBox_Text(void* ptr);
int QMessageBox_TextFormat(void* ptr);
int QMessageBox_TextInteractionFlags(void* ptr);
void* QMessageBox_NewQMessageBox2(int icon, char* title, char* text, int buttons, void* parent, int f);
void* QMessageBox_NewQMessageBox(void* parent);
void QMessageBox_QMessageBox_About(void* parent, char* title, char* text);
void QMessageBox_QMessageBox_AboutQt(void* parent, char* title);
void* QMessageBox_AddButton3(void* ptr, int button);
void* QMessageBox_AddButton2(void* ptr, char* text, int role);
void QMessageBox_AddButton(void* ptr, void* button, int role);
void* QMessageBox_Button(void* ptr, int which);
void QMessageBox_ConnectButtonClicked(void* ptr);
void QMessageBox_DisconnectButtonClicked(void* ptr);
void QMessageBox_ButtonClicked(void* ptr, void* button);
int QMessageBox_ButtonRole(void* ptr, void* button);
void QMessageBox_ChangeEvent(void* ptr, void* ev);
void QMessageBox_ChangeEventDefault(void* ptr, void* ev);
void* QMessageBox_CheckBox(void* ptr);
void* QMessageBox_ClickedButton(void* ptr);
void QMessageBox_CloseEvent(void* ptr, void* e);
void QMessageBox_CloseEventDefault(void* ptr, void* e);
int QMessageBox_QMessageBox_Critical(void* parent, char* title, char* text, int buttons, int defaultButton);
void* QMessageBox_DefaultButton(void* ptr);
void* QMessageBox_EscapeButton(void* ptr);
int QMessageBox_Event(void* ptr, void* e);
int QMessageBox_EventDefault(void* ptr, void* e);
int QMessageBox_Exec(void* ptr);
int QMessageBox_ExecDefault(void* ptr);
int QMessageBox_QMessageBox_Information(void* parent, char* title, char* text, int buttons, int defaultButton);
void QMessageBox_KeyPressEvent(void* ptr, void* e);
void QMessageBox_KeyPressEventDefault(void* ptr, void* e);
void QMessageBox_Open(void* ptr, void* receiver, char* member);
int QMessageBox_QMessageBox_Question(void* parent, char* title, char* text, int buttons, int defaultButton);
void QMessageBox_RemoveButton(void* ptr, void* button);
void QMessageBox_ResizeEvent(void* ptr, void* event);
void QMessageBox_ResizeEventDefault(void* ptr, void* event);
void QMessageBox_SetCheckBox(void* ptr, void* cb);
void QMessageBox_SetDefaultButton(void* ptr, void* button);
void QMessageBox_SetDefaultButton2(void* ptr, int button);
void QMessageBox_SetEscapeButton(void* ptr, void* button);
void QMessageBox_SetEscapeButton2(void* ptr, int button);
void QMessageBox_SetVisible(void* ptr, int visible);
void QMessageBox_SetVisibleDefault(void* ptr, int visible);
void QMessageBox_SetWindowModality(void* ptr, int windowModality);
void QMessageBox_SetWindowTitle(void* ptr, char* title);
void QMessageBox_ShowEvent(void* ptr, void* e);
void QMessageBox_ShowEventDefault(void* ptr, void* e);
int QMessageBox_StandardButton(void* ptr, void* button);
int QMessageBox_QMessageBox_Warning(void* parent, char* title, char* text, int buttons, int defaultButton);
void QMessageBox_DestroyQMessageBox(void* ptr);
void QMessageBox_Accept(void* ptr);
void QMessageBox_AcceptDefault(void* ptr);
void QMessageBox_ContextMenuEvent(void* ptr, void* e);
void QMessageBox_ContextMenuEventDefault(void* ptr, void* e);
void QMessageBox_Done(void* ptr, int r);
void QMessageBox_DoneDefault(void* ptr, int r);
void QMessageBox_Reject(void* ptr);
void QMessageBox_RejectDefault(void* ptr);
void QMessageBox_ActionEvent(void* ptr, void* event);
void QMessageBox_ActionEventDefault(void* ptr, void* event);
void QMessageBox_DragEnterEvent(void* ptr, void* event);
void QMessageBox_DragEnterEventDefault(void* ptr, void* event);
void QMessageBox_DragLeaveEvent(void* ptr, void* event);
void QMessageBox_DragLeaveEventDefault(void* ptr, void* event);
void QMessageBox_DragMoveEvent(void* ptr, void* event);
void QMessageBox_DragMoveEventDefault(void* ptr, void* event);
void QMessageBox_DropEvent(void* ptr, void* event);
void QMessageBox_DropEventDefault(void* ptr, void* event);
void QMessageBox_EnterEvent(void* ptr, void* event);
void QMessageBox_EnterEventDefault(void* ptr, void* event);
void QMessageBox_FocusInEvent(void* ptr, void* event);
void QMessageBox_FocusInEventDefault(void* ptr, void* event);
void QMessageBox_FocusOutEvent(void* ptr, void* event);
void QMessageBox_FocusOutEventDefault(void* ptr, void* event);
void QMessageBox_HideEvent(void* ptr, void* event);
void QMessageBox_HideEventDefault(void* ptr, void* event);
void QMessageBox_LeaveEvent(void* ptr, void* event);
void QMessageBox_LeaveEventDefault(void* ptr, void* event);
void QMessageBox_MoveEvent(void* ptr, void* event);
void QMessageBox_MoveEventDefault(void* ptr, void* event);
void QMessageBox_PaintEvent(void* ptr, void* event);
void QMessageBox_PaintEventDefault(void* ptr, void* event);
void QMessageBox_InitPainter(void* ptr, void* painter);
void QMessageBox_InitPainterDefault(void* ptr, void* painter);
void QMessageBox_InputMethodEvent(void* ptr, void* event);
void QMessageBox_InputMethodEventDefault(void* ptr, void* event);
void QMessageBox_KeyReleaseEvent(void* ptr, void* event);
void QMessageBox_KeyReleaseEventDefault(void* ptr, void* event);
void QMessageBox_MouseDoubleClickEvent(void* ptr, void* event);
void QMessageBox_MouseDoubleClickEventDefault(void* ptr, void* event);
void QMessageBox_MouseMoveEvent(void* ptr, void* event);
void QMessageBox_MouseMoveEventDefault(void* ptr, void* event);
void QMessageBox_MousePressEvent(void* ptr, void* event);
void QMessageBox_MousePressEventDefault(void* ptr, void* event);
void QMessageBox_MouseReleaseEvent(void* ptr, void* event);
void QMessageBox_MouseReleaseEventDefault(void* ptr, void* event);
void QMessageBox_TabletEvent(void* ptr, void* event);
void QMessageBox_TabletEventDefault(void* ptr, void* event);
void QMessageBox_WheelEvent(void* ptr, void* event);
void QMessageBox_WheelEventDefault(void* ptr, void* event);
void QMessageBox_TimerEvent(void* ptr, void* event);
void QMessageBox_TimerEventDefault(void* ptr, void* event);
void QMessageBox_ChildEvent(void* ptr, void* event);
void QMessageBox_ChildEventDefault(void* ptr, void* event);
void QMessageBox_CustomEvent(void* ptr, void* event);
void QMessageBox_CustomEventDefault(void* ptr, void* event);
void* QMouseEventTransition_NewQMouseEventTransition2(void* object, int ty, int button, void* sourceState);
void* QMouseEventTransition_NewQMouseEventTransition(void* sourceState);
int QMouseEventTransition_Button(void* ptr);
int QMouseEventTransition_EventTest(void* ptr, void* event);
int QMouseEventTransition_EventTestDefault(void* ptr, void* event);
int QMouseEventTransition_ModifierMask(void* ptr);
void QMouseEventTransition_OnTransition(void* ptr, void* event);
void QMouseEventTransition_OnTransitionDefault(void* ptr, void* event);
void QMouseEventTransition_SetButton(void* ptr, int button);
void QMouseEventTransition_SetHitTestPath(void* ptr, void* path);
void QMouseEventTransition_SetModifierMask(void* ptr, int modifierMask);
void QMouseEventTransition_DestroyQMouseEventTransition(void* ptr);
void QMouseEventTransition_TimerEvent(void* ptr, void* event);
void QMouseEventTransition_TimerEventDefault(void* ptr, void* event);
void QMouseEventTransition_ChildEvent(void* ptr, void* event);
void QMouseEventTransition_ChildEventDefault(void* ptr, void* event);
void QMouseEventTransition_CustomEvent(void* ptr, void* event);
void QMouseEventTransition_CustomEventDefault(void* ptr, void* event);
void QOpenGLWidget_ActionEvent(void* ptr, void* event);
void QOpenGLWidget_ActionEventDefault(void* ptr, void* event);
void QOpenGLWidget_DragEnterEvent(void* ptr, void* event);
void QOpenGLWidget_DragEnterEventDefault(void* ptr, void* event);
void QOpenGLWidget_DragLeaveEvent(void* ptr, void* event);
void QOpenGLWidget_DragLeaveEventDefault(void* ptr, void* event);
void QOpenGLWidget_DragMoveEvent(void* ptr, void* event);
void QOpenGLWidget_DragMoveEventDefault(void* ptr, void* event);
void QOpenGLWidget_DropEvent(void* ptr, void* event);
void QOpenGLWidget_DropEventDefault(void* ptr, void* event);
void QOpenGLWidget_EnterEvent(void* ptr, void* event);
void QOpenGLWidget_EnterEventDefault(void* ptr, void* event);
void QOpenGLWidget_FocusInEvent(void* ptr, void* event);
void QOpenGLWidget_FocusInEventDefault(void* ptr, void* event);
void QOpenGLWidget_FocusOutEvent(void* ptr, void* event);
void QOpenGLWidget_FocusOutEventDefault(void* ptr, void* event);
void QOpenGLWidget_HideEvent(void* ptr, void* event);
void QOpenGLWidget_HideEventDefault(void* ptr, void* event);
void QOpenGLWidget_LeaveEvent(void* ptr, void* event);
void QOpenGLWidget_LeaveEventDefault(void* ptr, void* event);
void QOpenGLWidget_MoveEvent(void* ptr, void* event);
void QOpenGLWidget_MoveEventDefault(void* ptr, void* event);
void QOpenGLWidget_PaintEvent(void* ptr, void* event);
void QOpenGLWidget_PaintEventDefault(void* ptr, void* event);
void QOpenGLWidget_SetVisible(void* ptr, int visible);
void QOpenGLWidget_SetVisibleDefault(void* ptr, int visible);
void QOpenGLWidget_ShowEvent(void* ptr, void* event);
void QOpenGLWidget_ShowEventDefault(void* ptr, void* event);
void QOpenGLWidget_ChangeEvent(void* ptr, void* event);
void QOpenGLWidget_ChangeEventDefault(void* ptr, void* event);
void QOpenGLWidget_CloseEvent(void* ptr, void* event);
void QOpenGLWidget_CloseEventDefault(void* ptr, void* event);
void QOpenGLWidget_ContextMenuEvent(void* ptr, void* event);
void QOpenGLWidget_ContextMenuEventDefault(void* ptr, void* event);
void QOpenGLWidget_InitPainter(void* ptr, void* painter);
void QOpenGLWidget_InitPainterDefault(void* ptr, void* painter);
void QOpenGLWidget_InputMethodEvent(void* ptr, void* event);
void QOpenGLWidget_InputMethodEventDefault(void* ptr, void* event);
void QOpenGLWidget_KeyPressEvent(void* ptr, void* event);
void QOpenGLWidget_KeyPressEventDefault(void* ptr, void* event);
void QOpenGLWidget_KeyReleaseEvent(void* ptr, void* event);
void QOpenGLWidget_KeyReleaseEventDefault(void* ptr, void* event);
void QOpenGLWidget_MouseDoubleClickEvent(void* ptr, void* event);
void QOpenGLWidget_MouseDoubleClickEventDefault(void* ptr, void* event);
void QOpenGLWidget_MouseMoveEvent(void* ptr, void* event);
void QOpenGLWidget_MouseMoveEventDefault(void* ptr, void* event);
void QOpenGLWidget_MousePressEvent(void* ptr, void* event);
void QOpenGLWidget_MousePressEventDefault(void* ptr, void* event);
void QOpenGLWidget_MouseReleaseEvent(void* ptr, void* event);
void QOpenGLWidget_MouseReleaseEventDefault(void* ptr, void* event);
void QOpenGLWidget_ResizeEvent(void* ptr, void* event);
void QOpenGLWidget_ResizeEventDefault(void* ptr, void* event);
void QOpenGLWidget_TabletEvent(void* ptr, void* event);
void QOpenGLWidget_TabletEventDefault(void* ptr, void* event);
void QOpenGLWidget_WheelEvent(void* ptr, void* event);
void QOpenGLWidget_WheelEventDefault(void* ptr, void* event);
void QOpenGLWidget_TimerEvent(void* ptr, void* event);
void QOpenGLWidget_TimerEventDefault(void* ptr, void* event);
void QOpenGLWidget_ChildEvent(void* ptr, void* event);
void QOpenGLWidget_ChildEventDefault(void* ptr, void* event);
void QOpenGLWidget_CustomEvent(void* ptr, void* event);
void QOpenGLWidget_CustomEventDefault(void* ptr, void* event);
double QPanGesture_Acceleration(void* ptr);
void QPanGesture_SetAcceleration(void* ptr, double value);
void QPanGesture_SetLastOffset(void* ptr, void* value);
void QPanGesture_SetOffset(void* ptr, void* value);
void QPanGesture_DestroyQPanGesture(void* ptr);
void QPanGesture_TimerEvent(void* ptr, void* event);
void QPanGesture_TimerEventDefault(void* ptr, void* event);
void QPanGesture_ChildEvent(void* ptr, void* event);
void QPanGesture_ChildEventDefault(void* ptr, void* event);
void QPanGesture_CustomEvent(void* ptr, void* event);
void QPanGesture_CustomEventDefault(void* ptr, void* event);
int QPinchGesture_ChangeFlags(void* ptr);
double QPinchGesture_LastRotationAngle(void* ptr);
double QPinchGesture_LastScaleFactor(void* ptr);
double QPinchGesture_RotationAngle(void* ptr);
double QPinchGesture_ScaleFactor(void* ptr);
void QPinchGesture_SetCenterPoint(void* ptr, void* value);
void QPinchGesture_SetChangeFlags(void* ptr, int value);
void QPinchGesture_SetLastCenterPoint(void* ptr, void* value);
void QPinchGesture_SetLastRotationAngle(void* ptr, double value);
void QPinchGesture_SetLastScaleFactor(void* ptr, double value);
void QPinchGesture_SetRotationAngle(void* ptr, double value);
void QPinchGesture_SetScaleFactor(void* ptr, double value);
void QPinchGesture_SetStartCenterPoint(void* ptr, void* value);
void QPinchGesture_SetTotalChangeFlags(void* ptr, int value);
void QPinchGesture_SetTotalRotationAngle(void* ptr, double value);
void QPinchGesture_SetTotalScaleFactor(void* ptr, double value);
int QPinchGesture_TotalChangeFlags(void* ptr);
double QPinchGesture_TotalRotationAngle(void* ptr);
double QPinchGesture_TotalScaleFactor(void* ptr);
void QPinchGesture_DestroyQPinchGesture(void* ptr);
void QPinchGesture_TimerEvent(void* ptr, void* event);
void QPinchGesture_TimerEventDefault(void* ptr, void* event);
void QPinchGesture_ChildEvent(void* ptr, void* event);
void QPinchGesture_ChildEventDefault(void* ptr, void* event);
void QPinchGesture_CustomEvent(void* ptr, void* event);
void QPinchGesture_CustomEventDefault(void* ptr, void* event);
int QPlainTextDocumentLayout_CursorWidth(void* ptr);
void QPlainTextDocumentLayout_SetCursorWidth(void* ptr, int width);
void* QPlainTextDocumentLayout_NewQPlainTextDocumentLayout(void* document);
void QPlainTextDocumentLayout_DocumentChanged(void* ptr, int from, int charsRemoved, int charsAdded);
void QPlainTextDocumentLayout_DocumentChangedDefault(void* ptr, int from, int charsRemoved, int charsAdded);
void QPlainTextDocumentLayout_EnsureBlockLayout(void* ptr, void* block);
int QPlainTextDocumentLayout_PageCount(void* ptr);
int QPlainTextDocumentLayout_PageCountDefault(void* ptr);
void QPlainTextDocumentLayout_RequestUpdate(void* ptr);
void QPlainTextDocumentLayout_DestroyQPlainTextDocumentLayout(void* ptr);
void QPlainTextDocumentLayout_TimerEvent(void* ptr, void* event);
void QPlainTextDocumentLayout_TimerEventDefault(void* ptr, void* event);
void QPlainTextDocumentLayout_ChildEvent(void* ptr, void* event);
void QPlainTextDocumentLayout_ChildEventDefault(void* ptr, void* event);
void QPlainTextDocumentLayout_CustomEvent(void* ptr, void* event);
void QPlainTextDocumentLayout_CustomEventDefault(void* ptr, void* event);
int QPlainTextEdit_BackgroundVisible(void* ptr);
int QPlainTextEdit_BlockCount(void* ptr);
int QPlainTextEdit_CenterOnScroll(void* ptr);
void QPlainTextEdit_ContextMenuEvent(void* ptr, void* event);
void QPlainTextEdit_ContextMenuEventDefault(void* ptr, void* event);
int QPlainTextEdit_CursorWidth(void* ptr);
int QPlainTextEdit_IsReadOnly(void* ptr);
int QPlainTextEdit_LineWrapMode(void* ptr);
int QPlainTextEdit_OverwriteMode(void* ptr);
char* QPlainTextEdit_PlaceholderText(void* ptr);
void QPlainTextEdit_Redo(void* ptr);
void QPlainTextEdit_SetBackgroundVisible(void* ptr, int visible);
void QPlainTextEdit_SetCenterOnScroll(void* ptr, int enabled);
void QPlainTextEdit_SetCursorWidth(void* ptr, int width);
void QPlainTextEdit_SetLineWrapMode(void* ptr, int mode);
void QPlainTextEdit_SetOverwriteMode(void* ptr, int overwrite);
void QPlainTextEdit_SetPlaceholderText(void* ptr, char* placeholderText);
void QPlainTextEdit_SetReadOnly(void* ptr, int ro);
void QPlainTextEdit_SetTabChangesFocus(void* ptr, int b);
void QPlainTextEdit_SetTabStopWidth(void* ptr, int width);
void QPlainTextEdit_SetTextInteractionFlags(void* ptr, int flags);
void QPlainTextEdit_SetWordWrapMode(void* ptr, int policy);
int QPlainTextEdit_TabChangesFocus(void* ptr);
int QPlainTextEdit_TabStopWidth(void* ptr);
int QPlainTextEdit_TextInteractionFlags(void* ptr);
int QPlainTextEdit_WordWrapMode(void* ptr);
void QPlainTextEdit_ZoomIn(void* ptr, int ran);
void QPlainTextEdit_ZoomOut(void* ptr, int ran);
void* QPlainTextEdit_NewQPlainTextEdit(void* parent);
void* QPlainTextEdit_NewQPlainTextEdit2(char* text, void* parent);
char* QPlainTextEdit_AnchorAt(void* ptr, void* pos);
void QPlainTextEdit_AppendPlainText(void* ptr, char* text);
int QPlainTextEdit_CanInsertFromMimeData(void* ptr, void* source);
int QPlainTextEdit_CanInsertFromMimeDataDefault(void* ptr, void* source);
void QPlainTextEdit_CenterCursor(void* ptr);
void QPlainTextEdit_AppendHtml(void* ptr, char* html);
void QPlainTextEdit_ConnectBlockCountChanged(void* ptr);
void QPlainTextEdit_DisconnectBlockCountChanged(void* ptr);
void QPlainTextEdit_BlockCountChanged(void* ptr, int newBlockCount);
int QPlainTextEdit_CanPaste(void* ptr);
void QPlainTextEdit_ChangeEvent(void* ptr, void* e);
void QPlainTextEdit_ChangeEventDefault(void* ptr, void* e);
void QPlainTextEdit_Clear(void* ptr);
void QPlainTextEdit_Copy(void* ptr);
void QPlainTextEdit_ConnectCopyAvailable(void* ptr);
void QPlainTextEdit_DisconnectCopyAvailable(void* ptr);
void QPlainTextEdit_CopyAvailable(void* ptr, int yes);
void* QPlainTextEdit_CreateMimeDataFromSelection(void* ptr);
void* QPlainTextEdit_CreateMimeDataFromSelectionDefault(void* ptr);
void* QPlainTextEdit_CreateStandardContextMenu(void* ptr);
void* QPlainTextEdit_CreateStandardContextMenu2(void* ptr, void* position);
void QPlainTextEdit_ConnectCursorPositionChanged(void* ptr);
void QPlainTextEdit_DisconnectCursorPositionChanged(void* ptr);
void QPlainTextEdit_CursorPositionChanged(void* ptr);
void* QPlainTextEdit_CursorRect2(void* ptr);
void* QPlainTextEdit_CursorRect(void* ptr, void* cursor);
void QPlainTextEdit_Cut(void* ptr);
void* QPlainTextEdit_Document(void* ptr);
char* QPlainTextEdit_DocumentTitle(void* ptr);
void QPlainTextEdit_DragEnterEvent(void* ptr, void* e);
void QPlainTextEdit_DragEnterEventDefault(void* ptr, void* e);
void QPlainTextEdit_DragLeaveEvent(void* ptr, void* e);
void QPlainTextEdit_DragLeaveEventDefault(void* ptr, void* e);
void QPlainTextEdit_DragMoveEvent(void* ptr, void* e);
void QPlainTextEdit_DragMoveEventDefault(void* ptr, void* e);
void QPlainTextEdit_DropEvent(void* ptr, void* e);
void QPlainTextEdit_DropEventDefault(void* ptr, void* e);
void QPlainTextEdit_EnsureCursorVisible(void* ptr);
void QPlainTextEdit_FocusInEvent(void* ptr, void* e);
void QPlainTextEdit_FocusInEventDefault(void* ptr, void* e);
int QPlainTextEdit_FocusNextPrevChild(void* ptr, int next);
int QPlainTextEdit_FocusNextPrevChildDefault(void* ptr, int next);
void QPlainTextEdit_FocusOutEvent(void* ptr, void* e);
void QPlainTextEdit_FocusOutEventDefault(void* ptr, void* e);
void QPlainTextEdit_InputMethodEvent(void* ptr, void* e);
void QPlainTextEdit_InputMethodEventDefault(void* ptr, void* e);
void* QPlainTextEdit_InputMethodQuery(void* ptr, int property);
void* QPlainTextEdit_InputMethodQueryDefault(void* ptr, int property);
void QPlainTextEdit_InsertFromMimeData(void* ptr, void* source);
void QPlainTextEdit_InsertFromMimeDataDefault(void* ptr, void* source);
void QPlainTextEdit_InsertPlainText(void* ptr, char* text);
int QPlainTextEdit_IsUndoRedoEnabled(void* ptr);
void QPlainTextEdit_KeyPressEvent(void* ptr, void* e);
void QPlainTextEdit_KeyPressEventDefault(void* ptr, void* e);
void QPlainTextEdit_KeyReleaseEvent(void* ptr, void* e);
void QPlainTextEdit_KeyReleaseEventDefault(void* ptr, void* e);
void* QPlainTextEdit_LoadResource(void* ptr, int ty, void* name);
void* QPlainTextEdit_LoadResourceDefault(void* ptr, int ty, void* name);
int QPlainTextEdit_MaximumBlockCount(void* ptr);
void QPlainTextEdit_MergeCurrentCharFormat(void* ptr, void* modifier);
void QPlainTextEdit_ConnectModificationChanged(void* ptr);
void QPlainTextEdit_DisconnectModificationChanged(void* ptr);
void QPlainTextEdit_ModificationChanged(void* ptr, int changed);
void QPlainTextEdit_MouseDoubleClickEvent(void* ptr, void* e);
void QPlainTextEdit_MouseDoubleClickEventDefault(void* ptr, void* e);
void QPlainTextEdit_MouseMoveEvent(void* ptr, void* e);
void QPlainTextEdit_MouseMoveEventDefault(void* ptr, void* e);
void QPlainTextEdit_MousePressEvent(void* ptr, void* e);
void QPlainTextEdit_MousePressEventDefault(void* ptr, void* e);
void QPlainTextEdit_MouseReleaseEvent(void* ptr, void* e);
void QPlainTextEdit_MouseReleaseEventDefault(void* ptr, void* e);
void QPlainTextEdit_MoveCursor(void* ptr, int operation, int mode);
void QPlainTextEdit_PaintEvent(void* ptr, void* e);
void QPlainTextEdit_PaintEventDefault(void* ptr, void* e);
void QPlainTextEdit_Paste(void* ptr);
void QPlainTextEdit_Print(void* ptr, void* printer);
void QPlainTextEdit_ConnectRedoAvailable(void* ptr);
void QPlainTextEdit_DisconnectRedoAvailable(void* ptr);
void QPlainTextEdit_RedoAvailable(void* ptr, int available);
void QPlainTextEdit_ResizeEvent(void* ptr, void* e);
void QPlainTextEdit_ResizeEventDefault(void* ptr, void* e);
void QPlainTextEdit_ScrollContentsBy(void* ptr, int dx, int dy);
void QPlainTextEdit_ScrollContentsByDefault(void* ptr, int dx, int dy);
void QPlainTextEdit_SelectAll(void* ptr);
void QPlainTextEdit_ConnectSelectionChanged(void* ptr);
void QPlainTextEdit_DisconnectSelectionChanged(void* ptr);
void QPlainTextEdit_SelectionChanged(void* ptr);
void QPlainTextEdit_SetCurrentCharFormat(void* ptr, void* format);
void QPlainTextEdit_SetDocument(void* ptr, void* document);
void QPlainTextEdit_SetDocumentTitle(void* ptr, char* title);
void QPlainTextEdit_SetMaximumBlockCount(void* ptr, int maximum);
void QPlainTextEdit_SetPlainText(void* ptr, char* text);
void QPlainTextEdit_SetTextCursor(void* ptr, void* cursor);
void QPlainTextEdit_SetUndoRedoEnabled(void* ptr, int enable);
void QPlainTextEdit_ShowEvent(void* ptr, void* v);
void QPlainTextEdit_ShowEventDefault(void* ptr, void* v);
void QPlainTextEdit_ConnectTextChanged(void* ptr);
void QPlainTextEdit_DisconnectTextChanged(void* ptr);
void QPlainTextEdit_TextChanged(void* ptr);
char* QPlainTextEdit_ToPlainText(void* ptr);
void QPlainTextEdit_Undo(void* ptr);
void QPlainTextEdit_ConnectUndoAvailable(void* ptr);
void QPlainTextEdit_DisconnectUndoAvailable(void* ptr);
void QPlainTextEdit_UndoAvailable(void* ptr, int available);
void QPlainTextEdit_ConnectUpdateRequest(void* ptr);
void QPlainTextEdit_DisconnectUpdateRequest(void* ptr);
void QPlainTextEdit_UpdateRequest(void* ptr, void* rect, int dy);
void QPlainTextEdit_WheelEvent(void* ptr, void* e);
void QPlainTextEdit_WheelEventDefault(void* ptr, void* e);
void QPlainTextEdit_DestroyQPlainTextEdit(void* ptr);
void QPlainTextEdit_SetupViewport(void* ptr, void* viewport);
void QPlainTextEdit_SetupViewportDefault(void* ptr, void* viewport);
void QPlainTextEdit_ActionEvent(void* ptr, void* event);
void QPlainTextEdit_ActionEventDefault(void* ptr, void* event);
void QPlainTextEdit_EnterEvent(void* ptr, void* event);
void QPlainTextEdit_EnterEventDefault(void* ptr, void* event);
void QPlainTextEdit_HideEvent(void* ptr, void* event);
void QPlainTextEdit_HideEventDefault(void* ptr, void* event);
void QPlainTextEdit_LeaveEvent(void* ptr, void* event);
void QPlainTextEdit_LeaveEventDefault(void* ptr, void* event);
void QPlainTextEdit_MoveEvent(void* ptr, void* event);
void QPlainTextEdit_MoveEventDefault(void* ptr, void* event);
void QPlainTextEdit_SetVisible(void* ptr, int visible);
void QPlainTextEdit_SetVisibleDefault(void* ptr, int visible);
void QPlainTextEdit_CloseEvent(void* ptr, void* event);
void QPlainTextEdit_CloseEventDefault(void* ptr, void* event);
void QPlainTextEdit_InitPainter(void* ptr, void* painter);
void QPlainTextEdit_InitPainterDefault(void* ptr, void* painter);
void QPlainTextEdit_TabletEvent(void* ptr, void* event);
void QPlainTextEdit_TabletEventDefault(void* ptr, void* event);
void QPlainTextEdit_TimerEvent(void* ptr, void* event);
void QPlainTextEdit_TimerEventDefault(void* ptr, void* event);
void QPlainTextEdit_ChildEvent(void* ptr, void* event);
void QPlainTextEdit_ChildEventDefault(void* ptr, void* event);
void QPlainTextEdit_CustomEvent(void* ptr, void* event);
void QPlainTextEdit_CustomEventDefault(void* ptr, void* event);
int QProgressBar_Alignment(void* ptr);
char* QProgressBar_Format(void* ptr);
int QProgressBar_InvertedAppearance(void* ptr);
int QProgressBar_IsTextVisible(void* ptr);
int QProgressBar_Maximum(void* ptr);
int QProgressBar_Minimum(void* ptr);
int QProgressBar_Orientation(void* ptr);
void QProgressBar_ResetFormat(void* ptr);
void QProgressBar_SetAlignment(void* ptr, int alignment);
void QProgressBar_SetFormat(void* ptr, char* format);
void QProgressBar_SetInvertedAppearance(void* ptr, int invert);
void QProgressBar_SetMaximum(void* ptr, int maximum);
void QProgressBar_SetMinimum(void* ptr, int minimum);
void QProgressBar_SetOrientation(void* ptr, int v);
void QProgressBar_SetTextDirection(void* ptr, int textDirection);
void QProgressBar_SetTextVisible(void* ptr, int visible);
void QProgressBar_SetValue(void* ptr, int value);
char* QProgressBar_Text(void* ptr);
char* QProgressBar_TextDefault(void* ptr);
int QProgressBar_TextDirection(void* ptr);
int QProgressBar_Value(void* ptr);
void* QProgressBar_NewQProgressBar(void* parent);
int QProgressBar_Event(void* ptr, void* e);
int QProgressBar_EventDefault(void* ptr, void* e);
void* QProgressBar_MinimumSizeHint(void* ptr);
void* QProgressBar_MinimumSizeHintDefault(void* ptr);
void QProgressBar_PaintEvent(void* ptr, void* v);
void QProgressBar_PaintEventDefault(void* ptr, void* v);
void QProgressBar_Reset(void* ptr);
void QProgressBar_SetRange(void* ptr, int minimum, int maximum);
void* QProgressBar_SizeHint(void* ptr);
void* QProgressBar_SizeHintDefault(void* ptr);
void QProgressBar_ConnectValueChanged(void* ptr);
void QProgressBar_DisconnectValueChanged(void* ptr);
void QProgressBar_ValueChanged(void* ptr, int value);
void QProgressBar_DestroyQProgressBar(void* ptr);
void QProgressBar_ActionEvent(void* ptr, void* event);
void QProgressBar_ActionEventDefault(void* ptr, void* event);
void QProgressBar_DragEnterEvent(void* ptr, void* event);
void QProgressBar_DragEnterEventDefault(void* ptr, void* event);
void QProgressBar_DragLeaveEvent(void* ptr, void* event);
void QProgressBar_DragLeaveEventDefault(void* ptr, void* event);
void QProgressBar_DragMoveEvent(void* ptr, void* event);
void QProgressBar_DragMoveEventDefault(void* ptr, void* event);
void QProgressBar_DropEvent(void* ptr, void* event);
void QProgressBar_DropEventDefault(void* ptr, void* event);
void QProgressBar_EnterEvent(void* ptr, void* event);
void QProgressBar_EnterEventDefault(void* ptr, void* event);
void QProgressBar_FocusInEvent(void* ptr, void* event);
void QProgressBar_FocusInEventDefault(void* ptr, void* event);
void QProgressBar_FocusOutEvent(void* ptr, void* event);
void QProgressBar_FocusOutEventDefault(void* ptr, void* event);
void QProgressBar_HideEvent(void* ptr, void* event);
void QProgressBar_HideEventDefault(void* ptr, void* event);
void QProgressBar_LeaveEvent(void* ptr, void* event);
void QProgressBar_LeaveEventDefault(void* ptr, void* event);
void QProgressBar_MoveEvent(void* ptr, void* event);
void QProgressBar_MoveEventDefault(void* ptr, void* event);
void QProgressBar_SetVisible(void* ptr, int visible);
void QProgressBar_SetVisibleDefault(void* ptr, int visible);
void QProgressBar_ShowEvent(void* ptr, void* event);
void QProgressBar_ShowEventDefault(void* ptr, void* event);
void QProgressBar_ChangeEvent(void* ptr, void* event);
void QProgressBar_ChangeEventDefault(void* ptr, void* event);
void QProgressBar_CloseEvent(void* ptr, void* event);
void QProgressBar_CloseEventDefault(void* ptr, void* event);
void QProgressBar_ContextMenuEvent(void* ptr, void* event);
void QProgressBar_ContextMenuEventDefault(void* ptr, void* event);
void QProgressBar_InitPainter(void* ptr, void* painter);
void QProgressBar_InitPainterDefault(void* ptr, void* painter);
void QProgressBar_InputMethodEvent(void* ptr, void* event);
void QProgressBar_InputMethodEventDefault(void* ptr, void* event);
void QProgressBar_KeyPressEvent(void* ptr, void* event);
void QProgressBar_KeyPressEventDefault(void* ptr, void* event);
void QProgressBar_KeyReleaseEvent(void* ptr, void* event);
void QProgressBar_KeyReleaseEventDefault(void* ptr, void* event);
void QProgressBar_MouseDoubleClickEvent(void* ptr, void* event);
void QProgressBar_MouseDoubleClickEventDefault(void* ptr, void* event);
void QProgressBar_MouseMoveEvent(void* ptr, void* event);
void QProgressBar_MouseMoveEventDefault(void* ptr, void* event);
void QProgressBar_MousePressEvent(void* ptr, void* event);
void QProgressBar_MousePressEventDefault(void* ptr, void* event);
void QProgressBar_MouseReleaseEvent(void* ptr, void* event);
void QProgressBar_MouseReleaseEventDefault(void* ptr, void* event);
void QProgressBar_ResizeEvent(void* ptr, void* event);
void QProgressBar_ResizeEventDefault(void* ptr, void* event);
void QProgressBar_TabletEvent(void* ptr, void* event);
void QProgressBar_TabletEventDefault(void* ptr, void* event);
void QProgressBar_WheelEvent(void* ptr, void* event);
void QProgressBar_WheelEventDefault(void* ptr, void* event);
void QProgressBar_TimerEvent(void* ptr, void* event);
void QProgressBar_TimerEventDefault(void* ptr, void* event);
void QProgressBar_ChildEvent(void* ptr, void* event);
void QProgressBar_ChildEventDefault(void* ptr, void* event);
void QProgressBar_CustomEvent(void* ptr, void* event);
void QProgressBar_CustomEventDefault(void* ptr, void* event);
int QProgressDialog_AutoClose(void* ptr);
int QProgressDialog_AutoReset(void* ptr);
char* QProgressDialog_LabelText(void* ptr);
int QProgressDialog_Maximum(void* ptr);
int QProgressDialog_Minimum(void* ptr);
int QProgressDialog_MinimumDuration(void* ptr);
void QProgressDialog_SetAutoClose(void* ptr, int close);
void QProgressDialog_SetAutoReset(void* ptr, int reset);
void QProgressDialog_SetLabelText(void* ptr, char* text);
void QProgressDialog_SetMaximum(void* ptr, int maximum);
void QProgressDialog_SetMinimum(void* ptr, int minimum);
void QProgressDialog_SetMinimumDuration(void* ptr, int ms);
void QProgressDialog_SetValue(void* ptr, int progress);
int QProgressDialog_Value(void* ptr);
int QProgressDialog_WasCanceled(void* ptr);
void* QProgressDialog_NewQProgressDialog(void* parent, int f);
void* QProgressDialog_NewQProgressDialog2(char* labelText, char* cancelButtonText, int minimum, int maximum, void* parent, int f);
void QProgressDialog_Cancel(void* ptr);
void QProgressDialog_ConnectCanceled(void* ptr);
void QProgressDialog_DisconnectCanceled(void* ptr);
void QProgressDialog_Canceled(void* ptr);
void QProgressDialog_ChangeEvent(void* ptr, void* ev);
void QProgressDialog_ChangeEventDefault(void* ptr, void* ev);
void QProgressDialog_CloseEvent(void* ptr, void* e);
void QProgressDialog_CloseEventDefault(void* ptr, void* e);
void QProgressDialog_Open(void* ptr, void* receiver, char* member);
void QProgressDialog_Reset(void* ptr);
void QProgressDialog_ResizeEvent(void* ptr, void* event);
void QProgressDialog_ResizeEventDefault(void* ptr, void* event);
void QProgressDialog_SetBar(void* ptr, void* bar);
void QProgressDialog_SetCancelButton(void* ptr, void* cancelButton);
void QProgressDialog_SetCancelButtonText(void* ptr, char* cancelButtonText);
void QProgressDialog_SetLabel(void* ptr, void* label);
void QProgressDialog_SetRange(void* ptr, int minimum, int maximum);
void QProgressDialog_ShowEvent(void* ptr, void* e);
void QProgressDialog_ShowEventDefault(void* ptr, void* e);
void* QProgressDialog_SizeHint(void* ptr);
void* QProgressDialog_SizeHintDefault(void* ptr);
void QProgressDialog_DestroyQProgressDialog(void* ptr);
void QProgressDialog_Accept(void* ptr);
void QProgressDialog_AcceptDefault(void* ptr);
void QProgressDialog_ContextMenuEvent(void* ptr, void* e);
void QProgressDialog_ContextMenuEventDefault(void* ptr, void* e);
void QProgressDialog_Done(void* ptr, int r);
void QProgressDialog_DoneDefault(void* ptr, int r);
void QProgressDialog_KeyPressEvent(void* ptr, void* e);
void QProgressDialog_KeyPressEventDefault(void* ptr, void* e);
void QProgressDialog_Reject(void* ptr);
void QProgressDialog_RejectDefault(void* ptr);
void QProgressDialog_SetVisible(void* ptr, int visible);
void QProgressDialog_SetVisibleDefault(void* ptr, int visible);
void QProgressDialog_ActionEvent(void* ptr, void* event);
void QProgressDialog_ActionEventDefault(void* ptr, void* event);
void QProgressDialog_DragEnterEvent(void* ptr, void* event);
void QProgressDialog_DragEnterEventDefault(void* ptr, void* event);
void QProgressDialog_DragLeaveEvent(void* ptr, void* event);
void QProgressDialog_DragLeaveEventDefault(void* ptr, void* event);
void QProgressDialog_DragMoveEvent(void* ptr, void* event);
void QProgressDialog_DragMoveEventDefault(void* ptr, void* event);
void QProgressDialog_DropEvent(void* ptr, void* event);
void QProgressDialog_DropEventDefault(void* ptr, void* event);
void QProgressDialog_EnterEvent(void* ptr, void* event);
void QProgressDialog_EnterEventDefault(void* ptr, void* event);
void QProgressDialog_FocusInEvent(void* ptr, void* event);
void QProgressDialog_FocusInEventDefault(void* ptr, void* event);
void QProgressDialog_FocusOutEvent(void* ptr, void* event);
void QProgressDialog_FocusOutEventDefault(void* ptr, void* event);
void QProgressDialog_HideEvent(void* ptr, void* event);
void QProgressDialog_HideEventDefault(void* ptr, void* event);
void QProgressDialog_LeaveEvent(void* ptr, void* event);
void QProgressDialog_LeaveEventDefault(void* ptr, void* event);
void QProgressDialog_MoveEvent(void* ptr, void* event);
void QProgressDialog_MoveEventDefault(void* ptr, void* event);
void QProgressDialog_PaintEvent(void* ptr, void* event);
void QProgressDialog_PaintEventDefault(void* ptr, void* event);
void QProgressDialog_InitPainter(void* ptr, void* painter);
void QProgressDialog_InitPainterDefault(void* ptr, void* painter);
void QProgressDialog_InputMethodEvent(void* ptr, void* event);
void QProgressDialog_InputMethodEventDefault(void* ptr, void* event);
void QProgressDialog_KeyReleaseEvent(void* ptr, void* event);
void QProgressDialog_KeyReleaseEventDefault(void* ptr, void* event);
void QProgressDialog_MouseDoubleClickEvent(void* ptr, void* event);
void QProgressDialog_MouseDoubleClickEventDefault(void* ptr, void* event);
void QProgressDialog_MouseMoveEvent(void* ptr, void* event);
void QProgressDialog_MouseMoveEventDefault(void* ptr, void* event);
void QProgressDialog_MousePressEvent(void* ptr, void* event);
void QProgressDialog_MousePressEventDefault(void* ptr, void* event);
void QProgressDialog_MouseReleaseEvent(void* ptr, void* event);
void QProgressDialog_MouseReleaseEventDefault(void* ptr, void* event);
void QProgressDialog_TabletEvent(void* ptr, void* event);
void QProgressDialog_TabletEventDefault(void* ptr, void* event);
void QProgressDialog_WheelEvent(void* ptr, void* event);
void QProgressDialog_WheelEventDefault(void* ptr, void* event);
void QProgressDialog_TimerEvent(void* ptr, void* event);
void QProgressDialog_TimerEventDefault(void* ptr, void* event);
void QProgressDialog_ChildEvent(void* ptr, void* event);
void QProgressDialog_ChildEventDefault(void* ptr, void* event);
void QProgressDialog_CustomEvent(void* ptr, void* event);
void QProgressDialog_CustomEventDefault(void* ptr, void* event);
void* QProxyStyle_BaseStyle(void* ptr);
void QProxyStyle_DrawComplexControl(void* ptr, int control, void* option, void* painter, void* widget);
void QProxyStyle_DrawComplexControlDefault(void* ptr, int control, void* option, void* painter, void* widget);
void QProxyStyle_DrawControl(void* ptr, int element, void* option, void* painter, void* widget);
void QProxyStyle_DrawControlDefault(void* ptr, int element, void* option, void* painter, void* widget);
void QProxyStyle_DrawPrimitive(void* ptr, int element, void* option, void* painter, void* widget);
void QProxyStyle_DrawPrimitiveDefault(void* ptr, int element, void* option, void* painter, void* widget);
int QProxyStyle_Event(void* ptr, void* e);
int QProxyStyle_EventDefault(void* ptr, void* e);
int QProxyStyle_HitTestComplexControl(void* ptr, int control, void* option, void* pos, void* widget);
int QProxyStyle_HitTestComplexControlDefault(void* ptr, int control, void* option, void* pos, void* widget);
void* QProxyStyle_ItemPixmapRect(void* ptr, void* r, int flags, void* pixmap);
void* QProxyStyle_ItemPixmapRectDefault(void* ptr, void* r, int flags, void* pixmap);
void* QProxyStyle_ItemTextRect(void* ptr, void* fm, void* r, int flags, int enabled, char* text);
void* QProxyStyle_ItemTextRectDefault(void* ptr, void* fm, void* r, int flags, int enabled, char* text);
int QProxyStyle_LayoutSpacing(void* ptr, int control1, int control2, int orientation, void* option, void* widget);
int QProxyStyle_LayoutSpacingDefault(void* ptr, int control1, int control2, int orientation, void* option, void* widget);
int QProxyStyle_PixelMetric(void* ptr, int metric, void* option, void* widget);
int QProxyStyle_PixelMetricDefault(void* ptr, int metric, void* option, void* widget);
void QProxyStyle_Polish(void* ptr, void* widget);
void QProxyStyle_PolishDefault(void* ptr, void* widget);
void QProxyStyle_SetBaseStyle(void* ptr, void* style);
void* QProxyStyle_SizeFromContents(void* ptr, int ty, void* option, void* size, void* widget);
void* QProxyStyle_SizeFromContentsDefault(void* ptr, int ty, void* option, void* size, void* widget);
void* QProxyStyle_StandardIcon(void* ptr, int standardIcon, void* option, void* widget);
void* QProxyStyle_StandardIconDefault(void* ptr, int standardIcon, void* option, void* widget);
int QProxyStyle_StyleHint(void* ptr, int hint, void* option, void* widget, void* returnData);
int QProxyStyle_StyleHintDefault(void* ptr, int hint, void* option, void* widget, void* returnData);
void* QProxyStyle_SubControlRect(void* ptr, int cc, void* option, int sc, void* widget);
void* QProxyStyle_SubControlRectDefault(void* ptr, int cc, void* option, int sc, void* widget);
void* QProxyStyle_SubElementRect(void* ptr, int element, void* option, void* widget);
void* QProxyStyle_SubElementRectDefault(void* ptr, int element, void* option, void* widget);
void QProxyStyle_Unpolish(void* ptr, void* widget);
void QProxyStyle_UnpolishDefault(void* ptr, void* widget);
void QProxyStyle_DestroyQProxyStyle(void* ptr);
void QProxyStyle_TimerEvent(void* ptr, void* event);
void QProxyStyle_TimerEventDefault(void* ptr, void* event);
void QProxyStyle_ChildEvent(void* ptr, void* event);
void QProxyStyle_ChildEventDefault(void* ptr, void* event);
void QProxyStyle_CustomEvent(void* ptr, void* event);
void QProxyStyle_CustomEventDefault(void* ptr, void* event);
int QPushButton_AutoDefault(void* ptr);
int QPushButton_IsDefault(void* ptr);
int QPushButton_IsFlat(void* ptr);
void QPushButton_SetAutoDefault(void* ptr, int v);
void QPushButton_SetDefault(void* ptr, int v);
void QPushButton_SetFlat(void* ptr, int v);
void* QPushButton_NewQPushButton(void* parent);
void* QPushButton_NewQPushButton3(void* icon, char* text, void* parent);
void* QPushButton_NewQPushButton2(char* text, void* parent);
int QPushButton_Event(void* ptr, void* e);
int QPushButton_EventDefault(void* ptr, void* e);
void QPushButton_FocusInEvent(void* ptr, void* e);
void QPushButton_FocusInEventDefault(void* ptr, void* e);
void QPushButton_FocusOutEvent(void* ptr, void* e);
void QPushButton_FocusOutEventDefault(void* ptr, void* e);
int QPushButton_HitButton(void* ptr, void* pos);
int QPushButton_HitButtonDefault(void* ptr, void* pos);
void QPushButton_KeyPressEvent(void* ptr, void* e);
void QPushButton_KeyPressEventDefault(void* ptr, void* e);
void* QPushButton_Menu(void* ptr);
void* QPushButton_MinimumSizeHint(void* ptr);
void* QPushButton_MinimumSizeHintDefault(void* ptr);
void QPushButton_PaintEvent(void* ptr, void* v);
void QPushButton_PaintEventDefault(void* ptr, void* v);
void QPushButton_SetMenu(void* ptr, void* menu);
void QPushButton_ShowMenu(void* ptr);
void* QPushButton_SizeHint(void* ptr);
void* QPushButton_SizeHintDefault(void* ptr);
void QPushButton_DestroyQPushButton(void* ptr);
void QPushButton_ChangeEvent(void* ptr, void* e);
void QPushButton_ChangeEventDefault(void* ptr, void* e);
void QPushButton_CheckStateSet(void* ptr);
void QPushButton_CheckStateSetDefault(void* ptr);
void QPushButton_KeyReleaseEvent(void* ptr, void* e);
void QPushButton_KeyReleaseEventDefault(void* ptr, void* e);
void QPushButton_MouseMoveEvent(void* ptr, void* e);
void QPushButton_MouseMoveEventDefault(void* ptr, void* e);
void QPushButton_MousePressEvent(void* ptr, void* e);
void QPushButton_MousePressEventDefault(void* ptr, void* e);
void QPushButton_MouseReleaseEvent(void* ptr, void* e);
void QPushButton_MouseReleaseEventDefault(void* ptr, void* e);
void QPushButton_NextCheckState(void* ptr);
void QPushButton_NextCheckStateDefault(void* ptr);
void QPushButton_TimerEvent(void* ptr, void* e);
void QPushButton_TimerEventDefault(void* ptr, void* e);
void QPushButton_ActionEvent(void* ptr, void* event);
void QPushButton_ActionEventDefault(void* ptr, void* event);
void QPushButton_DragEnterEvent(void* ptr, void* event);
void QPushButton_DragEnterEventDefault(void* ptr, void* event);
void QPushButton_DragLeaveEvent(void* ptr, void* event);
void QPushButton_DragLeaveEventDefault(void* ptr, void* event);
void QPushButton_DragMoveEvent(void* ptr, void* event);
void QPushButton_DragMoveEventDefault(void* ptr, void* event);
void QPushButton_DropEvent(void* ptr, void* event);
void QPushButton_DropEventDefault(void* ptr, void* event);
void QPushButton_EnterEvent(void* ptr, void* event);
void QPushButton_EnterEventDefault(void* ptr, void* event);
void QPushButton_HideEvent(void* ptr, void* event);
void QPushButton_HideEventDefault(void* ptr, void* event);
void QPushButton_LeaveEvent(void* ptr, void* event);
void QPushButton_LeaveEventDefault(void* ptr, void* event);
void QPushButton_MoveEvent(void* ptr, void* event);
void QPushButton_MoveEventDefault(void* ptr, void* event);
void QPushButton_SetVisible(void* ptr, int visible);
void QPushButton_SetVisibleDefault(void* ptr, int visible);
void QPushButton_ShowEvent(void* ptr, void* event);
void QPushButton_ShowEventDefault(void* ptr, void* event);
void QPushButton_CloseEvent(void* ptr, void* event);
void QPushButton_CloseEventDefault(void* ptr, void* event);
void QPushButton_ContextMenuEvent(void* ptr, void* event);
void QPushButton_ContextMenuEventDefault(void* ptr, void* event);
void QPushButton_InitPainter(void* ptr, void* painter);
void QPushButton_InitPainterDefault(void* ptr, void* painter);
void QPushButton_InputMethodEvent(void* ptr, void* event);
void QPushButton_InputMethodEventDefault(void* ptr, void* event);
void QPushButton_MouseDoubleClickEvent(void* ptr, void* event);
void QPushButton_MouseDoubleClickEventDefault(void* ptr, void* event);
void QPushButton_ResizeEvent(void* ptr, void* event);
void QPushButton_ResizeEventDefault(void* ptr, void* event);
void QPushButton_TabletEvent(void* ptr, void* event);
void QPushButton_TabletEventDefault(void* ptr, void* event);
void QPushButton_WheelEvent(void* ptr, void* event);
void QPushButton_WheelEventDefault(void* ptr, void* event);
void QPushButton_ChildEvent(void* ptr, void* event);
void QPushButton_ChildEventDefault(void* ptr, void* event);
void QPushButton_CustomEvent(void* ptr, void* event);
void QPushButton_CustomEventDefault(void* ptr, void* event);
void* QRadioButton_NewQRadioButton(void* parent);
void* QRadioButton_NewQRadioButton2(char* text, void* parent);
int QRadioButton_Event(void* ptr, void* e);
int QRadioButton_EventDefault(void* ptr, void* e);
int QRadioButton_HitButton(void* ptr, void* pos);
int QRadioButton_HitButtonDefault(void* ptr, void* pos);
void* QRadioButton_MinimumSizeHint(void* ptr);
void* QRadioButton_MinimumSizeHintDefault(void* ptr);
void QRadioButton_MouseMoveEvent(void* ptr, void* e);
void QRadioButton_MouseMoveEventDefault(void* ptr, void* e);
void QRadioButton_PaintEvent(void* ptr, void* v);
void QRadioButton_PaintEventDefault(void* ptr, void* v);
void* QRadioButton_SizeHint(void* ptr);
void* QRadioButton_SizeHintDefault(void* ptr);
void QRadioButton_DestroyQRadioButton(void* ptr);
void QRadioButton_ChangeEvent(void* ptr, void* e);
void QRadioButton_ChangeEventDefault(void* ptr, void* e);
void QRadioButton_CheckStateSet(void* ptr);
void QRadioButton_CheckStateSetDefault(void* ptr);
void QRadioButton_FocusInEvent(void* ptr, void* e);
void QRadioButton_FocusInEventDefault(void* ptr, void* e);
void QRadioButton_FocusOutEvent(void* ptr, void* e);
void QRadioButton_FocusOutEventDefault(void* ptr, void* e);
void QRadioButton_KeyPressEvent(void* ptr, void* e);
void QRadioButton_KeyPressEventDefault(void* ptr, void* e);
void QRadioButton_KeyReleaseEvent(void* ptr, void* e);
void QRadioButton_KeyReleaseEventDefault(void* ptr, void* e);
void QRadioButton_MousePressEvent(void* ptr, void* e);
void QRadioButton_MousePressEventDefault(void* ptr, void* e);
void QRadioButton_MouseReleaseEvent(void* ptr, void* e);
void QRadioButton_MouseReleaseEventDefault(void* ptr, void* e);
void QRadioButton_NextCheckState(void* ptr);
void QRadioButton_NextCheckStateDefault(void* ptr);
void QRadioButton_TimerEvent(void* ptr, void* e);
void QRadioButton_TimerEventDefault(void* ptr, void* e);
void QRadioButton_ActionEvent(void* ptr, void* event);
void QRadioButton_ActionEventDefault(void* ptr, void* event);
void QRadioButton_DragEnterEvent(void* ptr, void* event);
void QRadioButton_DragEnterEventDefault(void* ptr, void* event);
void QRadioButton_DragLeaveEvent(void* ptr, void* event);
void QRadioButton_DragLeaveEventDefault(void* ptr, void* event);
void QRadioButton_DragMoveEvent(void* ptr, void* event);
void QRadioButton_DragMoveEventDefault(void* ptr, void* event);
void QRadioButton_DropEvent(void* ptr, void* event);
void QRadioButton_DropEventDefault(void* ptr, void* event);
void QRadioButton_EnterEvent(void* ptr, void* event);
void QRadioButton_EnterEventDefault(void* ptr, void* event);
void QRadioButton_HideEvent(void* ptr, void* event);
void QRadioButton_HideEventDefault(void* ptr, void* event);
void QRadioButton_LeaveEvent(void* ptr, void* event);
void QRadioButton_LeaveEventDefault(void* ptr, void* event);
void QRadioButton_MoveEvent(void* ptr, void* event);
void QRadioButton_MoveEventDefault(void* ptr, void* event);
void QRadioButton_SetVisible(void* ptr, int visible);
void QRadioButton_SetVisibleDefault(void* ptr, int visible);
void QRadioButton_ShowEvent(void* ptr, void* event);
void QRadioButton_ShowEventDefault(void* ptr, void* event);
void QRadioButton_CloseEvent(void* ptr, void* event);
void QRadioButton_CloseEventDefault(void* ptr, void* event);
void QRadioButton_ContextMenuEvent(void* ptr, void* event);
void QRadioButton_ContextMenuEventDefault(void* ptr, void* event);
void QRadioButton_InitPainter(void* ptr, void* painter);
void QRadioButton_InitPainterDefault(void* ptr, void* painter);
void QRadioButton_InputMethodEvent(void* ptr, void* event);
void QRadioButton_InputMethodEventDefault(void* ptr, void* event);
void QRadioButton_MouseDoubleClickEvent(void* ptr, void* event);
void QRadioButton_MouseDoubleClickEventDefault(void* ptr, void* event);
void QRadioButton_ResizeEvent(void* ptr, void* event);
void QRadioButton_ResizeEventDefault(void* ptr, void* event);
void QRadioButton_TabletEvent(void* ptr, void* event);
void QRadioButton_TabletEventDefault(void* ptr, void* event);
void QRadioButton_WheelEvent(void* ptr, void* event);
void QRadioButton_WheelEventDefault(void* ptr, void* event);
void QRadioButton_ChildEvent(void* ptr, void* event);
void QRadioButton_ChildEventDefault(void* ptr, void* event);
void QRadioButton_CustomEvent(void* ptr, void* event);
void QRadioButton_CustomEventDefault(void* ptr, void* event);
void QRubberBand_SetGeometry(void* ptr, void* rect);
void* QRubberBand_NewQRubberBand(int s, void* p);
void QRubberBand_ChangeEvent(void* ptr, void* e);
void QRubberBand_ChangeEventDefault(void* ptr, void* e);
int QRubberBand_Event(void* ptr, void* e);
int QRubberBand_EventDefault(void* ptr, void* e);
void QRubberBand_Move2(void* ptr, void* p);
void QRubberBand_Move(void* ptr, int x, int y);
void QRubberBand_MoveEvent(void* ptr, void* v);
void QRubberBand_MoveEventDefault(void* ptr, void* v);
void QRubberBand_PaintEvent(void* ptr, void* v);
void QRubberBand_PaintEventDefault(void* ptr, void* v);
void QRubberBand_Resize2(void* ptr, void* size);
void QRubberBand_Resize(void* ptr, int width, int height);
void QRubberBand_ResizeEvent(void* ptr, void* v);
void QRubberBand_ResizeEventDefault(void* ptr, void* v);
void QRubberBand_SetGeometry2(void* ptr, int x, int y, int width, int height);
int QRubberBand_Shape(void* ptr);
void QRubberBand_ShowEvent(void* ptr, void* e);
void QRubberBand_ShowEventDefault(void* ptr, void* e);
void QRubberBand_DestroyQRubberBand(void* ptr);
void QRubberBand_ActionEvent(void* ptr, void* event);
void QRubberBand_ActionEventDefault(void* ptr, void* event);
void QRubberBand_DragEnterEvent(void* ptr, void* event);
void QRubberBand_DragEnterEventDefault(void* ptr, void* event);
void QRubberBand_DragLeaveEvent(void* ptr, void* event);
void QRubberBand_DragLeaveEventDefault(void* ptr, void* event);
void QRubberBand_DragMoveEvent(void* ptr, void* event);
void QRubberBand_DragMoveEventDefault(void* ptr, void* event);
void QRubberBand_DropEvent(void* ptr, void* event);
void QRubberBand_DropEventDefault(void* ptr, void* event);
void QRubberBand_EnterEvent(void* ptr, void* event);
void QRubberBand_EnterEventDefault(void* ptr, void* event);
void QRubberBand_FocusInEvent(void* ptr, void* event);
void QRubberBand_FocusInEventDefault(void* ptr, void* event);
void QRubberBand_FocusOutEvent(void* ptr, void* event);
void QRubberBand_FocusOutEventDefault(void* ptr, void* event);
void QRubberBand_HideEvent(void* ptr, void* event);
void QRubberBand_HideEventDefault(void* ptr, void* event);
void QRubberBand_LeaveEvent(void* ptr, void* event);
void QRubberBand_LeaveEventDefault(void* ptr, void* event);
void QRubberBand_SetVisible(void* ptr, int visible);
void QRubberBand_SetVisibleDefault(void* ptr, int visible);
void QRubberBand_CloseEvent(void* ptr, void* event);
void QRubberBand_CloseEventDefault(void* ptr, void* event);
void QRubberBand_ContextMenuEvent(void* ptr, void* event);
void QRubberBand_ContextMenuEventDefault(void* ptr, void* event);
void QRubberBand_InitPainter(void* ptr, void* painter);
void QRubberBand_InitPainterDefault(void* ptr, void* painter);
void QRubberBand_InputMethodEvent(void* ptr, void* event);
void QRubberBand_InputMethodEventDefault(void* ptr, void* event);
void QRubberBand_KeyPressEvent(void* ptr, void* event);
void QRubberBand_KeyPressEventDefault(void* ptr, void* event);
void QRubberBand_KeyReleaseEvent(void* ptr, void* event);
void QRubberBand_KeyReleaseEventDefault(void* ptr, void* event);
void QRubberBand_MouseDoubleClickEvent(void* ptr, void* event);
void QRubberBand_MouseDoubleClickEventDefault(void* ptr, void* event);
void QRubberBand_MouseMoveEvent(void* ptr, void* event);
void QRubberBand_MouseMoveEventDefault(void* ptr, void* event);
void QRubberBand_MousePressEvent(void* ptr, void* event);
void QRubberBand_MousePressEventDefault(void* ptr, void* event);
void QRubberBand_MouseReleaseEvent(void* ptr, void* event);
void QRubberBand_MouseReleaseEventDefault(void* ptr, void* event);
void QRubberBand_TabletEvent(void* ptr, void* event);
void QRubberBand_TabletEventDefault(void* ptr, void* event);
void QRubberBand_WheelEvent(void* ptr, void* event);
void QRubberBand_WheelEventDefault(void* ptr, void* event);
void QRubberBand_TimerEvent(void* ptr, void* event);
void QRubberBand_TimerEventDefault(void* ptr, void* event);
void QRubberBand_ChildEvent(void* ptr, void* event);
void QRubberBand_ChildEventDefault(void* ptr, void* event);
void QRubberBand_CustomEvent(void* ptr, void* event);
void QRubberBand_CustomEventDefault(void* ptr, void* event);
int QScrollArea_Alignment(void* ptr);
void QScrollArea_SetAlignment(void* ptr, int v);
void QScrollArea_SetWidget(void* ptr, void* widget);
void QScrollArea_SetWidgetResizable(void* ptr, int resizable);
int QScrollArea_WidgetResizable(void* ptr);
void* QScrollArea_NewQScrollArea(void* parent);
void QScrollArea_EnsureVisible(void* ptr, int x, int y, int xmargin, int ymargin);
void QScrollArea_EnsureWidgetVisible(void* ptr, void* childWidget, int xmargin, int ymargin);
int QScrollArea_Event(void* ptr, void* e);
int QScrollArea_EventDefault(void* ptr, void* e);
int QScrollArea_EventFilter(void* ptr, void* o, void* e);
int QScrollArea_EventFilterDefault(void* ptr, void* o, void* e);
int QScrollArea_FocusNextPrevChild(void* ptr, int next);
int QScrollArea_FocusNextPrevChildDefault(void* ptr, int next);
void QScrollArea_ResizeEvent(void* ptr, void* v);
void QScrollArea_ResizeEventDefault(void* ptr, void* v);
void QScrollArea_ScrollContentsBy(void* ptr, int dx, int dy);
void QScrollArea_ScrollContentsByDefault(void* ptr, int dx, int dy);
void* QScrollArea_SizeHint(void* ptr);
void* QScrollArea_SizeHintDefault(void* ptr);
void* QScrollArea_TakeWidget(void* ptr);
void* QScrollArea_ViewportSizeHint(void* ptr);
void* QScrollArea_ViewportSizeHintDefault(void* ptr);
void* QScrollArea_Widget(void* ptr);
void QScrollArea_DestroyQScrollArea(void* ptr);
void QScrollArea_DragEnterEvent(void* ptr, void* event);
void QScrollArea_DragEnterEventDefault(void* ptr, void* event);
void QScrollArea_DragLeaveEvent(void* ptr, void* event);
void QScrollArea_DragLeaveEventDefault(void* ptr, void* event);
void QScrollArea_DragMoveEvent(void* ptr, void* event);
void QScrollArea_DragMoveEventDefault(void* ptr, void* event);
void QScrollArea_DropEvent(void* ptr, void* event);
void QScrollArea_DropEventDefault(void* ptr, void* event);
void QScrollArea_PaintEvent(void* ptr, void* event);
void QScrollArea_PaintEventDefault(void* ptr, void* event);
void QScrollArea_ContextMenuEvent(void* ptr, void* e);
void QScrollArea_ContextMenuEventDefault(void* ptr, void* e);
void QScrollArea_KeyPressEvent(void* ptr, void* e);
void QScrollArea_KeyPressEventDefault(void* ptr, void* e);
void QScrollArea_MouseDoubleClickEvent(void* ptr, void* e);
void QScrollArea_MouseDoubleClickEventDefault(void* ptr, void* e);
void QScrollArea_MouseMoveEvent(void* ptr, void* e);
void QScrollArea_MouseMoveEventDefault(void* ptr, void* e);
void QScrollArea_MousePressEvent(void* ptr, void* e);
void QScrollArea_MousePressEventDefault(void* ptr, void* e);
void QScrollArea_MouseReleaseEvent(void* ptr, void* e);
void QScrollArea_MouseReleaseEventDefault(void* ptr, void* e);
void QScrollArea_SetupViewport(void* ptr, void* viewport);
void QScrollArea_SetupViewportDefault(void* ptr, void* viewport);
void QScrollArea_WheelEvent(void* ptr, void* e);
void QScrollArea_WheelEventDefault(void* ptr, void* e);
void QScrollArea_ChangeEvent(void* ptr, void* ev);
void QScrollArea_ChangeEventDefault(void* ptr, void* ev);
void QScrollArea_ActionEvent(void* ptr, void* event);
void QScrollArea_ActionEventDefault(void* ptr, void* event);
void QScrollArea_EnterEvent(void* ptr, void* event);
void QScrollArea_EnterEventDefault(void* ptr, void* event);
void QScrollArea_FocusInEvent(void* ptr, void* event);
void QScrollArea_FocusInEventDefault(void* ptr, void* event);
void QScrollArea_FocusOutEvent(void* ptr, void* event);
void QScrollArea_FocusOutEventDefault(void* ptr, void* event);
void QScrollArea_HideEvent(void* ptr, void* event);
void QScrollArea_HideEventDefault(void* ptr, void* event);
void QScrollArea_LeaveEvent(void* ptr, void* event);
void QScrollArea_LeaveEventDefault(void* ptr, void* event);
void QScrollArea_MoveEvent(void* ptr, void* event);
void QScrollArea_MoveEventDefault(void* ptr, void* event);
void QScrollArea_SetVisible(void* ptr, int visible);
void QScrollArea_SetVisibleDefault(void* ptr, int visible);
void QScrollArea_ShowEvent(void* ptr, void* event);
void QScrollArea_ShowEventDefault(void* ptr, void* event);
void QScrollArea_CloseEvent(void* ptr, void* event);
void QScrollArea_CloseEventDefault(void* ptr, void* event);
void QScrollArea_InitPainter(void* ptr, void* painter);
void QScrollArea_InitPainterDefault(void* ptr, void* painter);
void QScrollArea_InputMethodEvent(void* ptr, void* event);
void QScrollArea_InputMethodEventDefault(void* ptr, void* event);
void QScrollArea_KeyReleaseEvent(void* ptr, void* event);
void QScrollArea_KeyReleaseEventDefault(void* ptr, void* event);
void QScrollArea_TabletEvent(void* ptr, void* event);
void QScrollArea_TabletEventDefault(void* ptr, void* event);
void QScrollArea_TimerEvent(void* ptr, void* event);
void QScrollArea_TimerEventDefault(void* ptr, void* event);
void QScrollArea_ChildEvent(void* ptr, void* event);
void QScrollArea_ChildEventDefault(void* ptr, void* event);
void QScrollArea_CustomEvent(void* ptr, void* event);
void QScrollArea_CustomEventDefault(void* ptr, void* event);
void* QScrollBar_NewQScrollBar(void* parent);
void* QScrollBar_NewQScrollBar2(int orientation, void* parent);
void QScrollBar_ContextMenuEvent(void* ptr, void* event);
void QScrollBar_ContextMenuEventDefault(void* ptr, void* event);
int QScrollBar_Event(void* ptr, void* event);
int QScrollBar_EventDefault(void* ptr, void* event);
void QScrollBar_HideEvent(void* ptr, void* v);
void QScrollBar_HideEventDefault(void* ptr, void* v);
void QScrollBar_MouseMoveEvent(void* ptr, void* e);
void QScrollBar_MouseMoveEventDefault(void* ptr, void* e);
void QScrollBar_MousePressEvent(void* ptr, void* e);
void QScrollBar_MousePressEventDefault(void* ptr, void* e);
void QScrollBar_MouseReleaseEvent(void* ptr, void* e);
void QScrollBar_MouseReleaseEventDefault(void* ptr, void* e);
void QScrollBar_PaintEvent(void* ptr, void* v);
void QScrollBar_PaintEventDefault(void* ptr, void* v);
void* QScrollBar_SizeHint(void* ptr);
void* QScrollBar_SizeHintDefault(void* ptr);
void QScrollBar_SliderChange(void* ptr, int change);
void QScrollBar_SliderChangeDefault(void* ptr, int change);
void QScrollBar_WheelEvent(void* ptr, void* event);
void QScrollBar_WheelEventDefault(void* ptr, void* event);
void QScrollBar_DestroyQScrollBar(void* ptr);
void QScrollBar_ChangeEvent(void* ptr, void* ev);
void QScrollBar_ChangeEventDefault(void* ptr, void* ev);
void QScrollBar_KeyPressEvent(void* ptr, void* ev);
void QScrollBar_KeyPressEventDefault(void* ptr, void* ev);
void QScrollBar_TimerEvent(void* ptr, void* e);
void QScrollBar_TimerEventDefault(void* ptr, void* e);
void QScrollBar_ActionEvent(void* ptr, void* event);
void QScrollBar_ActionEventDefault(void* ptr, void* event);
void QScrollBar_DragEnterEvent(void* ptr, void* event);
void QScrollBar_DragEnterEventDefault(void* ptr, void* event);
void QScrollBar_DragLeaveEvent(void* ptr, void* event);
void QScrollBar_DragLeaveEventDefault(void* ptr, void* event);
void QScrollBar_DragMoveEvent(void* ptr, void* event);
void QScrollBar_DragMoveEventDefault(void* ptr, void* event);
void QScrollBar_DropEvent(void* ptr, void* event);
void QScrollBar_DropEventDefault(void* ptr, void* event);
void QScrollBar_EnterEvent(void* ptr, void* event);
void QScrollBar_EnterEventDefault(void* ptr, void* event);
void QScrollBar_FocusInEvent(void* ptr, void* event);
void QScrollBar_FocusInEventDefault(void* ptr, void* event);
void QScrollBar_FocusOutEvent(void* ptr, void* event);
void QScrollBar_FocusOutEventDefault(void* ptr, void* event);
void QScrollBar_LeaveEvent(void* ptr, void* event);
void QScrollBar_LeaveEventDefault(void* ptr, void* event);
void QScrollBar_MoveEvent(void* ptr, void* event);
void QScrollBar_MoveEventDefault(void* ptr, void* event);
void QScrollBar_SetVisible(void* ptr, int visible);
void QScrollBar_SetVisibleDefault(void* ptr, int visible);
void QScrollBar_ShowEvent(void* ptr, void* event);
void QScrollBar_ShowEventDefault(void* ptr, void* event);
void QScrollBar_CloseEvent(void* ptr, void* event);
void QScrollBar_CloseEventDefault(void* ptr, void* event);
void QScrollBar_InitPainter(void* ptr, void* painter);
void QScrollBar_InitPainterDefault(void* ptr, void* painter);
void QScrollBar_InputMethodEvent(void* ptr, void* event);
void QScrollBar_InputMethodEventDefault(void* ptr, void* event);
void QScrollBar_KeyReleaseEvent(void* ptr, void* event);
void QScrollBar_KeyReleaseEventDefault(void* ptr, void* event);
void QScrollBar_MouseDoubleClickEvent(void* ptr, void* event);
void QScrollBar_MouseDoubleClickEventDefault(void* ptr, void* event);
void QScrollBar_ResizeEvent(void* ptr, void* event);
void QScrollBar_ResizeEventDefault(void* ptr, void* event);
void QScrollBar_TabletEvent(void* ptr, void* event);
void QScrollBar_TabletEventDefault(void* ptr, void* event);
void QScrollBar_ChildEvent(void* ptr, void* event);
void QScrollBar_ChildEventDefault(void* ptr, void* event);
void QScrollBar_CustomEvent(void* ptr, void* event);
void QScrollBar_CustomEventDefault(void* ptr, void* event);
void QScroller_SetScrollerProperties(void* ptr, void* prop);
int QScroller_State(void* ptr);
void QScroller_EnsureVisible(void* ptr, void* rect, double xmargin, double ymargin);
void QScroller_EnsureVisible2(void* ptr, void* rect, double xmargin, double ymargin, int scrollTime);
int QScroller_QScroller_GrabGesture(void* target, int scrollGestureType);
int QScroller_QScroller_GrabbedGesture(void* target);
int QScroller_HandleInput(void* ptr, int input, void* position, long long timestamp);
int QScroller_QScroller_HasScroller(void* target);
void QScroller_ResendPrepareEvent(void* ptr);
void QScroller_ScrollTo(void* ptr, void* pos);
void QScroller_ScrollTo2(void* ptr, void* pos, int scrollTime);
void* QScroller_QScroller_Scroller(void* target);
void* QScroller_QScroller_Scroller2(void* target);
void QScroller_SetSnapPositionsX2(void* ptr, double first, double interval);
void QScroller_SetSnapPositionsY2(void* ptr, double first, double interval);
void QScroller_ConnectStateChanged(void* ptr);
void QScroller_DisconnectStateChanged(void* ptr);
void QScroller_StateChanged(void* ptr, int newState);
void QScroller_Stop(void* ptr);
void* QScroller_Target(void* ptr);
void QScroller_QScroller_UngrabGesture(void* target);
void QScroller_TimerEvent(void* ptr, void* event);
void QScroller_TimerEventDefault(void* ptr, void* event);
void QScroller_ChildEvent(void* ptr, void* event);
void QScroller_ChildEventDefault(void* ptr, void* event);
void QScroller_CustomEvent(void* ptr, void* event);
void QScroller_CustomEventDefault(void* ptr, void* event);
void* QScrollerProperties_NewQScrollerProperties();
void* QScrollerProperties_NewQScrollerProperties2(void* sp);
void* QScrollerProperties_ScrollMetric(void* ptr, int metric);
void QScrollerProperties_QScrollerProperties_SetDefaultScrollerProperties(void* sp);
void QScrollerProperties_SetScrollMetric(void* ptr, int metric, void* value);
void QScrollerProperties_QScrollerProperties_UnsetDefaultScrollerProperties();
void QScrollerProperties_DestroyQScrollerProperties(void* ptr);
char* QScrollerProperties_ObjectNameAbs(void* ptr);
void QScrollerProperties_SetObjectNameAbs(void* ptr, char* name);
int QShortcut_AutoRepeat(void* ptr);
int QShortcut_Context(void* ptr);
int QShortcut_IsEnabled(void* ptr);
void QShortcut_SetAutoRepeat(void* ptr, int on);
void QShortcut_SetContext(void* ptr, int context);
void QShortcut_SetEnabled(void* ptr, int enable);
void QShortcut_SetKey(void* ptr, void* key);
void QShortcut_SetWhatsThis(void* ptr, char* text);
char* QShortcut_WhatsThis(void* ptr);
void* QShortcut_NewQShortcut(void* parent);
void* QShortcut_NewQShortcut2(void* key, void* parent, char* member, char* ambiguousMember, int context);
void QShortcut_ConnectActivated(void* ptr);
void QShortcut_DisconnectActivated(void* ptr);
void QShortcut_Activated(void* ptr);
void QShortcut_ConnectActivatedAmbiguously(void* ptr);
void QShortcut_DisconnectActivatedAmbiguously(void* ptr);
void QShortcut_ActivatedAmbiguously(void* ptr);
int QShortcut_Id(void* ptr);
void* QShortcut_ParentWidget(void* ptr);
void QShortcut_DestroyQShortcut(void* ptr);
void QShortcut_TimerEvent(void* ptr, void* event);
void QShortcut_TimerEventDefault(void* ptr, void* event);
void QShortcut_ChildEvent(void* ptr, void* event);
void QShortcut_ChildEventDefault(void* ptr, void* event);
void QShortcut_CustomEvent(void* ptr, void* event);
void QShortcut_CustomEventDefault(void* ptr, void* event);
void QSizeGrip_MouseMoveEvent(void* ptr, void* event);
void QSizeGrip_MouseMoveEventDefault(void* ptr, void* event);
void QSizeGrip_MousePressEvent(void* ptr, void* event);
void QSizeGrip_MousePressEventDefault(void* ptr, void* event);
void* QSizeGrip_NewQSizeGrip(void* parent);
int QSizeGrip_Event(void* ptr, void* event);
int QSizeGrip_EventDefault(void* ptr, void* event);
int QSizeGrip_EventFilter(void* ptr, void* o, void* e);
int QSizeGrip_EventFilterDefault(void* ptr, void* o, void* e);
void QSizeGrip_HideEvent(void* ptr, void* hideEvent);
void QSizeGrip_HideEventDefault(void* ptr, void* hideEvent);
void QSizeGrip_MouseReleaseEvent(void* ptr, void* mouseEvent);
void QSizeGrip_MouseReleaseEventDefault(void* ptr, void* mouseEvent);
void QSizeGrip_MoveEvent(void* ptr, void* moveEvent);
void QSizeGrip_MoveEventDefault(void* ptr, void* moveEvent);
void QSizeGrip_PaintEvent(void* ptr, void* event);
void QSizeGrip_PaintEventDefault(void* ptr, void* event);
void QSizeGrip_SetVisible(void* ptr, int visible);
void QSizeGrip_SetVisibleDefault(void* ptr, int visible);
void QSizeGrip_ShowEvent(void* ptr, void* showEvent);
void QSizeGrip_ShowEventDefault(void* ptr, void* showEvent);
void* QSizeGrip_SizeHint(void* ptr);
void* QSizeGrip_SizeHintDefault(void* ptr);
void QSizeGrip_DestroyQSizeGrip(void* ptr);
void QSizeGrip_ActionEvent(void* ptr, void* event);
void QSizeGrip_ActionEventDefault(void* ptr, void* event);
void QSizeGrip_DragEnterEvent(void* ptr, void* event);
void QSizeGrip_DragEnterEventDefault(void* ptr, void* event);
void QSizeGrip_DragLeaveEvent(void* ptr, void* event);
void QSizeGrip_DragLeaveEventDefault(void* ptr, void* event);
void QSizeGrip_DragMoveEvent(void* ptr, void* event);
void QSizeGrip_DragMoveEventDefault(void* ptr, void* event);
void QSizeGrip_DropEvent(void* ptr, void* event);
void QSizeGrip_DropEventDefault(void* ptr, void* event);
void QSizeGrip_EnterEvent(void* ptr, void* event);
void QSizeGrip_EnterEventDefault(void* ptr, void* event);
void QSizeGrip_FocusInEvent(void* ptr, void* event);
void QSizeGrip_FocusInEventDefault(void* ptr, void* event);
void QSizeGrip_FocusOutEvent(void* ptr, void* event);
void QSizeGrip_FocusOutEventDefault(void* ptr, void* event);
void QSizeGrip_LeaveEvent(void* ptr, void* event);
void QSizeGrip_LeaveEventDefault(void* ptr, void* event);
void QSizeGrip_ChangeEvent(void* ptr, void* event);
void QSizeGrip_ChangeEventDefault(void* ptr, void* event);
void QSizeGrip_CloseEvent(void* ptr, void* event);
void QSizeGrip_CloseEventDefault(void* ptr, void* event);
void QSizeGrip_ContextMenuEvent(void* ptr, void* event);
void QSizeGrip_ContextMenuEventDefault(void* ptr, void* event);
void QSizeGrip_InitPainter(void* ptr, void* painter);
void QSizeGrip_InitPainterDefault(void* ptr, void* painter);
void QSizeGrip_InputMethodEvent(void* ptr, void* event);
void QSizeGrip_InputMethodEventDefault(void* ptr, void* event);
void QSizeGrip_KeyPressEvent(void* ptr, void* event);
void QSizeGrip_KeyPressEventDefault(void* ptr, void* event);
void QSizeGrip_KeyReleaseEvent(void* ptr, void* event);
void QSizeGrip_KeyReleaseEventDefault(void* ptr, void* event);
void QSizeGrip_MouseDoubleClickEvent(void* ptr, void* event);
void QSizeGrip_MouseDoubleClickEventDefault(void* ptr, void* event);
void QSizeGrip_ResizeEvent(void* ptr, void* event);
void QSizeGrip_ResizeEventDefault(void* ptr, void* event);
void QSizeGrip_TabletEvent(void* ptr, void* event);
void QSizeGrip_TabletEventDefault(void* ptr, void* event);
void QSizeGrip_WheelEvent(void* ptr, void* event);
void QSizeGrip_WheelEventDefault(void* ptr, void* event);
void QSizeGrip_TimerEvent(void* ptr, void* event);
void QSizeGrip_TimerEventDefault(void* ptr, void* event);
void QSizeGrip_ChildEvent(void* ptr, void* event);
void QSizeGrip_ChildEventDefault(void* ptr, void* event);
void QSizeGrip_CustomEvent(void* ptr, void* event);
void QSizeGrip_CustomEventDefault(void* ptr, void* event);
void* QSizePolicy_NewQSizePolicy();
void* QSizePolicy_NewQSizePolicy2(int horizontal, int vertical, int ty);
int QSizePolicy_ControlType(void* ptr);
int QSizePolicy_ExpandingDirections(void* ptr);
int QSizePolicy_HasHeightForWidth(void* ptr);
int QSizePolicy_HasWidthForHeight(void* ptr);
int QSizePolicy_HorizontalPolicy(void* ptr);
int QSizePolicy_HorizontalStretch(void* ptr);
int QSizePolicy_RetainSizeWhenHidden(void* ptr);
void QSizePolicy_SetControlType(void* ptr, int ty);
void QSizePolicy_SetHeightForWidth(void* ptr, int dependent);
void QSizePolicy_SetHorizontalPolicy(void* ptr, int policy);
void QSizePolicy_SetHorizontalStretch(void* ptr, int stretchFactor);
void QSizePolicy_SetRetainSizeWhenHidden(void* ptr, int retainSize);
void QSizePolicy_SetVerticalPolicy(void* ptr, int policy);
void QSizePolicy_SetVerticalStretch(void* ptr, int stretchFactor);
void QSizePolicy_SetWidthForHeight(void* ptr, int dependent);
void QSizePolicy_Transpose(void* ptr);
int QSizePolicy_VerticalPolicy(void* ptr);
int QSizePolicy_VerticalStretch(void* ptr);
void QSlider_SetTickInterval(void* ptr, int ti);
void QSlider_SetTickPosition(void* ptr, int position);
int QSlider_TickInterval(void* ptr);
int QSlider_TickPosition(void* ptr);
void* QSlider_NewQSlider(void* parent);
void* QSlider_NewQSlider2(int orientation, void* parent);
int QSlider_Event(void* ptr, void* event);
int QSlider_EventDefault(void* ptr, void* event);
void* QSlider_MinimumSizeHint(void* ptr);
void* QSlider_MinimumSizeHintDefault(void* ptr);
void QSlider_MouseMoveEvent(void* ptr, void* ev);
void QSlider_MouseMoveEventDefault(void* ptr, void* ev);
void QSlider_MousePressEvent(void* ptr, void* ev);
void QSlider_MousePressEventDefault(void* ptr, void* ev);
void QSlider_MouseReleaseEvent(void* ptr, void* ev);
void QSlider_MouseReleaseEventDefault(void* ptr, void* ev);
void QSlider_PaintEvent(void* ptr, void* ev);
void QSlider_PaintEventDefault(void* ptr, void* ev);
void* QSlider_SizeHint(void* ptr);
void* QSlider_SizeHintDefault(void* ptr);
void QSlider_DestroyQSlider(void* ptr);
void QSlider_ChangeEvent(void* ptr, void* ev);
void QSlider_ChangeEventDefault(void* ptr, void* ev);
void QSlider_KeyPressEvent(void* ptr, void* ev);
void QSlider_KeyPressEventDefault(void* ptr, void* ev);
void QSlider_SliderChange(void* ptr, int change);
void QSlider_SliderChangeDefault(void* ptr, int change);
void QSlider_TimerEvent(void* ptr, void* e);
void QSlider_TimerEventDefault(void* ptr, void* e);
void QSlider_WheelEvent(void* ptr, void* e);
void QSlider_WheelEventDefault(void* ptr, void* e);
void QSlider_ActionEvent(void* ptr, void* event);
void QSlider_ActionEventDefault(void* ptr, void* event);
void QSlider_DragEnterEvent(void* ptr, void* event);
void QSlider_DragEnterEventDefault(void* ptr, void* event);
void QSlider_DragLeaveEvent(void* ptr, void* event);
void QSlider_DragLeaveEventDefault(void* ptr, void* event);
void QSlider_DragMoveEvent(void* ptr, void* event);
void QSlider_DragMoveEventDefault(void* ptr, void* event);
void QSlider_DropEvent(void* ptr, void* event);
void QSlider_DropEventDefault(void* ptr, void* event);
void QSlider_EnterEvent(void* ptr, void* event);
void QSlider_EnterEventDefault(void* ptr, void* event);
void QSlider_FocusInEvent(void* ptr, void* event);
void QSlider_FocusInEventDefault(void* ptr, void* event);
void QSlider_FocusOutEvent(void* ptr, void* event);
void QSlider_FocusOutEventDefault(void* ptr, void* event);
void QSlider_HideEvent(void* ptr, void* event);
void QSlider_HideEventDefault(void* ptr, void* event);
void QSlider_LeaveEvent(void* ptr, void* event);
void QSlider_LeaveEventDefault(void* ptr, void* event);
void QSlider_MoveEvent(void* ptr, void* event);
void QSlider_MoveEventDefault(void* ptr, void* event);
void QSlider_SetVisible(void* ptr, int visible);
void QSlider_SetVisibleDefault(void* ptr, int visible);
void QSlider_ShowEvent(void* ptr, void* event);
void QSlider_ShowEventDefault(void* ptr, void* event);
void QSlider_CloseEvent(void* ptr, void* event);
void QSlider_CloseEventDefault(void* ptr, void* event);
void QSlider_ContextMenuEvent(void* ptr, void* event);
void QSlider_ContextMenuEventDefault(void* ptr, void* event);
void QSlider_InitPainter(void* ptr, void* painter);
void QSlider_InitPainterDefault(void* ptr, void* painter);
void QSlider_InputMethodEvent(void* ptr, void* event);
void QSlider_InputMethodEventDefault(void* ptr, void* event);
void QSlider_KeyReleaseEvent(void* ptr, void* event);
void QSlider_KeyReleaseEventDefault(void* ptr, void* event);
void QSlider_MouseDoubleClickEvent(void* ptr, void* event);
void QSlider_MouseDoubleClickEventDefault(void* ptr, void* event);
void QSlider_ResizeEvent(void* ptr, void* event);
void QSlider_ResizeEventDefault(void* ptr, void* event);
void QSlider_TabletEvent(void* ptr, void* event);
void QSlider_TabletEventDefault(void* ptr, void* event);
void QSlider_ChildEvent(void* ptr, void* event);
void QSlider_ChildEventDefault(void* ptr, void* event);
void QSlider_CustomEvent(void* ptr, void* event);
void QSlider_CustomEventDefault(void* ptr, void* event);
void* QSpacerItem_NewQSpacerItem(int w, int h, int hPolicy, int vPolicy);
void QSpacerItem_ChangeSize(void* ptr, int w, int h, int hPolicy, int vPolicy);
int QSpacerItem_ExpandingDirections(void* ptr);
int QSpacerItem_ExpandingDirectionsDefault(void* ptr);
void* QSpacerItem_Geometry(void* ptr);
void* QSpacerItem_GeometryDefault(void* ptr);
int QSpacerItem_IsEmpty(void* ptr);
int QSpacerItem_IsEmptyDefault(void* ptr);
void* QSpacerItem_MaximumSize(void* ptr);
void* QSpacerItem_MaximumSizeDefault(void* ptr);
void* QSpacerItem_MinimumSize(void* ptr);
void* QSpacerItem_MinimumSizeDefault(void* ptr);
void QSpacerItem_SetGeometry(void* ptr, void* r);
void QSpacerItem_SetGeometryDefault(void* ptr, void* r);
void* QSpacerItem_SizeHint(void* ptr);
void* QSpacerItem_SizeHintDefault(void* ptr);
void* QSpacerItem_SpacerItem(void* ptr);
void* QSpacerItem_SpacerItemDefault(void* ptr);
void QSpacerItem_DestroyQSpacerItem(void* ptr);
char* QSpacerItem_ObjectNameAbs(void* ptr);
void QSpacerItem_SetObjectNameAbs(void* ptr, char* name);
void QSpacerItem_Invalidate(void* ptr);
void QSpacerItem_InvalidateDefault(void* ptr);
char* QSpinBox_CleanText(void* ptr);
int QSpinBox_DisplayIntegerBase(void* ptr);
int QSpinBox_Maximum(void* ptr);
int QSpinBox_Minimum(void* ptr);
char* QSpinBox_Prefix(void* ptr);
void QSpinBox_SetDisplayIntegerBase(void* ptr, int base);
void QSpinBox_SetMaximum(void* ptr, int max);
void QSpinBox_SetMinimum(void* ptr, int min);
void QSpinBox_SetPrefix(void* ptr, char* prefix);
void QSpinBox_SetSingleStep(void* ptr, int val);
void QSpinBox_SetSuffix(void* ptr, char* suffix);
void QSpinBox_SetValue(void* ptr, int val);
int QSpinBox_SingleStep(void* ptr);
char* QSpinBox_Suffix(void* ptr);
int QSpinBox_Value(void* ptr);
int QSpinBox_ValueFromText(void* ptr, char* text);
int QSpinBox_ValueFromTextDefault(void* ptr, char* text);
void* QSpinBox_NewQSpinBox(void* parent);
int QSpinBox_Event(void* ptr, void* event);
int QSpinBox_EventDefault(void* ptr, void* event);
void QSpinBox_SetRange(void* ptr, int minimum, int maximum);
char* QSpinBox_TextFromValue(void* ptr, int value);
char* QSpinBox_TextFromValueDefault(void* ptr, int value);
void QSpinBox_ConnectValueChanged2(void* ptr);
void QSpinBox_DisconnectValueChanged2(void* ptr);
void QSpinBox_ValueChanged2(void* ptr, char* text);
void QSpinBox_ConnectValueChanged(void* ptr);
void QSpinBox_DisconnectValueChanged(void* ptr);
void QSpinBox_ValueChanged(void* ptr, int i);
void QSpinBox_DestroyQSpinBox(void* ptr);
void QSpinBox_ChangeEvent(void* ptr, void* event);
void QSpinBox_ChangeEventDefault(void* ptr, void* event);
void QSpinBox_Clear(void* ptr);
void QSpinBox_ClearDefault(void* ptr);
void QSpinBox_CloseEvent(void* ptr, void* event);
void QSpinBox_CloseEventDefault(void* ptr, void* event);
void QSpinBox_ContextMenuEvent(void* ptr, void* event);
void QSpinBox_ContextMenuEventDefault(void* ptr, void* event);
void QSpinBox_FocusInEvent(void* ptr, void* event);
void QSpinBox_FocusInEventDefault(void* ptr, void* event);
void QSpinBox_FocusOutEvent(void* ptr, void* event);
void QSpinBox_FocusOutEventDefault(void* ptr, void* event);
void QSpinBox_HideEvent(void* ptr, void* event);
void QSpinBox_HideEventDefault(void* ptr, void* event);
void QSpinBox_KeyPressEvent(void* ptr, void* event);
void QSpinBox_KeyPressEventDefault(void* ptr, void* event);
void QSpinBox_KeyReleaseEvent(void* ptr, void* event);
void QSpinBox_KeyReleaseEventDefault(void* ptr, void* event);
void QSpinBox_MouseMoveEvent(void* ptr, void* event);
void QSpinBox_MouseMoveEventDefault(void* ptr, void* event);
void QSpinBox_MousePressEvent(void* ptr, void* event);
void QSpinBox_MousePressEventDefault(void* ptr, void* event);
void QSpinBox_MouseReleaseEvent(void* ptr, void* event);
void QSpinBox_MouseReleaseEventDefault(void* ptr, void* event);
void QSpinBox_PaintEvent(void* ptr, void* event);
void QSpinBox_PaintEventDefault(void* ptr, void* event);
void QSpinBox_ResizeEvent(void* ptr, void* event);
void QSpinBox_ResizeEventDefault(void* ptr, void* event);
void QSpinBox_ShowEvent(void* ptr, void* event);
void QSpinBox_ShowEventDefault(void* ptr, void* event);
void QSpinBox_StepBy(void* ptr, int steps);
void QSpinBox_StepByDefault(void* ptr, int steps);
void QSpinBox_TimerEvent(void* ptr, void* event);
void QSpinBox_TimerEventDefault(void* ptr, void* event);
void QSpinBox_WheelEvent(void* ptr, void* event);
void QSpinBox_WheelEventDefault(void* ptr, void* event);
void QSpinBox_ActionEvent(void* ptr, void* event);
void QSpinBox_ActionEventDefault(void* ptr, void* event);
void QSpinBox_DragEnterEvent(void* ptr, void* event);
void QSpinBox_DragEnterEventDefault(void* ptr, void* event);
void QSpinBox_DragLeaveEvent(void* ptr, void* event);
void QSpinBox_DragLeaveEventDefault(void* ptr, void* event);
void QSpinBox_DragMoveEvent(void* ptr, void* event);
void QSpinBox_DragMoveEventDefault(void* ptr, void* event);
void QSpinBox_DropEvent(void* ptr, void* event);
void QSpinBox_DropEventDefault(void* ptr, void* event);
void QSpinBox_EnterEvent(void* ptr, void* event);
void QSpinBox_EnterEventDefault(void* ptr, void* event);
void QSpinBox_LeaveEvent(void* ptr, void* event);
void QSpinBox_LeaveEventDefault(void* ptr, void* event);
void QSpinBox_MoveEvent(void* ptr, void* event);
void QSpinBox_MoveEventDefault(void* ptr, void* event);
void QSpinBox_SetVisible(void* ptr, int visible);
void QSpinBox_SetVisibleDefault(void* ptr, int visible);
void QSpinBox_InitPainter(void* ptr, void* painter);
void QSpinBox_InitPainterDefault(void* ptr, void* painter);
void QSpinBox_InputMethodEvent(void* ptr, void* event);
void QSpinBox_InputMethodEventDefault(void* ptr, void* event);
void QSpinBox_MouseDoubleClickEvent(void* ptr, void* event);
void QSpinBox_MouseDoubleClickEventDefault(void* ptr, void* event);
void QSpinBox_TabletEvent(void* ptr, void* event);
void QSpinBox_TabletEventDefault(void* ptr, void* event);
void QSpinBox_ChildEvent(void* ptr, void* event);
void QSpinBox_ChildEventDefault(void* ptr, void* event);
void QSpinBox_CustomEvent(void* ptr, void* event);
void QSpinBox_CustomEventDefault(void* ptr, void* event);
void* QSplashScreen_NewQSplashScreen2(void* parent, void* pixmap, int f);
void* QSplashScreen_NewQSplashScreen(void* pixmap, int f);
void QSplashScreen_ClearMessage(void* ptr);
void QSplashScreen_DrawContents(void* ptr, void* painter);
void QSplashScreen_DrawContentsDefault(void* ptr, void* painter);
int QSplashScreen_Event(void* ptr, void* e);
int QSplashScreen_EventDefault(void* ptr, void* e);
void QSplashScreen_Finish(void* ptr, void* mainWin);
char* QSplashScreen_Message(void* ptr);
void QSplashScreen_ConnectMessageChanged(void* ptr);
void QSplashScreen_DisconnectMessageChanged(void* ptr);
void QSplashScreen_MessageChanged(void* ptr, char* message);
void QSplashScreen_MousePressEvent(void* ptr, void* v);
void QSplashScreen_MousePressEventDefault(void* ptr, void* v);
void QSplashScreen_Repaint(void* ptr);
void QSplashScreen_SetPixmap(void* ptr, void* pixmap);
void QSplashScreen_ShowMessage(void* ptr, char* message, int alignment, void* color);
void QSplashScreen_DestroyQSplashScreen(void* ptr);
void QSplashScreen_ActionEvent(void* ptr, void* event);
void QSplashScreen_ActionEventDefault(void* ptr, void* event);
void QSplashScreen_DragEnterEvent(void* ptr, void* event);
void QSplashScreen_DragEnterEventDefault(void* ptr, void* event);
void QSplashScreen_DragLeaveEvent(void* ptr, void* event);
void QSplashScreen_DragLeaveEventDefault(void* ptr, void* event);
void QSplashScreen_DragMoveEvent(void* ptr, void* event);
void QSplashScreen_DragMoveEventDefault(void* ptr, void* event);
void QSplashScreen_DropEvent(void* ptr, void* event);
void QSplashScreen_DropEventDefault(void* ptr, void* event);
void QSplashScreen_EnterEvent(void* ptr, void* event);
void QSplashScreen_EnterEventDefault(void* ptr, void* event);
void QSplashScreen_FocusInEvent(void* ptr, void* event);
void QSplashScreen_FocusInEventDefault(void* ptr, void* event);
void QSplashScreen_FocusOutEvent(void* ptr, void* event);
void QSplashScreen_FocusOutEventDefault(void* ptr, void* event);
void QSplashScreen_HideEvent(void* ptr, void* event);
void QSplashScreen_HideEventDefault(void* ptr, void* event);
void QSplashScreen_LeaveEvent(void* ptr, void* event);
void QSplashScreen_LeaveEventDefault(void* ptr, void* event);
void QSplashScreen_MoveEvent(void* ptr, void* event);
void QSplashScreen_MoveEventDefault(void* ptr, void* event);
void QSplashScreen_PaintEvent(void* ptr, void* event);
void QSplashScreen_PaintEventDefault(void* ptr, void* event);
void QSplashScreen_SetVisible(void* ptr, int visible);
void QSplashScreen_SetVisibleDefault(void* ptr, int visible);
void QSplashScreen_ShowEvent(void* ptr, void* event);
void QSplashScreen_ShowEventDefault(void* ptr, void* event);
void QSplashScreen_ChangeEvent(void* ptr, void* event);
void QSplashScreen_ChangeEventDefault(void* ptr, void* event);
void QSplashScreen_CloseEvent(void* ptr, void* event);
void QSplashScreen_CloseEventDefault(void* ptr, void* event);
void QSplashScreen_ContextMenuEvent(void* ptr, void* event);
void QSplashScreen_ContextMenuEventDefault(void* ptr, void* event);
void QSplashScreen_InitPainter(void* ptr, void* painter);
void QSplashScreen_InitPainterDefault(void* ptr, void* painter);
void QSplashScreen_InputMethodEvent(void* ptr, void* event);
void QSplashScreen_InputMethodEventDefault(void* ptr, void* event);
void QSplashScreen_KeyPressEvent(void* ptr, void* event);
void QSplashScreen_KeyPressEventDefault(void* ptr, void* event);
void QSplashScreen_KeyReleaseEvent(void* ptr, void* event);
void QSplashScreen_KeyReleaseEventDefault(void* ptr, void* event);
void QSplashScreen_MouseDoubleClickEvent(void* ptr, void* event);
void QSplashScreen_MouseDoubleClickEventDefault(void* ptr, void* event);
void QSplashScreen_MouseMoveEvent(void* ptr, void* event);
void QSplashScreen_MouseMoveEventDefault(void* ptr, void* event);
void QSplashScreen_MouseReleaseEvent(void* ptr, void* event);
void QSplashScreen_MouseReleaseEventDefault(void* ptr, void* event);
void QSplashScreen_ResizeEvent(void* ptr, void* event);
void QSplashScreen_ResizeEventDefault(void* ptr, void* event);
void QSplashScreen_TabletEvent(void* ptr, void* event);
void QSplashScreen_TabletEventDefault(void* ptr, void* event);
void QSplashScreen_WheelEvent(void* ptr, void* event);
void QSplashScreen_WheelEventDefault(void* ptr, void* event);
void QSplashScreen_TimerEvent(void* ptr, void* event);
void QSplashScreen_TimerEventDefault(void* ptr, void* event);
void QSplashScreen_ChildEvent(void* ptr, void* event);
void QSplashScreen_ChildEventDefault(void* ptr, void* event);
void QSplashScreen_CustomEvent(void* ptr, void* event);
void QSplashScreen_CustomEventDefault(void* ptr, void* event);
int QSplitter_ChildrenCollapsible(void* ptr);
int QSplitter_HandleWidth(void* ptr);
int QSplitter_IndexOf(void* ptr, void* widget);
int QSplitter_OpaqueResize(void* ptr);
int QSplitter_Orientation(void* ptr);
void QSplitter_SetChildrenCollapsible(void* ptr, int v);
void QSplitter_SetHandleWidth(void* ptr, int v);
void QSplitter_SetOpaqueResize(void* ptr, int opaque);
void QSplitter_SetOrientation(void* ptr, int v);
void* QSplitter_NewQSplitter(void* parent);
void* QSplitter_NewQSplitter2(int orientation, void* parent);
void QSplitter_AddWidget(void* ptr, void* widget);
void QSplitter_ChangeEvent(void* ptr, void* ev);
void QSplitter_ChangeEventDefault(void* ptr, void* ev);
void QSplitter_ChildEvent(void* ptr, void* c);
void QSplitter_ChildEventDefault(void* ptr, void* c);
int QSplitter_Count(void* ptr);
void* QSplitter_CreateHandle(void* ptr);
void* QSplitter_CreateHandleDefault(void* ptr);
int QSplitter_Event(void* ptr, void* e);
int QSplitter_EventDefault(void* ptr, void* e);
void QSplitter_GetRange(void* ptr, int index, int min, int max);
void* QSplitter_Handle(void* ptr, int index);
void QSplitter_InsertWidget(void* ptr, int index, void* widget);
int QSplitter_IsCollapsible(void* ptr, int index);
void* QSplitter_MinimumSizeHint(void* ptr);
void* QSplitter_MinimumSizeHintDefault(void* ptr);
void QSplitter_Refresh(void* ptr);
void QSplitter_ResizeEvent(void* ptr, void* v);
void QSplitter_ResizeEventDefault(void* ptr, void* v);
int QSplitter_RestoreState(void* ptr, void* state);
void* QSplitter_SaveState(void* ptr);
void QSplitter_SetCollapsible(void* ptr, int index, int collapse);
void QSplitter_SetStretchFactor(void* ptr, int index, int stretch);
void* QSplitter_SizeHint(void* ptr);
void* QSplitter_SizeHintDefault(void* ptr);
void QSplitter_ConnectSplitterMoved(void* ptr);
void QSplitter_DisconnectSplitterMoved(void* ptr);
void QSplitter_SplitterMoved(void* ptr, int pos, int index);
void* QSplitter_Widget(void* ptr, int index);
void QSplitter_DestroyQSplitter(void* ptr);
void QSplitter_PaintEvent(void* ptr, void* v);
void QSplitter_PaintEventDefault(void* ptr, void* v);
void QSplitter_ActionEvent(void* ptr, void* event);
void QSplitter_ActionEventDefault(void* ptr, void* event);
void QSplitter_DragEnterEvent(void* ptr, void* event);
void QSplitter_DragEnterEventDefault(void* ptr, void* event);
void QSplitter_DragLeaveEvent(void* ptr, void* event);
void QSplitter_DragLeaveEventDefault(void* ptr, void* event);
void QSplitter_DragMoveEvent(void* ptr, void* event);
void QSplitter_DragMoveEventDefault(void* ptr, void* event);
void QSplitter_DropEvent(void* ptr, void* event);
void QSplitter_DropEventDefault(void* ptr, void* event);
void QSplitter_EnterEvent(void* ptr, void* event);
void QSplitter_EnterEventDefault(void* ptr, void* event);
void QSplitter_FocusInEvent(void* ptr, void* event);
void QSplitter_FocusInEventDefault(void* ptr, void* event);
void QSplitter_FocusOutEvent(void* ptr, void* event);
void QSplitter_FocusOutEventDefault(void* ptr, void* event);
void QSplitter_HideEvent(void* ptr, void* event);
void QSplitter_HideEventDefault(void* ptr, void* event);
void QSplitter_LeaveEvent(void* ptr, void* event);
void QSplitter_LeaveEventDefault(void* ptr, void* event);
void QSplitter_MoveEvent(void* ptr, void* event);
void QSplitter_MoveEventDefault(void* ptr, void* event);
void QSplitter_SetVisible(void* ptr, int visible);
void QSplitter_SetVisibleDefault(void* ptr, int visible);
void QSplitter_ShowEvent(void* ptr, void* event);
void QSplitter_ShowEventDefault(void* ptr, void* event);
void QSplitter_CloseEvent(void* ptr, void* event);
void QSplitter_CloseEventDefault(void* ptr, void* event);
void QSplitter_ContextMenuEvent(void* ptr, void* event);
void QSplitter_ContextMenuEventDefault(void* ptr, void* event);
void QSplitter_InitPainter(void* ptr, void* painter);
void QSplitter_InitPainterDefault(void* ptr, void* painter);
void QSplitter_InputMethodEvent(void* ptr, void* event);
void QSplitter_InputMethodEventDefault(void* ptr, void* event);
void QSplitter_KeyPressEvent(void* ptr, void* event);
void QSplitter_KeyPressEventDefault(void* ptr, void* event);
void QSplitter_KeyReleaseEvent(void* ptr, void* event);
void QSplitter_KeyReleaseEventDefault(void* ptr, void* event);
void QSplitter_MouseDoubleClickEvent(void* ptr, void* event);
void QSplitter_MouseDoubleClickEventDefault(void* ptr, void* event);
void QSplitter_MouseMoveEvent(void* ptr, void* event);
void QSplitter_MouseMoveEventDefault(void* ptr, void* event);
void QSplitter_MousePressEvent(void* ptr, void* event);
void QSplitter_MousePressEventDefault(void* ptr, void* event);
void QSplitter_MouseReleaseEvent(void* ptr, void* event);
void QSplitter_MouseReleaseEventDefault(void* ptr, void* event);
void QSplitter_TabletEvent(void* ptr, void* event);
void QSplitter_TabletEventDefault(void* ptr, void* event);
void QSplitter_WheelEvent(void* ptr, void* event);
void QSplitter_WheelEventDefault(void* ptr, void* event);
void QSplitter_TimerEvent(void* ptr, void* event);
void QSplitter_TimerEventDefault(void* ptr, void* event);
void QSplitter_CustomEvent(void* ptr, void* event);
void QSplitter_CustomEventDefault(void* ptr, void* event);
void* QSplitterHandle_NewQSplitterHandle(int orientation, void* parent);
int QSplitterHandle_Event(void* ptr, void* event);
int QSplitterHandle_EventDefault(void* ptr, void* event);
void QSplitterHandle_MouseMoveEvent(void* ptr, void* e);
void QSplitterHandle_MouseMoveEventDefault(void* ptr, void* e);
void QSplitterHandle_MousePressEvent(void* ptr, void* e);
void QSplitterHandle_MousePressEventDefault(void* ptr, void* e);
void QSplitterHandle_MouseReleaseEvent(void* ptr, void* e);
void QSplitterHandle_MouseReleaseEventDefault(void* ptr, void* e);
int QSplitterHandle_OpaqueResize(void* ptr);
int QSplitterHandle_Orientation(void* ptr);
void QSplitterHandle_PaintEvent(void* ptr, void* v);
void QSplitterHandle_PaintEventDefault(void* ptr, void* v);
void QSplitterHandle_ResizeEvent(void* ptr, void* event);
void QSplitterHandle_ResizeEventDefault(void* ptr, void* event);
void QSplitterHandle_SetOrientation(void* ptr, int orientation);
void* QSplitterHandle_SizeHint(void* ptr);
void* QSplitterHandle_SizeHintDefault(void* ptr);
void* QSplitterHandle_Splitter(void* ptr);
void QSplitterHandle_DestroyQSplitterHandle(void* ptr);
void QSplitterHandle_ActionEvent(void* ptr, void* event);
void QSplitterHandle_ActionEventDefault(void* ptr, void* event);
void QSplitterHandle_DragEnterEvent(void* ptr, void* event);
void QSplitterHandle_DragEnterEventDefault(void* ptr, void* event);
void QSplitterHandle_DragLeaveEvent(void* ptr, void* event);
void QSplitterHandle_DragLeaveEventDefault(void* ptr, void* event);
void QSplitterHandle_DragMoveEvent(void* ptr, void* event);
void QSplitterHandle_DragMoveEventDefault(void* ptr, void* event);
void QSplitterHandle_DropEvent(void* ptr, void* event);
void QSplitterHandle_DropEventDefault(void* ptr, void* event);
void QSplitterHandle_EnterEvent(void* ptr, void* event);
void QSplitterHandle_EnterEventDefault(void* ptr, void* event);
void QSplitterHandle_FocusInEvent(void* ptr, void* event);
void QSplitterHandle_FocusInEventDefault(void* ptr, void* event);
void QSplitterHandle_FocusOutEvent(void* ptr, void* event);
void QSplitterHandle_FocusOutEventDefault(void* ptr, void* event);
void QSplitterHandle_HideEvent(void* ptr, void* event);
void QSplitterHandle_HideEventDefault(void* ptr, void* event);
void QSplitterHandle_LeaveEvent(void* ptr, void* event);
void QSplitterHandle_LeaveEventDefault(void* ptr, void* event);
void QSplitterHandle_MoveEvent(void* ptr, void* event);
void QSplitterHandle_MoveEventDefault(void* ptr, void* event);
void QSplitterHandle_SetVisible(void* ptr, int visible);
void QSplitterHandle_SetVisibleDefault(void* ptr, int visible);
void QSplitterHandle_ShowEvent(void* ptr, void* event);
void QSplitterHandle_ShowEventDefault(void* ptr, void* event);
void QSplitterHandle_ChangeEvent(void* ptr, void* event);
void QSplitterHandle_ChangeEventDefault(void* ptr, void* event);
void QSplitterHandle_CloseEvent(void* ptr, void* event);
void QSplitterHandle_CloseEventDefault(void* ptr, void* event);
void QSplitterHandle_ContextMenuEvent(void* ptr, void* event);
void QSplitterHandle_ContextMenuEventDefault(void* ptr, void* event);
void QSplitterHandle_InitPainter(void* ptr, void* painter);
void QSplitterHandle_InitPainterDefault(void* ptr, void* painter);
void QSplitterHandle_InputMethodEvent(void* ptr, void* event);
void QSplitterHandle_InputMethodEventDefault(void* ptr, void* event);
void QSplitterHandle_KeyPressEvent(void* ptr, void* event);
void QSplitterHandle_KeyPressEventDefault(void* ptr, void* event);
void QSplitterHandle_KeyReleaseEvent(void* ptr, void* event);
void QSplitterHandle_KeyReleaseEventDefault(void* ptr, void* event);
void QSplitterHandle_MouseDoubleClickEvent(void* ptr, void* event);
void QSplitterHandle_MouseDoubleClickEventDefault(void* ptr, void* event);
void QSplitterHandle_TabletEvent(void* ptr, void* event);
void QSplitterHandle_TabletEventDefault(void* ptr, void* event);
void QSplitterHandle_WheelEvent(void* ptr, void* event);
void QSplitterHandle_WheelEventDefault(void* ptr, void* event);
void QSplitterHandle_TimerEvent(void* ptr, void* event);
void QSplitterHandle_TimerEventDefault(void* ptr, void* event);
void QSplitterHandle_ChildEvent(void* ptr, void* event);
void QSplitterHandle_ChildEventDefault(void* ptr, void* event);
void QSplitterHandle_CustomEvent(void* ptr, void* event);
void QSplitterHandle_CustomEventDefault(void* ptr, void* event);
int QStackedLayout_Count(void* ptr);
int QStackedLayout_CountDefault(void* ptr);
int QStackedLayout_CurrentIndex(void* ptr);
void QStackedLayout_SetCurrentIndex(void* ptr, int index);
void QStackedLayout_SetCurrentWidget(void* ptr, void* widget);
void QStackedLayout_SetStackingMode(void* ptr, int stackingMode);
int QStackedLayout_StackingMode(void* ptr);
void* QStackedLayout_NewQStackedLayout();
void* QStackedLayout_NewQStackedLayout3(void* parentLayout);
void* QStackedLayout_NewQStackedLayout2(void* parent);
void QStackedLayout_AddItem(void* ptr, void* item);
void QStackedLayout_AddItemDefault(void* ptr, void* item);
int QStackedLayout_AddWidget(void* ptr, void* widget);
void QStackedLayout_ConnectCurrentChanged(void* ptr);
void QStackedLayout_DisconnectCurrentChanged(void* ptr);
void QStackedLayout_CurrentChanged(void* ptr, int index);
void* QStackedLayout_CurrentWidget(void* ptr);
int QStackedLayout_HasHeightForWidth(void* ptr);
int QStackedLayout_HasHeightForWidthDefault(void* ptr);
int QStackedLayout_HeightForWidth(void* ptr, int width);
int QStackedLayout_HeightForWidthDefault(void* ptr, int width);
int QStackedLayout_InsertWidget(void* ptr, int index, void* widget);
void* QStackedLayout_ItemAt(void* ptr, int index);
void* QStackedLayout_ItemAtDefault(void* ptr, int index);
void* QStackedLayout_MinimumSize(void* ptr);
void* QStackedLayout_MinimumSizeDefault(void* ptr);
void QStackedLayout_SetGeometry(void* ptr, void* rect);
void QStackedLayout_SetGeometryDefault(void* ptr, void* rect);
void* QStackedLayout_SizeHint(void* ptr);
void* QStackedLayout_SizeHintDefault(void* ptr);
void* QStackedLayout_TakeAt(void* ptr, int index);
void* QStackedLayout_TakeAtDefault(void* ptr, int index);
void* QStackedLayout_Widget(void* ptr, int index);
void QStackedLayout_ConnectWidgetRemoved(void* ptr);
void QStackedLayout_DisconnectWidgetRemoved(void* ptr);
void QStackedLayout_WidgetRemoved(void* ptr, int index);
void QStackedLayout_DestroyQStackedLayout(void* ptr);
void QStackedLayout_ChildEvent(void* ptr, void* e);
void QStackedLayout_ChildEventDefault(void* ptr, void* e);
void QStackedLayout_Invalidate(void* ptr);
void QStackedLayout_InvalidateDefault(void* ptr);
void QStackedLayout_TimerEvent(void* ptr, void* event);
void QStackedLayout_TimerEventDefault(void* ptr, void* event);
void QStackedLayout_CustomEvent(void* ptr, void* event);
void QStackedLayout_CustomEventDefault(void* ptr, void* event);
int QStackedWidget_Count(void* ptr);
int QStackedWidget_CurrentIndex(void* ptr);
void QStackedWidget_SetCurrentIndex(void* ptr, int index);
void QStackedWidget_SetCurrentWidget(void* ptr, void* widget);
void* QStackedWidget_NewQStackedWidget(void* parent);
int QStackedWidget_AddWidget(void* ptr, void* widget);
void QStackedWidget_ConnectCurrentChanged(void* ptr);
void QStackedWidget_DisconnectCurrentChanged(void* ptr);
void QStackedWidget_CurrentChanged(void* ptr, int index);
void* QStackedWidget_CurrentWidget(void* ptr);
int QStackedWidget_Event(void* ptr, void* e);
int QStackedWidget_EventDefault(void* ptr, void* e);
int QStackedWidget_IndexOf(void* ptr, void* widget);
int QStackedWidget_InsertWidget(void* ptr, int index, void* widget);
void QStackedWidget_RemoveWidget(void* ptr, void* widget);
void* QStackedWidget_Widget(void* ptr, int index);
void QStackedWidget_ConnectWidgetRemoved(void* ptr);
void QStackedWidget_DisconnectWidgetRemoved(void* ptr);
void QStackedWidget_WidgetRemoved(void* ptr, int index);
void QStackedWidget_DestroyQStackedWidget(void* ptr);
void QStackedWidget_ChangeEvent(void* ptr, void* ev);
void QStackedWidget_ChangeEventDefault(void* ptr, void* ev);
void QStackedWidget_PaintEvent(void* ptr, void* v);
void QStackedWidget_PaintEventDefault(void* ptr, void* v);
void QStackedWidget_ActionEvent(void* ptr, void* event);
void QStackedWidget_ActionEventDefault(void* ptr, void* event);
void QStackedWidget_DragEnterEvent(void* ptr, void* event);
void QStackedWidget_DragEnterEventDefault(void* ptr, void* event);
void QStackedWidget_DragLeaveEvent(void* ptr, void* event);
void QStackedWidget_DragLeaveEventDefault(void* ptr, void* event);
void QStackedWidget_DragMoveEvent(void* ptr, void* event);
void QStackedWidget_DragMoveEventDefault(void* ptr, void* event);
void QStackedWidget_DropEvent(void* ptr, void* event);
void QStackedWidget_DropEventDefault(void* ptr, void* event);
void QStackedWidget_EnterEvent(void* ptr, void* event);
void QStackedWidget_EnterEventDefault(void* ptr, void* event);
void QStackedWidget_FocusInEvent(void* ptr, void* event);
void QStackedWidget_FocusInEventDefault(void* ptr, void* event);
void QStackedWidget_FocusOutEvent(void* ptr, void* event);
void QStackedWidget_FocusOutEventDefault(void* ptr, void* event);
void QStackedWidget_HideEvent(void* ptr, void* event);
void QStackedWidget_HideEventDefault(void* ptr, void* event);
void QStackedWidget_LeaveEvent(void* ptr, void* event);
void QStackedWidget_LeaveEventDefault(void* ptr, void* event);
void QStackedWidget_MoveEvent(void* ptr, void* event);
void QStackedWidget_MoveEventDefault(void* ptr, void* event);
void QStackedWidget_SetVisible(void* ptr, int visible);
void QStackedWidget_SetVisibleDefault(void* ptr, int visible);
void QStackedWidget_ShowEvent(void* ptr, void* event);
void QStackedWidget_ShowEventDefault(void* ptr, void* event);
void QStackedWidget_CloseEvent(void* ptr, void* event);
void QStackedWidget_CloseEventDefault(void* ptr, void* event);
void QStackedWidget_ContextMenuEvent(void* ptr, void* event);
void QStackedWidget_ContextMenuEventDefault(void* ptr, void* event);
void QStackedWidget_InitPainter(void* ptr, void* painter);
void QStackedWidget_InitPainterDefault(void* ptr, void* painter);
void QStackedWidget_InputMethodEvent(void* ptr, void* event);
void QStackedWidget_InputMethodEventDefault(void* ptr, void* event);
void QStackedWidget_KeyPressEvent(void* ptr, void* event);
void QStackedWidget_KeyPressEventDefault(void* ptr, void* event);
void QStackedWidget_KeyReleaseEvent(void* ptr, void* event);
void QStackedWidget_KeyReleaseEventDefault(void* ptr, void* event);
void QStackedWidget_MouseDoubleClickEvent(void* ptr, void* event);
void QStackedWidget_MouseDoubleClickEventDefault(void* ptr, void* event);
void QStackedWidget_MouseMoveEvent(void* ptr, void* event);
void QStackedWidget_MouseMoveEventDefault(void* ptr, void* event);
void QStackedWidget_MousePressEvent(void* ptr, void* event);
void QStackedWidget_MousePressEventDefault(void* ptr, void* event);
void QStackedWidget_MouseReleaseEvent(void* ptr, void* event);
void QStackedWidget_MouseReleaseEventDefault(void* ptr, void* event);
void QStackedWidget_ResizeEvent(void* ptr, void* event);
void QStackedWidget_ResizeEventDefault(void* ptr, void* event);
void QStackedWidget_TabletEvent(void* ptr, void* event);
void QStackedWidget_TabletEventDefault(void* ptr, void* event);
void QStackedWidget_WheelEvent(void* ptr, void* event);
void QStackedWidget_WheelEventDefault(void* ptr, void* event);
void QStackedWidget_TimerEvent(void* ptr, void* event);
void QStackedWidget_TimerEventDefault(void* ptr, void* event);
void QStackedWidget_ChildEvent(void* ptr, void* event);
void QStackedWidget_ChildEventDefault(void* ptr, void* event);
void QStackedWidget_CustomEvent(void* ptr, void* event);
void QStackedWidget_CustomEventDefault(void* ptr, void* event);
int QStatusBar_IsSizeGripEnabled(void* ptr);
void QStatusBar_PaintEvent(void* ptr, void* event);
void QStatusBar_PaintEventDefault(void* ptr, void* event);
void QStatusBar_SetSizeGripEnabled(void* ptr, int v);
void* QStatusBar_NewQStatusBar(void* parent);
void QStatusBar_AddPermanentWidget(void* ptr, void* widget, int stretch);
void QStatusBar_AddWidget(void* ptr, void* widget, int stretch);
void QStatusBar_ClearMessage(void* ptr);
char* QStatusBar_CurrentMessage(void* ptr);
int QStatusBar_Event(void* ptr, void* e);
int QStatusBar_EventDefault(void* ptr, void* e);
int QStatusBar_InsertPermanentWidget(void* ptr, int index, void* widget, int stretch);
int QStatusBar_InsertWidget(void* ptr, int index, void* widget, int stretch);
void QStatusBar_ConnectMessageChanged(void* ptr);
void QStatusBar_DisconnectMessageChanged(void* ptr);
void QStatusBar_MessageChanged(void* ptr, char* message);
void QStatusBar_RemoveWidget(void* ptr, void* widget);
void QStatusBar_ResizeEvent(void* ptr, void* e);
void QStatusBar_ResizeEventDefault(void* ptr, void* e);
void QStatusBar_ShowEvent(void* ptr, void* v);
void QStatusBar_ShowEventDefault(void* ptr, void* v);
void QStatusBar_ShowMessage(void* ptr, char* message, int timeout);
void QStatusBar_DestroyQStatusBar(void* ptr);
void QStatusBar_ActionEvent(void* ptr, void* event);
void QStatusBar_ActionEventDefault(void* ptr, void* event);
void QStatusBar_DragEnterEvent(void* ptr, void* event);
void QStatusBar_DragEnterEventDefault(void* ptr, void* event);
void QStatusBar_DragLeaveEvent(void* ptr, void* event);
void QStatusBar_DragLeaveEventDefault(void* ptr, void* event);
void QStatusBar_DragMoveEvent(void* ptr, void* event);
void QStatusBar_DragMoveEventDefault(void* ptr, void* event);
void QStatusBar_DropEvent(void* ptr, void* event);
void QStatusBar_DropEventDefault(void* ptr, void* event);
void QStatusBar_EnterEvent(void* ptr, void* event);
void QStatusBar_EnterEventDefault(void* ptr, void* event);
void QStatusBar_FocusInEvent(void* ptr, void* event);
void QStatusBar_FocusInEventDefault(void* ptr, void* event);
void QStatusBar_FocusOutEvent(void* ptr, void* event);
void QStatusBar_FocusOutEventDefault(void* ptr, void* event);
void QStatusBar_HideEvent(void* ptr, void* event);
void QStatusBar_HideEventDefault(void* ptr, void* event);
void QStatusBar_LeaveEvent(void* ptr, void* event);
void QStatusBar_LeaveEventDefault(void* ptr, void* event);
void QStatusBar_MoveEvent(void* ptr, void* event);
void QStatusBar_MoveEventDefault(void* ptr, void* event);
void QStatusBar_SetVisible(void* ptr, int visible);
void QStatusBar_SetVisibleDefault(void* ptr, int visible);
void QStatusBar_ChangeEvent(void* ptr, void* event);
void QStatusBar_ChangeEventDefault(void* ptr, void* event);
void QStatusBar_CloseEvent(void* ptr, void* event);
void QStatusBar_CloseEventDefault(void* ptr, void* event);
void QStatusBar_ContextMenuEvent(void* ptr, void* event);
void QStatusBar_ContextMenuEventDefault(void* ptr, void* event);
void QStatusBar_InitPainter(void* ptr, void* painter);
void QStatusBar_InitPainterDefault(void* ptr, void* painter);
void QStatusBar_InputMethodEvent(void* ptr, void* event);
void QStatusBar_InputMethodEventDefault(void* ptr, void* event);
void QStatusBar_KeyPressEvent(void* ptr, void* event);
void QStatusBar_KeyPressEventDefault(void* ptr, void* event);
void QStatusBar_KeyReleaseEvent(void* ptr, void* event);
void QStatusBar_KeyReleaseEventDefault(void* ptr, void* event);
void QStatusBar_MouseDoubleClickEvent(void* ptr, void* event);
void QStatusBar_MouseDoubleClickEventDefault(void* ptr, void* event);
void QStatusBar_MouseMoveEvent(void* ptr, void* event);
void QStatusBar_MouseMoveEventDefault(void* ptr, void* event);
void QStatusBar_MousePressEvent(void* ptr, void* event);
void QStatusBar_MousePressEventDefault(void* ptr, void* event);
void QStatusBar_MouseReleaseEvent(void* ptr, void* event);
void QStatusBar_MouseReleaseEventDefault(void* ptr, void* event);
void QStatusBar_TabletEvent(void* ptr, void* event);
void QStatusBar_TabletEventDefault(void* ptr, void* event);
void QStatusBar_WheelEvent(void* ptr, void* event);
void QStatusBar_WheelEventDefault(void* ptr, void* event);
void QStatusBar_TimerEvent(void* ptr, void* event);
void QStatusBar_TimerEventDefault(void* ptr, void* event);
void QStatusBar_ChildEvent(void* ptr, void* event);
void QStatusBar_ChildEventDefault(void* ptr, void* event);
void QStatusBar_CustomEvent(void* ptr, void* event);
void QStatusBar_CustomEventDefault(void* ptr, void* event);
int QStyle_PM_MdiSubWindowMinimizedWidth_Type();
int QStyle_PM_HeaderMargin_Type();
int QStyle_PM_HeaderMarkSize_Type();
int QStyle_PM_HeaderGripMargin_Type();
int QStyle_PM_TabBarTabShiftHorizontal_Type();
int QStyle_PM_TabBarTabShiftVertical_Type();
int QStyle_PM_TabBarScrollButtonWidth_Type();
int QStyle_PM_ToolBarFrameWidth_Type();
int QStyle_PM_ToolBarHandleExtent_Type();
int QStyle_PM_ToolBarItemSpacing_Type();
int QStyle_PM_ToolBarItemMargin_Type();
int QStyle_PM_ToolBarSeparatorExtent_Type();
int QStyle_PM_ToolBarExtensionExtent_Type();
int QStyle_PM_SpinBoxSliderHeight_Type();
int QStyle_PM_DefaultTopLevelMargin_Type();
int QStyle_PM_DefaultChildMargin_Type();
int QStyle_PM_DefaultLayoutSpacing_Type();
int QStyle_PM_ToolBarIconSize_Type();
int QStyle_PM_ListViewIconSize_Type();
int QStyle_PM_IconViewIconSize_Type();
int QStyle_PM_SmallIconSize_Type();
int QStyle_PM_LargeIconSize_Type();
int QStyle_PM_FocusFrameVMargin_Type();
int QStyle_PM_FocusFrameHMargin_Type();
int QStyle_PM_ToolTipLabelFrameWidth_Type();
int QStyle_PM_CheckBoxLabelSpacing_Type();
int QStyle_PM_TabBarIconSize_Type();
int QStyle_PM_SizeGripSize_Type();
int QStyle_PM_DockWidgetTitleMargin_Type();
int QStyle_PM_MessageBoxIconSize_Type();
int QStyle_PM_ButtonIconSize_Type();
int QStyle_PM_DockWidgetTitleBarButtonMargin_Type();
int QStyle_PM_RadioButtonLabelSpacing_Type();
int QStyle_PM_LayoutLeftMargin_Type();
int QStyle_PM_LayoutTopMargin_Type();
int QStyle_PM_LayoutRightMargin_Type();
int QStyle_PM_LayoutBottomMargin_Type();
int QStyle_PM_LayoutHorizontalSpacing_Type();
int QStyle_PM_LayoutVerticalSpacing_Type();
int QStyle_PM_TabBar_ScrollButtonOverlap_Type();
int QStyle_PM_TextCursorWidth_Type();
int QStyle_PM_TabCloseIndicatorWidth_Type();
int QStyle_PM_TabCloseIndicatorHeight_Type();
int QStyle_PM_ScrollView_ScrollBarSpacing_Type();
int QStyle_PM_ScrollView_ScrollBarOverlap_Type();
int QStyle_PM_SubMenuOverlap_Type();
int QStyle_PM_TreeViewIndentation_Type();
int QStyle_PM_HeaderDefaultSectionSizeHorizontal_Type();
int QStyle_PM_HeaderDefaultSectionSizeVertical_Type();
int QStyle_PE_FrameTabWidget_Type();
int QStyle_PE_FrameWindow_Type();
int QStyle_PE_FrameButtonBevel_Type();
int QStyle_PE_FrameButtonTool_Type();
int QStyle_PE_FrameTabBarBase_Type();
int QStyle_PE_PanelButtonCommand_Type();
int QStyle_PE_PanelButtonBevel_Type();
int QStyle_PE_PanelButtonTool_Type();
int QStyle_PE_PanelMenuBar_Type();
int QStyle_PE_PanelToolBar_Type();
int QStyle_PE_PanelLineEdit_Type();
int QStyle_PE_IndicatorArrowDown_Type();
int QStyle_PE_IndicatorArrowLeft_Type();
int QStyle_PE_IndicatorArrowRight_Type();
int QStyle_PE_IndicatorArrowUp_Type();
int QStyle_PE_IndicatorBranch_Type();
int QStyle_PE_IndicatorButtonDropDown_Type();
int QStyle_PE_IndicatorViewItemCheck_Type();
int QStyle_PE_IndicatorCheckBox_Type();
int QStyle_PE_IndicatorDockWidgetResizeHandle_Type();
int QStyle_PE_IndicatorHeaderArrow_Type();
int QStyle_PE_IndicatorMenuCheckMark_Type();
int QStyle_PE_IndicatorProgressChunk_Type();
int QStyle_PE_IndicatorRadioButton_Type();
int QStyle_PE_IndicatorSpinDown_Type();
int QStyle_PE_IndicatorSpinMinus_Type();
int QStyle_PE_IndicatorSpinPlus_Type();
int QStyle_PE_IndicatorSpinUp_Type();
int QStyle_PE_IndicatorToolBarHandle_Type();
int QStyle_PE_IndicatorToolBarSeparator_Type();
int QStyle_PE_PanelTipLabel_Type();
int QStyle_PE_IndicatorTabTear_Type();
int QStyle_PE_PanelScrollAreaCorner_Type();
int QStyle_PE_Widget_Type();
int QStyle_PE_IndicatorColumnViewArrow_Type();
int QStyle_PE_IndicatorItemViewItemDrop_Type();
int QStyle_PE_PanelItemViewItem_Type();
int QStyle_PE_PanelItemViewRow_Type();
int QStyle_PE_PanelStatusBar_Type();
int QStyle_PE_IndicatorTabClose_Type();
int QStyle_PE_PanelMenu_Type();
int QStyle_SH_BlinkCursorWhenTextSelected_Type();
int QStyle_SH_RichText_FullWidthSelection_Type();
int QStyle_SH_Menu_Scrollable_Type();
int QStyle_SH_GroupBox_TextLabelVerticalAlignment_Type();
int QStyle_SH_GroupBox_TextLabelColor_Type();
int QStyle_SH_Menu_SloppySubMenus_Type();
int QStyle_SH_Table_GridLineColor_Type();
int QStyle_SH_LineEdit_PasswordCharacter_Type();
int QStyle_SH_DialogButtons_DefaultButton_Type();
int QStyle_SH_ToolBox_SelectedPageTitleBold_Type();
int QStyle_SH_TabBar_PreferNoArrows_Type();
int QStyle_SH_ScrollBar_LeftClickAbsolutePosition_Type();
int QStyle_SH_ListViewExpand_SelectMouseType_Type();
int QStyle_SH_UnderlineShortcut_Type();
int QStyle_SH_SpinBox_AnimateButton_Type();
int QStyle_SH_SpinBox_KeyPressAutoRepeatRate_Type();
int QStyle_SH_SpinBox_ClickAutoRepeatRate_Type();
int QStyle_SH_Menu_FillScreenWithScroll_Type();
int QStyle_SH_ToolTipLabel_Opacity_Type();
int QStyle_SH_DrawMenuBarSeparator_Type();
int QStyle_SH_TitleBar_ModifyNotification_Type();
int QStyle_SH_Button_FocusPolicy_Type();
int QStyle_SH_MessageBox_UseBorderForButtonSpacing_Type();
int QStyle_SH_TitleBar_AutoRaise_Type();
int QStyle_SH_ToolButton_PopupDelay_Type();
int QStyle_SH_FocusFrame_Mask_Type();
int QStyle_SH_RubberBand_Mask_Type();
int QStyle_SH_WindowFrame_Mask_Type();
int QStyle_SH_SpinControls_DisableOnBounds_Type();
int QStyle_SH_Dial_BackgroundRole_Type();
int QStyle_SH_ComboBox_LayoutDirection_Type();
int QStyle_SH_ItemView_EllipsisLocation_Type();
int QStyle_SH_ItemView_ShowDecorationSelected_Type();
int QStyle_SH_ItemView_ActivateItemOnSingleClick_Type();
int QStyle_SH_ScrollBar_ContextMenu_Type();
int QStyle_SH_ScrollBar_RollBetweenButtons_Type();
int QStyle_SH_Slider_AbsoluteSetButtons_Type();
int QStyle_SH_Slider_PageSetButtons_Type();
int QStyle_SH_Menu_KeyboardSearch_Type();
int QStyle_SH_TabBar_ElideMode_Type();
int QStyle_SH_DialogButtonLayout_Type();
int QStyle_SH_ComboBox_PopupFrameStyle_Type();
int QStyle_SH_MessageBox_TextInteractionFlags_Type();
int QStyle_SH_DialogButtonBox_ButtonsHaveIcons_Type();
int QStyle_SH_SpellCheckUnderlineStyle_Type();
int QStyle_SH_MessageBox_CenterButtons_Type();
int QStyle_SH_Menu_SelectionWrap_Type();
int QStyle_SH_ItemView_MovementWithoutUpdatingSelection_Type();
int QStyle_SH_ToolTip_Mask_Type();
int QStyle_SH_FocusFrame_AboveWidget_Type();
int QStyle_SH_TextControl_FocusIndicatorTextCharFormat_Type();
int QStyle_SH_WizardStyle_Type();
int QStyle_SH_ItemView_ArrowKeysNavigateIntoChildren_Type();
int QStyle_SH_Menu_Mask_Type();
int QStyle_SH_Menu_FlashTriggeredItem_Type();
int QStyle_SH_Menu_FadeOutOnHide_Type();
int QStyle_SH_SpinBox_ClickAutoRepeatThreshold_Type();
int QStyle_SH_ItemView_PaintAlternatingRowColorsForEmptyArea_Type();
int QStyle_SH_FormLayoutWrapPolicy_Type();
int QStyle_SH_TabWidget_DefaultTabPosition_Type();
int QStyle_SH_ToolBar_Movable_Type();
int QStyle_SH_FormLayoutFieldGrowthPolicy_Type();
int QStyle_SH_FormLayoutFormAlignment_Type();
int QStyle_SH_FormLayoutLabelAlignment_Type();
int QStyle_SH_ItemView_DrawDelegateFrame_Type();
int QStyle_SH_TabBar_CloseButtonPosition_Type();
int QStyle_SH_DockWidget_ButtonsHaveFrame_Type();
int QStyle_SH_ToolButtonStyle_Type();
int QStyle_SH_RequestSoftwareInputPanel_Type();
int QStyle_SH_ScrollBar_Transient_Type();
int QStyle_SH_Menu_SupportsSections_Type();
int QStyle_SH_ToolTip_WakeUpDelay_Type();
int QStyle_SH_ToolTip_FallAsleepDelay_Type();
int QStyle_SH_Widget_Animate_Type();
int QStyle_SH_Splitter_OpaqueResize_Type();
int QStyle_SH_ComboBox_UseNativePopup_Type();
int QStyle_SH_LineEdit_PasswordMaskDelay_Type();
int QStyle_SH_TabBar_ChangeCurrentDelay_Type();
int QStyle_SH_Menu_SubMenuUniDirection_Type();
int QStyle_SH_Menu_SubMenuUniDirectionFailCount_Type();
int QStyle_SH_Menu_SubMenuSloppySelectOtherActions_Type();
int QStyle_SH_Menu_SubMenuSloppyCloseTimeout_Type();
int QStyle_SH_Menu_SubMenuResetWhenReenteringParent_Type();
int QStyle_SH_Menu_SubMenuDontStartSloppyOnLeave_Type();
int QStyle_SE_TabBarTearIndicator_Type();
int QStyle_SE_TreeViewDisclosureItem_Type();
int QStyle_SE_LineEditContents_Type();
int QStyle_SE_FrameContents_Type();
int QStyle_SE_DockWidgetCloseButton_Type();
int QStyle_SE_DockWidgetFloatButton_Type();
int QStyle_SE_DockWidgetTitleBarText_Type();
int QStyle_SE_DockWidgetIcon_Type();
int QStyle_SE_CheckBoxLayoutItem_Type();
int QStyle_SE_ComboBoxLayoutItem_Type();
int QStyle_SE_DateTimeEditLayoutItem_Type();
int QStyle_SE_DialogButtonBoxLayoutItem_Type();
int QStyle_SE_LabelLayoutItem_Type();
int QStyle_SE_ProgressBarLayoutItem_Type();
int QStyle_SE_PushButtonLayoutItem_Type();
int QStyle_SE_RadioButtonLayoutItem_Type();
int QStyle_SE_SliderLayoutItem_Type();
int QStyle_SE_SpinBoxLayoutItem_Type();
int QStyle_SE_ToolButtonLayoutItem_Type();
int QStyle_SE_FrameLayoutItem_Type();
int QStyle_SE_GroupBoxLayoutItem_Type();
int QStyle_SE_TabWidgetLayoutItem_Type();
int QStyle_SE_ItemViewItemDecoration_Type();
int QStyle_SE_ItemViewItemText_Type();
int QStyle_SE_ItemViewItemFocusRect_Type();
int QStyle_SE_TabBarTabLeftButton_Type();
int QStyle_SE_TabBarTabRightButton_Type();
int QStyle_SE_TabBarTabText_Type();
int QStyle_SE_ShapedFrameContents_Type();
int QStyle_SE_ToolBarHandle_Type();
void* QStyle_ItemPixmapRect(void* ptr, void* rectangle, int alignment, void* pixmap);
void* QStyle_ItemPixmapRectDefault(void* ptr, void* rectangle, int alignment, void* pixmap);
void* QStyle_ItemTextRect(void* ptr, void* metrics, void* rectangle, int alignment, int enabled, char* text);
void* QStyle_ItemTextRectDefault(void* ptr, void* metrics, void* rectangle, int alignment, int enabled, char* text);
void* QStyle_Proxy(void* ptr);
int QStyle_QStyle_SliderValueFromPosition(int min, int max, int position, int span, int upsideDown);
void* QStyle_QStyle_VisualPos(int direction, void* boundingRectangle, void* logicalPosition);
void* QStyle_QStyle_VisualRect(int direction, void* boundingRectangle, void* logicalRectangle);
void* QStyle_QStyle_AlignedRect(int direction, int alignment, void* size, void* rectangle);
int QStyle_CombinedLayoutSpacing(void* ptr, int controls1, int controls2, int orientation, void* option, void* widget);
void QStyle_DrawComplexControl(void* ptr, int control, void* option, void* painter, void* widget);
void QStyle_DrawControl(void* ptr, int element, void* option, void* painter, void* widget);
void QStyle_DrawPrimitive(void* ptr, int element, void* option, void* painter, void* widget);
int QStyle_HitTestComplexControl(void* ptr, int control, void* option, void* position, void* widget);
int QStyle_LayoutSpacing(void* ptr, int control1, int control2, int orientation, void* option, void* widget);
int QStyle_PixelMetric(void* ptr, int metric, void* option, void* widget);
void QStyle_Polish(void* ptr, void* widget);
void QStyle_PolishDefault(void* ptr, void* widget);
void* QStyle_SizeFromContents(void* ptr, int ty, void* option, void* contentsSize, void* widget);
int QStyle_QStyle_SliderPositionFromValue(int min, int max, int logicalValue, int span, int upsideDown);
void* QStyle_StandardIcon(void* ptr, int standardIcon, void* option, void* widget);
int QStyle_StyleHint(void* ptr, int hint, void* option, void* widget, void* returnData);
void* QStyle_SubControlRect(void* ptr, int control, void* option, int subControl, void* widget);
void* QStyle_SubElementRect(void* ptr, int element, void* option, void* widget);
void QStyle_Unpolish(void* ptr, void* widget);
void QStyle_UnpolishDefault(void* ptr, void* widget);
int QStyle_QStyle_VisualAlignment(int direction, int alignment);
void QStyle_DestroyQStyle(void* ptr);
void QStyle_TimerEvent(void* ptr, void* event);
void QStyle_TimerEventDefault(void* ptr, void* event);
void QStyle_ChildEvent(void* ptr, void* event);
void QStyle_ChildEventDefault(void* ptr, void* event);
void QStyle_CustomEvent(void* ptr, void* event);
void QStyle_CustomEventDefault(void* ptr, void* event);
void* QStyleFactory_QStyleFactory_Create(char* key);
char* QStyleFactory_QStyleFactory_Keys();
int QStyleHintReturn_SH_Mask_Type();
int QStyleHintReturn_SH_Variant_Type();
void* QStyleHintReturn_NewQStyleHintReturn(int version, int ty);
void* QStyleHintReturnMask_NewQStyleHintReturnMask();
void QStyleHintReturnMask_DestroyQStyleHintReturnMask(void* ptr);
void* QStyleHintReturnVariant_NewQStyleHintReturnVariant();
void QStyleHintReturnVariant_DestroyQStyleHintReturnVariant(void* ptr);
int QStyleOption_SO_Slider_Type();
int QStyleOption_SO_SpinBox_Type();
int QStyleOption_SO_ToolButton_Type();
int QStyleOption_SO_ComboBox_Type();
int QStyleOption_SO_TitleBar_Type();
int QStyleOption_SO_GroupBox_Type();
int QStyleOption_SO_SizeGrip_Type();
void* QStyleOption_NewQStyleOption2(void* other);
void* QStyleOption_NewQStyleOption(int version, int ty);
void QStyleOption_InitFrom(void* ptr, void* widget);
void QStyleOption_DestroyQStyleOption(void* ptr);
void* QStyleOptionButton_NewQStyleOptionButton();
void* QStyleOptionButton_NewQStyleOptionButton2(void* other);
void* QStyleOptionComboBox_NewQStyleOptionComboBox();
void* QStyleOptionComboBox_NewQStyleOptionComboBox2(void* other);
void* QStyleOptionComplex_NewQStyleOptionComplex2(void* other);
void* QStyleOptionComplex_NewQStyleOptionComplex(int version, int ty);
void* QStyleOptionDockWidget_NewQStyleOptionDockWidget();
void* QStyleOptionDockWidget_NewQStyleOptionDockWidget2(void* other);
void* QStyleOptionFocusRect_NewQStyleOptionFocusRect();
void* QStyleOptionFocusRect_NewQStyleOptionFocusRect2(void* other);
void* QStyleOptionFrame_NewQStyleOptionFrame();
void* QStyleOptionFrame_NewQStyleOptionFrame2(void* other);
void* QStyleOptionGraphicsItem_NewQStyleOptionGraphicsItem();
void* QStyleOptionGraphicsItem_NewQStyleOptionGraphicsItem2(void* other);
double QStyleOptionGraphicsItem_QStyleOptionGraphicsItem_LevelOfDetailFromTransform(void* worldTransform);
void* QStyleOptionGroupBox_NewQStyleOptionGroupBox();
void* QStyleOptionGroupBox_NewQStyleOptionGroupBox2(void* other);
void* QStyleOptionHeader_NewQStyleOptionHeader();
void* QStyleOptionHeader_NewQStyleOptionHeader2(void* other);
void* QStyleOptionMenuItem_NewQStyleOptionMenuItem();
void* QStyleOptionMenuItem_NewQStyleOptionMenuItem2(void* other);
void* QStyleOptionProgressBar_NewQStyleOptionProgressBar();
void* QStyleOptionProgressBar_NewQStyleOptionProgressBar2(void* other);
void* QStyleOptionRubberBand_NewQStyleOptionRubberBand();
void* QStyleOptionRubberBand_NewQStyleOptionRubberBand2(void* other);
void* QStyleOptionSizeGrip_NewQStyleOptionSizeGrip();
void* QStyleOptionSizeGrip_NewQStyleOptionSizeGrip2(void* other);
void* QStyleOptionSlider_NewQStyleOptionSlider();
void* QStyleOptionSlider_NewQStyleOptionSlider2(void* other);
void* QStyleOptionSpinBox_NewQStyleOptionSpinBox();
void* QStyleOptionSpinBox_NewQStyleOptionSpinBox2(void* other);
void* QStyleOptionTab_NewQStyleOptionTab();
void* QStyleOptionTab_NewQStyleOptionTab2(void* other);
void* QStyleOptionTabBarBase_NewQStyleOptionTabBarBase();
void* QStyleOptionTabBarBase_NewQStyleOptionTabBarBase2(void* other);
void* QStyleOptionTabWidgetFrame_NewQStyleOptionTabWidgetFrame();
void* QStyleOptionTabWidgetFrame_NewQStyleOptionTabWidgetFrame2(void* other);
void* QStyleOptionTitleBar_NewQStyleOptionTitleBar();
void* QStyleOptionTitleBar_NewQStyleOptionTitleBar2(void* other);
void* QStyleOptionToolBar_NewQStyleOptionToolBar();
void* QStyleOptionToolBar_NewQStyleOptionToolBar2(void* other);
void* QStyleOptionToolBox_NewQStyleOptionToolBox();
void* QStyleOptionToolBox_NewQStyleOptionToolBox2(void* other);
void* QStyleOptionToolButton_NewQStyleOptionToolButton();
void* QStyleOptionToolButton_NewQStyleOptionToolButton2(void* other);
void* QStyleOptionViewItem_NewQStyleOptionViewItem();
void* QStyleOptionViewItem_NewQStyleOptionViewItem2(void* other);
void* QStylePainter_NewQStylePainter();
void* QStylePainter_NewQStylePainter3(void* pd, void* widget);
void* QStylePainter_NewQStylePainter2(void* widget);
int QStylePainter_Begin2(void* ptr, void* pd, void* widget);
int QStylePainter_Begin(void* ptr, void* widget);
void QStylePainter_DrawComplexControl(void* ptr, int cc, void* option);
void QStylePainter_DrawControl(void* ptr, int ce, void* option);
void QStylePainter_DrawItemPixmap(void* ptr, void* rect, int flags, void* pixmap);
void QStylePainter_DrawItemText(void* ptr, void* rect, int flags, void* pal, int enabled, char* text, int textRole);
void QStylePainter_DrawPrimitive(void* ptr, int pe, void* option);
void* QStylePainter_Style(void* ptr);
void* QStylePlugin_Create(void* ptr, char* key);
void QStylePlugin_DestroyQStylePlugin(void* ptr);
void QStylePlugin_TimerEvent(void* ptr, void* event);
void QStylePlugin_TimerEventDefault(void* ptr, void* event);
void QStylePlugin_ChildEvent(void* ptr, void* event);
void QStylePlugin_ChildEventDefault(void* ptr, void* event);
void QStylePlugin_CustomEvent(void* ptr, void* event);
void QStylePlugin_CustomEventDefault(void* ptr, void* event);
int QStyledItemDelegate_EventFilter(void* ptr, void* editor, void* event);
int QStyledItemDelegate_EventFilterDefault(void* ptr, void* editor, void* event);
void* QStyledItemDelegate_NewQStyledItemDelegate(void* parent);
void* QStyledItemDelegate_CreateEditor(void* ptr, void* parent, void* option, void* index);
void* QStyledItemDelegate_CreateEditorDefault(void* ptr, void* parent, void* option, void* index);
char* QStyledItemDelegate_DisplayText(void* ptr, void* value, void* locale);
char* QStyledItemDelegate_DisplayTextDefault(void* ptr, void* value, void* locale);
int QStyledItemDelegate_EditorEvent(void* ptr, void* event, void* model, void* option, void* index);
int QStyledItemDelegate_EditorEventDefault(void* ptr, void* event, void* model, void* option, void* index);
void QStyledItemDelegate_InitStyleOption(void* ptr, void* option, void* index);
void QStyledItemDelegate_InitStyleOptionDefault(void* ptr, void* option, void* index);
void* QStyledItemDelegate_ItemEditorFactory(void* ptr);
void QStyledItemDelegate_SetEditorData(void* ptr, void* editor, void* index);
void QStyledItemDelegate_SetEditorDataDefault(void* ptr, void* editor, void* index);
void QStyledItemDelegate_SetItemEditorFactory(void* ptr, void* factory);
void QStyledItemDelegate_SetModelData(void* ptr, void* editor, void* model, void* index);
void QStyledItemDelegate_SetModelDataDefault(void* ptr, void* editor, void* model, void* index);
void* QStyledItemDelegate_SizeHint(void* ptr, void* option, void* index);
void* QStyledItemDelegate_SizeHintDefault(void* ptr, void* option, void* index);
void QStyledItemDelegate_DestroyQStyledItemDelegate(void* ptr);
void QStyledItemDelegate_DestroyEditor(void* ptr, void* editor, void* index);
void QStyledItemDelegate_DestroyEditorDefault(void* ptr, void* editor, void* index);
void QStyledItemDelegate_TimerEvent(void* ptr, void* event);
void QStyledItemDelegate_TimerEventDefault(void* ptr, void* event);
void QStyledItemDelegate_ChildEvent(void* ptr, void* event);
void QStyledItemDelegate_ChildEventDefault(void* ptr, void* event);
void QStyledItemDelegate_CustomEvent(void* ptr, void* event);
void QStyledItemDelegate_CustomEventDefault(void* ptr, void* event);
int QSwipeGesture_HorizontalDirection(void* ptr);
void QSwipeGesture_SetSwipeAngle(void* ptr, double value);
double QSwipeGesture_SwipeAngle(void* ptr);
int QSwipeGesture_VerticalDirection(void* ptr);
void QSwipeGesture_DestroyQSwipeGesture(void* ptr);
void QSwipeGesture_TimerEvent(void* ptr, void* event);
void QSwipeGesture_TimerEventDefault(void* ptr, void* event);
void QSwipeGesture_ChildEvent(void* ptr, void* event);
void QSwipeGesture_ChildEventDefault(void* ptr, void* event);
void QSwipeGesture_CustomEvent(void* ptr, void* event);
void QSwipeGesture_CustomEventDefault(void* ptr, void* event);
void* QSystemTrayIcon_Icon(void* ptr);
int QSystemTrayIcon_IsVisible(void* ptr);
void QSystemTrayIcon_SetIcon(void* ptr, void* icon);
void QSystemTrayIcon_SetToolTip(void* ptr, char* tip);
void QSystemTrayIcon_SetVisible(void* ptr, int visible);
void QSystemTrayIcon_ShowMessage(void* ptr, char* title, char* message, int icon, int millisecondsTimeoutHint);
char* QSystemTrayIcon_ToolTip(void* ptr);
void* QSystemTrayIcon_NewQSystemTrayIcon(void* parent);
void* QSystemTrayIcon_NewQSystemTrayIcon2(void* icon, void* parent);
void QSystemTrayIcon_ConnectActivated(void* ptr);
void QSystemTrayIcon_DisconnectActivated(void* ptr);
void QSystemTrayIcon_Activated(void* ptr, int reason);
void* QSystemTrayIcon_ContextMenu(void* ptr);
int QSystemTrayIcon_Event(void* ptr, void* e);
int QSystemTrayIcon_EventDefault(void* ptr, void* e);
void* QSystemTrayIcon_Geometry(void* ptr);
void QSystemTrayIcon_Hide(void* ptr);
int QSystemTrayIcon_QSystemTrayIcon_IsSystemTrayAvailable();
void QSystemTrayIcon_ConnectMessageClicked(void* ptr);
void QSystemTrayIcon_DisconnectMessageClicked(void* ptr);
void QSystemTrayIcon_MessageClicked(void* ptr);
void QSystemTrayIcon_SetContextMenu(void* ptr, void* menu);
void QSystemTrayIcon_Show(void* ptr);
int QSystemTrayIcon_QSystemTrayIcon_SupportsMessages();
void QSystemTrayIcon_DestroyQSystemTrayIcon(void* ptr);
void QSystemTrayIcon_TimerEvent(void* ptr, void* event);
void QSystemTrayIcon_TimerEventDefault(void* ptr, void* event);
void QSystemTrayIcon_ChildEvent(void* ptr, void* event);
void QSystemTrayIcon_ChildEventDefault(void* ptr, void* event);
void QSystemTrayIcon_CustomEvent(void* ptr, void* event);
void QSystemTrayIcon_CustomEventDefault(void* ptr, void* event);
int QTabBar_AutoHide(void* ptr);
int QTabBar_ChangeCurrentOnDrag(void* ptr);
int QTabBar_Count(void* ptr);
int QTabBar_CurrentIndex(void* ptr);
int QTabBar_DocumentMode(void* ptr);
int QTabBar_DrawBase(void* ptr);
int QTabBar_ElideMode(void* ptr);
int QTabBar_Expanding(void* ptr);
void* QTabBar_IconSize(void* ptr);
int QTabBar_IsMovable(void* ptr);
int QTabBar_SelectionBehaviorOnRemove(void* ptr);
void QTabBar_SetAutoHide(void* ptr, int hide);
void QTabBar_SetChangeCurrentOnDrag(void* ptr, int change);
void QTabBar_SetCurrentIndex(void* ptr, int index);
void QTabBar_SetDocumentMode(void* ptr, int set);
void QTabBar_SetDrawBase(void* ptr, int drawTheBase);
void QTabBar_SetElideMode(void* ptr, int v);
void QTabBar_SetExpanding(void* ptr, int enabled);
void QTabBar_SetIconSize(void* ptr, void* size);
void QTabBar_SetMovable(void* ptr, int movable);
void QTabBar_SetSelectionBehaviorOnRemove(void* ptr, int behavior);
void QTabBar_SetShape(void* ptr, int shape);
void QTabBar_SetTabsClosable(void* ptr, int closable);
void QTabBar_SetUsesScrollButtons(void* ptr, int useButtons);
int QTabBar_Shape(void* ptr);
int QTabBar_TabsClosable(void* ptr);
int QTabBar_UsesScrollButtons(void* ptr);
void* QTabBar_NewQTabBar(void* parent);
int QTabBar_AddTab2(void* ptr, void* icon, char* text);
int QTabBar_AddTab(void* ptr, char* text);
void QTabBar_ChangeEvent(void* ptr, void* event);
void QTabBar_ChangeEventDefault(void* ptr, void* event);
void QTabBar_ConnectCurrentChanged(void* ptr);
void QTabBar_DisconnectCurrentChanged(void* ptr);
void QTabBar_CurrentChanged(void* ptr, int index);
int QTabBar_Event(void* ptr, void* event);
int QTabBar_EventDefault(void* ptr, void* event);
void QTabBar_HideEvent(void* ptr, void* v);
void QTabBar_HideEventDefault(void* ptr, void* v);
int QTabBar_InsertTab2(void* ptr, int index, void* icon, char* text);
int QTabBar_InsertTab(void* ptr, int index, char* text);
int QTabBar_IsTabEnabled(void* ptr, int index);
void QTabBar_KeyPressEvent(void* ptr, void* event);
void QTabBar_KeyPressEventDefault(void* ptr, void* event);
void* QTabBar_MinimumSizeHint(void* ptr);
void* QTabBar_MinimumSizeHintDefault(void* ptr);
void* QTabBar_MinimumTabSizeHint(void* ptr, int index);
void* QTabBar_MinimumTabSizeHintDefault(void* ptr, int index);
void QTabBar_MouseMoveEvent(void* ptr, void* event);
void QTabBar_MouseMoveEventDefault(void* ptr, void* event);
void QTabBar_MousePressEvent(void* ptr, void* event);
void QTabBar_MousePressEventDefault(void* ptr, void* event);
void QTabBar_MouseReleaseEvent(void* ptr, void* event);
void QTabBar_MouseReleaseEventDefault(void* ptr, void* event);
void QTabBar_MoveTab(void* ptr, int from, int to);
void QTabBar_PaintEvent(void* ptr, void* v);
void QTabBar_PaintEventDefault(void* ptr, void* v);
void QTabBar_RemoveTab(void* ptr, int index);
void QTabBar_ResizeEvent(void* ptr, void* v);
void QTabBar_ResizeEventDefault(void* ptr, void* v);
void QTabBar_SetTabButton(void* ptr, int index, int position, void* widget);
void QTabBar_SetTabData(void* ptr, int index, void* data);
void QTabBar_SetTabEnabled(void* ptr, int index, int enabled);
void QTabBar_SetTabIcon(void* ptr, int index, void* icon);
void QTabBar_SetTabText(void* ptr, int index, char* text);
void QTabBar_SetTabTextColor(void* ptr, int index, void* color);
void QTabBar_SetTabToolTip(void* ptr, int index, char* tip);
void QTabBar_SetTabWhatsThis(void* ptr, int index, char* text);
void QTabBar_ShowEvent(void* ptr, void* v);
void QTabBar_ShowEventDefault(void* ptr, void* v);
void* QTabBar_SizeHint(void* ptr);
void* QTabBar_SizeHintDefault(void* ptr);
int QTabBar_TabAt(void* ptr, void* position);
void QTabBar_ConnectTabBarClicked(void* ptr);
void QTabBar_DisconnectTabBarClicked(void* ptr);
void QTabBar_TabBarClicked(void* ptr, int index);
void QTabBar_ConnectTabBarDoubleClicked(void* ptr);
void QTabBar_DisconnectTabBarDoubleClicked(void* ptr);
void QTabBar_TabBarDoubleClicked(void* ptr, int index);
void* QTabBar_TabButton(void* ptr, int index, int position);
void QTabBar_ConnectTabCloseRequested(void* ptr);
void QTabBar_DisconnectTabCloseRequested(void* ptr);
void QTabBar_TabCloseRequested(void* ptr, int index);
void* QTabBar_TabData(void* ptr, int index);
void* QTabBar_TabIcon(void* ptr, int index);
void QTabBar_TabInserted(void* ptr, int index);
void QTabBar_TabInsertedDefault(void* ptr, int index);
void QTabBar_TabLayoutChange(void* ptr);
void QTabBar_TabLayoutChangeDefault(void* ptr);
void QTabBar_ConnectTabMoved(void* ptr);
void QTabBar_DisconnectTabMoved(void* ptr);
void QTabBar_TabMoved(void* ptr, int from, int to);
void* QTabBar_TabRect(void* ptr, int index);
void QTabBar_TabRemoved(void* ptr, int index);
void QTabBar_TabRemovedDefault(void* ptr, int index);
void* QTabBar_TabSizeHint(void* ptr, int index);
void* QTabBar_TabSizeHintDefault(void* ptr, int index);
char* QTabBar_TabText(void* ptr, int index);
void* QTabBar_TabTextColor(void* ptr, int index);
char* QTabBar_TabToolTip(void* ptr, int index);
char* QTabBar_TabWhatsThis(void* ptr, int index);
void QTabBar_TimerEvent(void* ptr, void* event);
void QTabBar_TimerEventDefault(void* ptr, void* event);
void QTabBar_WheelEvent(void* ptr, void* event);
void QTabBar_WheelEventDefault(void* ptr, void* event);
void QTabBar_DestroyQTabBar(void* ptr);
void QTabBar_ActionEvent(void* ptr, void* event);
void QTabBar_ActionEventDefault(void* ptr, void* event);
void QTabBar_DragEnterEvent(void* ptr, void* event);
void QTabBar_DragEnterEventDefault(void* ptr, void* event);
void QTabBar_DragLeaveEvent(void* ptr, void* event);
void QTabBar_DragLeaveEventDefault(void* ptr, void* event);
void QTabBar_DragMoveEvent(void* ptr, void* event);
void QTabBar_DragMoveEventDefault(void* ptr, void* event);
void QTabBar_DropEvent(void* ptr, void* event);
void QTabBar_DropEventDefault(void* ptr, void* event);
void QTabBar_EnterEvent(void* ptr, void* event);
void QTabBar_EnterEventDefault(void* ptr, void* event);
void QTabBar_FocusInEvent(void* ptr, void* event);
void QTabBar_FocusInEventDefault(void* ptr, void* event);
void QTabBar_FocusOutEvent(void* ptr, void* event);
void QTabBar_FocusOutEventDefault(void* ptr, void* event);
void QTabBar_LeaveEvent(void* ptr, void* event);
void QTabBar_LeaveEventDefault(void* ptr, void* event);
void QTabBar_MoveEvent(void* ptr, void* event);
void QTabBar_MoveEventDefault(void* ptr, void* event);
void QTabBar_SetVisible(void* ptr, int visible);
void QTabBar_SetVisibleDefault(void* ptr, int visible);
void QTabBar_CloseEvent(void* ptr, void* event);
void QTabBar_CloseEventDefault(void* ptr, void* event);
void QTabBar_ContextMenuEvent(void* ptr, void* event);
void QTabBar_ContextMenuEventDefault(void* ptr, void* event);
void QTabBar_InitPainter(void* ptr, void* painter);
void QTabBar_InitPainterDefault(void* ptr, void* painter);
void QTabBar_InputMethodEvent(void* ptr, void* event);
void QTabBar_InputMethodEventDefault(void* ptr, void* event);
void QTabBar_KeyReleaseEvent(void* ptr, void* event);
void QTabBar_KeyReleaseEventDefault(void* ptr, void* event);
void QTabBar_MouseDoubleClickEvent(void* ptr, void* event);
void QTabBar_MouseDoubleClickEventDefault(void* ptr, void* event);
void QTabBar_TabletEvent(void* ptr, void* event);
void QTabBar_TabletEventDefault(void* ptr, void* event);
void QTabBar_ChildEvent(void* ptr, void* event);
void QTabBar_ChildEventDefault(void* ptr, void* event);
void QTabBar_CustomEvent(void* ptr, void* event);
void QTabBar_CustomEventDefault(void* ptr, void* event);
int QTabWidget_AddTab2(void* ptr, void* page, void* icon, char* label);
int QTabWidget_AddTab(void* ptr, void* page, char* label);
int QTabWidget_Count(void* ptr);
int QTabWidget_CurrentIndex(void* ptr);
int QTabWidget_DocumentMode(void* ptr);
int QTabWidget_ElideMode(void* ptr);
void* QTabWidget_IconSize(void* ptr);
int QTabWidget_InsertTab2(void* ptr, int index, void* page, void* icon, char* label);
int QTabWidget_InsertTab(void* ptr, int index, void* page, char* label);
int QTabWidget_IsMovable(void* ptr);
void QTabWidget_PaintEvent(void* ptr, void* event);
void QTabWidget_PaintEventDefault(void* ptr, void* event);
void QTabWidget_SetCornerWidget(void* ptr, void* widget, int corner);
void QTabWidget_SetCurrentIndex(void* ptr, int index);
void QTabWidget_SetDocumentMode(void* ptr, int set);
void QTabWidget_SetElideMode(void* ptr, int v);
void QTabWidget_SetIconSize(void* ptr, void* size);
void QTabWidget_SetMovable(void* ptr, int movable);
void QTabWidget_SetTabBarAutoHide(void* ptr, int enabled);
void QTabWidget_SetTabPosition(void* ptr, int v);
void QTabWidget_SetTabShape(void* ptr, int s);
void QTabWidget_SetTabsClosable(void* ptr, int closeable);
void QTabWidget_SetUsesScrollButtons(void* ptr, int useButtons);
int QTabWidget_TabBarAutoHide(void* ptr);
int QTabWidget_TabPosition(void* ptr);
int QTabWidget_TabShape(void* ptr);
int QTabWidget_TabsClosable(void* ptr);
int QTabWidget_UsesScrollButtons(void* ptr);
void* QTabWidget_NewQTabWidget(void* parent);
void QTabWidget_ChangeEvent(void* ptr, void* ev);
void QTabWidget_ChangeEventDefault(void* ptr, void* ev);
void QTabWidget_Clear(void* ptr);
void* QTabWidget_CornerWidget(void* ptr, int corner);
void QTabWidget_ConnectCurrentChanged(void* ptr);
void QTabWidget_DisconnectCurrentChanged(void* ptr);
void QTabWidget_CurrentChanged(void* ptr, int index);
void* QTabWidget_CurrentWidget(void* ptr);
int QTabWidget_Event(void* ptr, void* ev);
int QTabWidget_EventDefault(void* ptr, void* ev);
int QTabWidget_HasHeightForWidth(void* ptr);
int QTabWidget_HasHeightForWidthDefault(void* ptr);
int QTabWidget_HeightForWidth(void* ptr, int width);
int QTabWidget_HeightForWidthDefault(void* ptr, int width);
int QTabWidget_IndexOf(void* ptr, void* w);
int QTabWidget_IsTabEnabled(void* ptr, int index);
void QTabWidget_KeyPressEvent(void* ptr, void* e);
void QTabWidget_KeyPressEventDefault(void* ptr, void* e);
void* QTabWidget_MinimumSizeHint(void* ptr);
void* QTabWidget_MinimumSizeHintDefault(void* ptr);
void QTabWidget_RemoveTab(void* ptr, int index);
void QTabWidget_ResizeEvent(void* ptr, void* e);
void QTabWidget_ResizeEventDefault(void* ptr, void* e);
void QTabWidget_SetCurrentWidget(void* ptr, void* widget);
void QTabWidget_SetTabEnabled(void* ptr, int index, int enable);
void QTabWidget_SetTabIcon(void* ptr, int index, void* icon);
void QTabWidget_SetTabText(void* ptr, int index, char* label);
void QTabWidget_SetTabToolTip(void* ptr, int index, char* tip);
void QTabWidget_SetTabWhatsThis(void* ptr, int index, char* text);
void QTabWidget_ShowEvent(void* ptr, void* v);
void QTabWidget_ShowEventDefault(void* ptr, void* v);
void* QTabWidget_SizeHint(void* ptr);
void* QTabWidget_SizeHintDefault(void* ptr);
void* QTabWidget_TabBar(void* ptr);
void QTabWidget_ConnectTabBarClicked(void* ptr);
void QTabWidget_DisconnectTabBarClicked(void* ptr);
void QTabWidget_TabBarClicked(void* ptr, int index);
void QTabWidget_ConnectTabBarDoubleClicked(void* ptr);
void QTabWidget_DisconnectTabBarDoubleClicked(void* ptr);
void QTabWidget_TabBarDoubleClicked(void* ptr, int index);
void QTabWidget_ConnectTabCloseRequested(void* ptr);
void QTabWidget_DisconnectTabCloseRequested(void* ptr);
void QTabWidget_TabCloseRequested(void* ptr, int index);
void* QTabWidget_TabIcon(void* ptr, int index);
void QTabWidget_TabInserted(void* ptr, int index);
void QTabWidget_TabInsertedDefault(void* ptr, int index);
void QTabWidget_TabRemoved(void* ptr, int index);
void QTabWidget_TabRemovedDefault(void* ptr, int index);
char* QTabWidget_TabText(void* ptr, int index);
char* QTabWidget_TabToolTip(void* ptr, int index);
char* QTabWidget_TabWhatsThis(void* ptr, int index);
void* QTabWidget_Widget(void* ptr, int index);
void QTabWidget_DestroyQTabWidget(void* ptr);
void QTabWidget_ActionEvent(void* ptr, void* event);
void QTabWidget_ActionEventDefault(void* ptr, void* event);
void QTabWidget_DragEnterEvent(void* ptr, void* event);
void QTabWidget_DragEnterEventDefault(void* ptr, void* event);
void QTabWidget_DragLeaveEvent(void* ptr, void* event);
void QTabWidget_DragLeaveEventDefault(void* ptr, void* event);
void QTabWidget_DragMoveEvent(void* ptr, void* event);
void QTabWidget_DragMoveEventDefault(void* ptr, void* event);
void QTabWidget_DropEvent(void* ptr, void* event);
void QTabWidget_DropEventDefault(void* ptr, void* event);
void QTabWidget_EnterEvent(void* ptr, void* event);
void QTabWidget_EnterEventDefault(void* ptr, void* event);
void QTabWidget_FocusInEvent(void* ptr, void* event);
void QTabWidget_FocusInEventDefault(void* ptr, void* event);
void QTabWidget_FocusOutEvent(void* ptr, void* event);
void QTabWidget_FocusOutEventDefault(void* ptr, void* event);
void QTabWidget_HideEvent(void* ptr, void* event);
void QTabWidget_HideEventDefault(void* ptr, void* event);
void QTabWidget_LeaveEvent(void* ptr, void* event);
void QTabWidget_LeaveEventDefault(void* ptr, void* event);
void QTabWidget_MoveEvent(void* ptr, void* event);
void QTabWidget_MoveEventDefault(void* ptr, void* event);
void QTabWidget_SetVisible(void* ptr, int visible);
void QTabWidget_SetVisibleDefault(void* ptr, int visible);
void QTabWidget_CloseEvent(void* ptr, void* event);
void QTabWidget_CloseEventDefault(void* ptr, void* event);
void QTabWidget_ContextMenuEvent(void* ptr, void* event);
void QTabWidget_ContextMenuEventDefault(void* ptr, void* event);
void QTabWidget_InitPainter(void* ptr, void* painter);
void QTabWidget_InitPainterDefault(void* ptr, void* painter);
void QTabWidget_InputMethodEvent(void* ptr, void* event);
void QTabWidget_InputMethodEventDefault(void* ptr, void* event);
void QTabWidget_KeyReleaseEvent(void* ptr, void* event);
void QTabWidget_KeyReleaseEventDefault(void* ptr, void* event);
void QTabWidget_MouseDoubleClickEvent(void* ptr, void* event);
void QTabWidget_MouseDoubleClickEventDefault(void* ptr, void* event);
void QTabWidget_MouseMoveEvent(void* ptr, void* event);
void QTabWidget_MouseMoveEventDefault(void* ptr, void* event);
void QTabWidget_MousePressEvent(void* ptr, void* event);
void QTabWidget_MousePressEventDefault(void* ptr, void* event);
void QTabWidget_MouseReleaseEvent(void* ptr, void* event);
void QTabWidget_MouseReleaseEventDefault(void* ptr, void* event);
void QTabWidget_TabletEvent(void* ptr, void* event);
void QTabWidget_TabletEventDefault(void* ptr, void* event);
void QTabWidget_WheelEvent(void* ptr, void* event);
void QTabWidget_WheelEventDefault(void* ptr, void* event);
void QTabWidget_TimerEvent(void* ptr, void* event);
void QTabWidget_TimerEventDefault(void* ptr, void* event);
void QTabWidget_ChildEvent(void* ptr, void* event);
void QTabWidget_ChildEventDefault(void* ptr, void* event);
void QTabWidget_CustomEvent(void* ptr, void* event);
void QTabWidget_CustomEventDefault(void* ptr, void* event);
int QTableView_GridStyle(void* ptr);
int QTableView_IsCornerButtonEnabled(void* ptr);
int QTableView_IsSortingEnabled(void* ptr);
void* QTableView_MoveCursor(void* ptr, int cursorAction, int modifiers);
void* QTableView_MoveCursorDefault(void* ptr, int cursorAction, int modifiers);
void QTableView_SetCornerButtonEnabled(void* ptr, int enable);
void QTableView_SetGridStyle(void* ptr, int style);
void QTableView_SetSelection(void* ptr, void* rect, int flags);
void QTableView_SetSelectionDefault(void* ptr, void* rect, int flags);
void QTableView_SetShowGrid(void* ptr, int show);
void QTableView_SetSpan(void* ptr, int row, int column, int rowSpanCount, int columnSpanCount);
void QTableView_SetWordWrap(void* ptr, int on);
int QTableView_ShowGrid(void* ptr);
int QTableView_WordWrap(void* ptr);
void QTableView_ClearSpans(void* ptr);
int QTableView_ColumnAt(void* ptr, int x);
int QTableView_ColumnSpan(void* ptr, int row, int column);
int QTableView_ColumnViewportPosition(void* ptr, int column);
int QTableView_ColumnWidth(void* ptr, int column);
void QTableView_CurrentChanged(void* ptr, void* current, void* previous);
void QTableView_CurrentChangedDefault(void* ptr, void* current, void* previous);
void QTableView_HideColumn(void* ptr, int column);
void QTableView_HideRow(void* ptr, int row);
void* QTableView_HorizontalHeader(void* ptr);
int QTableView_HorizontalOffset(void* ptr);
int QTableView_HorizontalOffsetDefault(void* ptr);
void* QTableView_IndexAt(void* ptr, void* pos);
void* QTableView_IndexAtDefault(void* ptr, void* pos);
int QTableView_IsColumnHidden(void* ptr, int column);
int QTableView_IsIndexHidden(void* ptr, void* index);
int QTableView_IsIndexHiddenDefault(void* ptr, void* index);
int QTableView_IsRowHidden(void* ptr, int row);
void QTableView_PaintEvent(void* ptr, void* event);
void QTableView_PaintEventDefault(void* ptr, void* event);
void QTableView_ResizeColumnToContents(void* ptr, int column);
void QTableView_ResizeColumnsToContents(void* ptr);
void QTableView_ResizeRowToContents(void* ptr, int row);
void QTableView_ResizeRowsToContents(void* ptr);
int QTableView_RowAt(void* ptr, int y);
int QTableView_RowHeight(void* ptr, int row);
int QTableView_RowSpan(void* ptr, int row, int column);
int QTableView_RowViewportPosition(void* ptr, int row);
void QTableView_SelectColumn(void* ptr, int column);
void QTableView_SelectRow(void* ptr, int row);
void QTableView_SetColumnHidden(void* ptr, int column, int hide);
void QTableView_SetColumnWidth(void* ptr, int column, int width);
void QTableView_SetHorizontalHeader(void* ptr, void* header);
void QTableView_SetModel(void* ptr, void* model);
void QTableView_SetModelDefault(void* ptr, void* model);
void QTableView_SetRootIndex(void* ptr, void* index);
void QTableView_SetRootIndexDefault(void* ptr, void* index);
void QTableView_SetRowHeight(void* ptr, int row, int height);
void QTableView_SetRowHidden(void* ptr, int row, int hide);
void QTableView_SetSelectionModel(void* ptr, void* selectionModel);
void QTableView_SetSelectionModelDefault(void* ptr, void* selectionModel);
void QTableView_SetSortingEnabled(void* ptr, int enable);
void QTableView_SetVerticalHeader(void* ptr, void* header);
void QTableView_ShowColumn(void* ptr, int column);
void QTableView_ShowRow(void* ptr, int row);
int QTableView_SizeHintForColumn(void* ptr, int column);
int QTableView_SizeHintForColumnDefault(void* ptr, int column);
int QTableView_SizeHintForRow(void* ptr, int row);
int QTableView_SizeHintForRowDefault(void* ptr, int row);
void QTableView_SortByColumn(void* ptr, int column, int order);
void QTableView_TimerEvent(void* ptr, void* event);
void QTableView_TimerEventDefault(void* ptr, void* event);
void QTableView_UpdateGeometries(void* ptr);
void QTableView_UpdateGeometriesDefault(void* ptr);
void* QTableView_VerticalHeader(void* ptr);
int QTableView_VerticalOffset(void* ptr);
int QTableView_VerticalOffsetDefault(void* ptr);
void* QTableView_ViewportSizeHint(void* ptr);
void* QTableView_ViewportSizeHintDefault(void* ptr);
void QTableView_DestroyQTableView(void* ptr);
void QTableView_DragLeaveEvent(void* ptr, void* event);
void QTableView_DragLeaveEventDefault(void* ptr, void* event);
void QTableView_CloseEditor(void* ptr, void* editor, int hint);
void QTableView_CloseEditorDefault(void* ptr, void* editor, int hint);
void QTableView_CommitData(void* ptr, void* editor);
void QTableView_CommitDataDefault(void* ptr, void* editor);
void QTableView_DragEnterEvent(void* ptr, void* event);
void QTableView_DragEnterEventDefault(void* ptr, void* event);
void QTableView_DragMoveEvent(void* ptr, void* event);
void QTableView_DragMoveEventDefault(void* ptr, void* event);
void QTableView_DropEvent(void* ptr, void* event);
void QTableView_DropEventDefault(void* ptr, void* event);
void QTableView_EditorDestroyed(void* ptr, void* editor);
void QTableView_EditorDestroyedDefault(void* ptr, void* editor);
void QTableView_FocusInEvent(void* ptr, void* event);
void QTableView_FocusInEventDefault(void* ptr, void* event);
void QTableView_FocusOutEvent(void* ptr, void* event);
void QTableView_FocusOutEventDefault(void* ptr, void* event);
void QTableView_InputMethodEvent(void* ptr, void* event);
void QTableView_InputMethodEventDefault(void* ptr, void* event);
void QTableView_KeyPressEvent(void* ptr, void* event);
void QTableView_KeyPressEventDefault(void* ptr, void* event);
void QTableView_KeyboardSearch(void* ptr, char* search);
void QTableView_KeyboardSearchDefault(void* ptr, char* search);
void QTableView_MouseDoubleClickEvent(void* ptr, void* event);
void QTableView_MouseDoubleClickEventDefault(void* ptr, void* event);
void QTableView_MouseMoveEvent(void* ptr, void* event);
void QTableView_MouseMoveEventDefault(void* ptr, void* event);
void QTableView_MousePressEvent(void* ptr, void* event);
void QTableView_MousePressEventDefault(void* ptr, void* event);
void QTableView_MouseReleaseEvent(void* ptr, void* event);
void QTableView_MouseReleaseEventDefault(void* ptr, void* event);
void QTableView_Reset(void* ptr);
void QTableView_ResetDefault(void* ptr);
void QTableView_ResizeEvent(void* ptr, void* event);
void QTableView_ResizeEventDefault(void* ptr, void* event);
void QTableView_RowsAboutToBeRemoved(void* ptr, void* parent, int start, int end);
void QTableView_RowsAboutToBeRemovedDefault(void* ptr, void* parent, int start, int end);
void QTableView_RowsInserted(void* ptr, void* parent, int start, int end);
void QTableView_RowsInsertedDefault(void* ptr, void* parent, int start, int end);
void QTableView_SelectAll(void* ptr);
void QTableView_SelectAllDefault(void* ptr);
void QTableView_StartDrag(void* ptr, int supportedActions);
void QTableView_StartDragDefault(void* ptr, int supportedActions);
void QTableView_ContextMenuEvent(void* ptr, void* e);
void QTableView_ContextMenuEventDefault(void* ptr, void* e);
void QTableView_ScrollContentsBy(void* ptr, int dx, int dy);
void QTableView_ScrollContentsByDefault(void* ptr, int dx, int dy);
void QTableView_SetupViewport(void* ptr, void* viewport);
void QTableView_SetupViewportDefault(void* ptr, void* viewport);
void QTableView_WheelEvent(void* ptr, void* e);
void QTableView_WheelEventDefault(void* ptr, void* e);
void QTableView_ChangeEvent(void* ptr, void* ev);
void QTableView_ChangeEventDefault(void* ptr, void* ev);
void QTableView_ActionEvent(void* ptr, void* event);
void QTableView_ActionEventDefault(void* ptr, void* event);
void QTableView_EnterEvent(void* ptr, void* event);
void QTableView_EnterEventDefault(void* ptr, void* event);
void QTableView_HideEvent(void* ptr, void* event);
void QTableView_HideEventDefault(void* ptr, void* event);
void QTableView_LeaveEvent(void* ptr, void* event);
void QTableView_LeaveEventDefault(void* ptr, void* event);
void QTableView_MoveEvent(void* ptr, void* event);
void QTableView_MoveEventDefault(void* ptr, void* event);
void QTableView_SetVisible(void* ptr, int visible);
void QTableView_SetVisibleDefault(void* ptr, int visible);
void QTableView_ShowEvent(void* ptr, void* event);
void QTableView_ShowEventDefault(void* ptr, void* event);
void QTableView_CloseEvent(void* ptr, void* event);
void QTableView_CloseEventDefault(void* ptr, void* event);
void QTableView_InitPainter(void* ptr, void* painter);
void QTableView_InitPainterDefault(void* ptr, void* painter);
void QTableView_KeyReleaseEvent(void* ptr, void* event);
void QTableView_KeyReleaseEventDefault(void* ptr, void* event);
void QTableView_TabletEvent(void* ptr, void* event);
void QTableView_TabletEventDefault(void* ptr, void* event);
void QTableView_ChildEvent(void* ptr, void* event);
void QTableView_ChildEventDefault(void* ptr, void* event);
void QTableView_CustomEvent(void* ptr, void* event);
void QTableView_CustomEventDefault(void* ptr, void* event);
void* QTableWidget_ItemAt(void* ptr, void* point);
void QTableWidget_ConnectCellActivated(void* ptr);
void QTableWidget_DisconnectCellActivated(void* ptr);
void QTableWidget_CellActivated(void* ptr, int row, int column);
void QTableWidget_ConnectCellChanged(void* ptr);
void QTableWidget_DisconnectCellChanged(void* ptr);
void QTableWidget_CellChanged(void* ptr, int row, int column);
void QTableWidget_ConnectCellClicked(void* ptr);
void QTableWidget_DisconnectCellClicked(void* ptr);
void QTableWidget_CellClicked(void* ptr, int row, int column);
void QTableWidget_ConnectCellDoubleClicked(void* ptr);
void QTableWidget_DisconnectCellDoubleClicked(void* ptr);
void QTableWidget_CellDoubleClicked(void* ptr, int row, int column);
void QTableWidget_ConnectCellEntered(void* ptr);
void QTableWidget_DisconnectCellEntered(void* ptr);
void QTableWidget_CellEntered(void* ptr, int row, int column);
void QTableWidget_ConnectCellPressed(void* ptr);
void QTableWidget_DisconnectCellPressed(void* ptr);
void QTableWidget_CellPressed(void* ptr, int row, int column);
void* QTableWidget_CellWidget(void* ptr, int row, int column);
void QTableWidget_Clear(void* ptr);
void QTableWidget_ClearContents(void* ptr);
void QTableWidget_ClosePersistentEditor(void* ptr, void* item);
int QTableWidget_Column(void* ptr, void* item);
int QTableWidget_ColumnCount(void* ptr);
void QTableWidget_ConnectCurrentCellChanged(void* ptr);
void QTableWidget_DisconnectCurrentCellChanged(void* ptr);
void QTableWidget_CurrentCellChanged(void* ptr, int currentRow, int currentColumn, int previousRow, int previousColumn);
int QTableWidget_CurrentColumn(void* ptr);
void* QTableWidget_CurrentItem(void* ptr);
void QTableWidget_ConnectCurrentItemChanged(void* ptr);
void QTableWidget_DisconnectCurrentItemChanged(void* ptr);
void QTableWidget_CurrentItemChanged(void* ptr, void* current, void* previous);
int QTableWidget_CurrentRow(void* ptr);
void QTableWidget_DropEvent(void* ptr, void* event);
void QTableWidget_DropEventDefault(void* ptr, void* event);
int QTableWidget_DropMimeData(void* ptr, int row, int column, void* data, int action);
int QTableWidget_DropMimeDataDefault(void* ptr, int row, int column, void* data, int action);
void QTableWidget_EditItem(void* ptr, void* item);
int QTableWidget_Event(void* ptr, void* e);
int QTableWidget_EventDefault(void* ptr, void* e);
void* QTableWidget_HorizontalHeaderItem(void* ptr, int column);
void QTableWidget_InsertColumn(void* ptr, int column);
void QTableWidget_InsertRow(void* ptr, int row);
void* QTableWidget_Item(void* ptr, int row, int column);
void QTableWidget_ConnectItemActivated(void* ptr);
void QTableWidget_DisconnectItemActivated(void* ptr);
void QTableWidget_ItemActivated(void* ptr, void* item);
void* QTableWidget_ItemAt2(void* ptr, int ax, int ay);
void QTableWidget_ConnectItemChanged(void* ptr);
void QTableWidget_DisconnectItemChanged(void* ptr);
void QTableWidget_ItemChanged(void* ptr, void* item);
void QTableWidget_ConnectItemClicked(void* ptr);
void QTableWidget_DisconnectItemClicked(void* ptr);
void QTableWidget_ItemClicked(void* ptr, void* item);
void QTableWidget_ConnectItemDoubleClicked(void* ptr);
void QTableWidget_DisconnectItemDoubleClicked(void* ptr);
void QTableWidget_ItemDoubleClicked(void* ptr, void* item);
void QTableWidget_ConnectItemEntered(void* ptr);
void QTableWidget_DisconnectItemEntered(void* ptr);
void QTableWidget_ItemEntered(void* ptr, void* item);
void QTableWidget_ConnectItemPressed(void* ptr);
void QTableWidget_DisconnectItemPressed(void* ptr);
void QTableWidget_ItemPressed(void* ptr, void* item);
void* QTableWidget_ItemPrototype(void* ptr);
void QTableWidget_ConnectItemSelectionChanged(void* ptr);
void QTableWidget_DisconnectItemSelectionChanged(void* ptr);
void QTableWidget_ItemSelectionChanged(void* ptr);
char* QTableWidget_MimeTypes(void* ptr);
char* QTableWidget_MimeTypesDefault(void* ptr);
void QTableWidget_OpenPersistentEditor(void* ptr, void* item);
void QTableWidget_RemoveCellWidget(void* ptr, int row, int column);
void QTableWidget_RemoveColumn(void* ptr, int column);
void QTableWidget_RemoveRow(void* ptr, int row);
int QTableWidget_Row(void* ptr, void* item);
int QTableWidget_RowCount(void* ptr);
void QTableWidget_ScrollToItem(void* ptr, void* item, int hint);
void QTableWidget_SetCellWidget(void* ptr, int row, int column, void* widget);
void QTableWidget_SetColumnCount(void* ptr, int columns);
void QTableWidget_SetCurrentCell(void* ptr, int row, int column);
void QTableWidget_SetCurrentCell2(void* ptr, int row, int column, int command);
void QTableWidget_SetCurrentItem(void* ptr, void* item);
void QTableWidget_SetCurrentItem2(void* ptr, void* item, int command);
void QTableWidget_SetHorizontalHeaderItem(void* ptr, int column, void* item);
void QTableWidget_SetHorizontalHeaderLabels(void* ptr, char* labels);
void QTableWidget_SetItem(void* ptr, int row, int column, void* item);
void QTableWidget_SetItemPrototype(void* ptr, void* item);
void QTableWidget_SetRangeSelected(void* ptr, void* ran, int sele);
void QTableWidget_SetRowCount(void* ptr, int rows);
void QTableWidget_SetVerticalHeaderItem(void* ptr, int row, void* item);
void QTableWidget_SetVerticalHeaderLabels(void* ptr, char* labels);
void QTableWidget_SortItems(void* ptr, int column, int order);
int QTableWidget_SupportedDropActions(void* ptr);
int QTableWidget_SupportedDropActionsDefault(void* ptr);
void* QTableWidget_TakeHorizontalHeaderItem(void* ptr, int column);
void* QTableWidget_TakeItem(void* ptr, int row, int column);
void* QTableWidget_TakeVerticalHeaderItem(void* ptr, int row);
void* QTableWidget_VerticalHeaderItem(void* ptr, int row);
int QTableWidget_VisualColumn(void* ptr, int logicalColumn);
void* QTableWidget_VisualItemRect(void* ptr, void* item);
int QTableWidget_VisualRow(void* ptr, int logicalRow);
void QTableWidget_DestroyQTableWidget(void* ptr);
void QTableWidget_SetSelection(void* ptr, void* rect, int flags);
void QTableWidget_SetSelectionDefault(void* ptr, void* rect, int flags);
void QTableWidget_CurrentChanged(void* ptr, void* current, void* previous);
void QTableWidget_CurrentChangedDefault(void* ptr, void* current, void* previous);
void QTableWidget_PaintEvent(void* ptr, void* event);
void QTableWidget_PaintEventDefault(void* ptr, void* event);
void QTableWidget_SetRootIndex(void* ptr, void* index);
void QTableWidget_SetRootIndexDefault(void* ptr, void* index);
void QTableWidget_SetSelectionModel(void* ptr, void* selectionModel);
void QTableWidget_SetSelectionModelDefault(void* ptr, void* selectionModel);
void QTableWidget_TimerEvent(void* ptr, void* event);
void QTableWidget_TimerEventDefault(void* ptr, void* event);
void QTableWidget_UpdateGeometries(void* ptr);
void QTableWidget_UpdateGeometriesDefault(void* ptr);
void QTableWidget_DragLeaveEvent(void* ptr, void* event);
void QTableWidget_DragLeaveEventDefault(void* ptr, void* event);
void QTableWidget_CloseEditor(void* ptr, void* editor, int hint);
void QTableWidget_CloseEditorDefault(void* ptr, void* editor, int hint);
void QTableWidget_CommitData(void* ptr, void* editor);
void QTableWidget_CommitDataDefault(void* ptr, void* editor);
void QTableWidget_DragEnterEvent(void* ptr, void* event);
void QTableWidget_DragEnterEventDefault(void* ptr, void* event);
void QTableWidget_DragMoveEvent(void* ptr, void* event);
void QTableWidget_DragMoveEventDefault(void* ptr, void* event);
void QTableWidget_EditorDestroyed(void* ptr, void* editor);
void QTableWidget_EditorDestroyedDefault(void* ptr, void* editor);
void QTableWidget_FocusInEvent(void* ptr, void* event);
void QTableWidget_FocusInEventDefault(void* ptr, void* event);
void QTableWidget_FocusOutEvent(void* ptr, void* event);
void QTableWidget_FocusOutEventDefault(void* ptr, void* event);
void QTableWidget_InputMethodEvent(void* ptr, void* event);
void QTableWidget_InputMethodEventDefault(void* ptr, void* event);
void QTableWidget_KeyPressEvent(void* ptr, void* event);
void QTableWidget_KeyPressEventDefault(void* ptr, void* event);
void QTableWidget_KeyboardSearch(void* ptr, char* search);
void QTableWidget_KeyboardSearchDefault(void* ptr, char* search);
void QTableWidget_MouseDoubleClickEvent(void* ptr, void* event);
void QTableWidget_MouseDoubleClickEventDefault(void* ptr, void* event);
void QTableWidget_MouseMoveEvent(void* ptr, void* event);
void QTableWidget_MouseMoveEventDefault(void* ptr, void* event);
void QTableWidget_MousePressEvent(void* ptr, void* event);
void QTableWidget_MousePressEventDefault(void* ptr, void* event);
void QTableWidget_MouseReleaseEvent(void* ptr, void* event);
void QTableWidget_MouseReleaseEventDefault(void* ptr, void* event);
void QTableWidget_Reset(void* ptr);
void QTableWidget_ResetDefault(void* ptr);
void QTableWidget_ResizeEvent(void* ptr, void* event);
void QTableWidget_ResizeEventDefault(void* ptr, void* event);
void QTableWidget_RowsAboutToBeRemoved(void* ptr, void* parent, int start, int end);
void QTableWidget_RowsAboutToBeRemovedDefault(void* ptr, void* parent, int start, int end);
void QTableWidget_RowsInserted(void* ptr, void* parent, int start, int end);
void QTableWidget_RowsInsertedDefault(void* ptr, void* parent, int start, int end);
void QTableWidget_SelectAll(void* ptr);
void QTableWidget_SelectAllDefault(void* ptr);
void QTableWidget_StartDrag(void* ptr, int supportedActions);
void QTableWidget_StartDragDefault(void* ptr, int supportedActions);
void QTableWidget_ContextMenuEvent(void* ptr, void* e);
void QTableWidget_ContextMenuEventDefault(void* ptr, void* e);
void QTableWidget_ScrollContentsBy(void* ptr, int dx, int dy);
void QTableWidget_ScrollContentsByDefault(void* ptr, int dx, int dy);
void QTableWidget_SetupViewport(void* ptr, void* viewport);
void QTableWidget_SetupViewportDefault(void* ptr, void* viewport);
void QTableWidget_WheelEvent(void* ptr, void* e);
void QTableWidget_WheelEventDefault(void* ptr, void* e);
void QTableWidget_ChangeEvent(void* ptr, void* ev);
void QTableWidget_ChangeEventDefault(void* ptr, void* ev);
void QTableWidget_ActionEvent(void* ptr, void* event);
void QTableWidget_ActionEventDefault(void* ptr, void* event);
void QTableWidget_EnterEvent(void* ptr, void* event);
void QTableWidget_EnterEventDefault(void* ptr, void* event);
void QTableWidget_HideEvent(void* ptr, void* event);
void QTableWidget_HideEventDefault(void* ptr, void* event);
void QTableWidget_LeaveEvent(void* ptr, void* event);
void QTableWidget_LeaveEventDefault(void* ptr, void* event);
void QTableWidget_MoveEvent(void* ptr, void* event);
void QTableWidget_MoveEventDefault(void* ptr, void* event);
void QTableWidget_SetVisible(void* ptr, int visible);
void QTableWidget_SetVisibleDefault(void* ptr, int visible);
void QTableWidget_ShowEvent(void* ptr, void* event);
void QTableWidget_ShowEventDefault(void* ptr, void* event);
void QTableWidget_CloseEvent(void* ptr, void* event);
void QTableWidget_CloseEventDefault(void* ptr, void* event);
void QTableWidget_InitPainter(void* ptr, void* painter);
void QTableWidget_InitPainterDefault(void* ptr, void* painter);
void QTableWidget_KeyReleaseEvent(void* ptr, void* event);
void QTableWidget_KeyReleaseEventDefault(void* ptr, void* event);
void QTableWidget_TabletEvent(void* ptr, void* event);
void QTableWidget_TabletEventDefault(void* ptr, void* event);
void QTableWidget_ChildEvent(void* ptr, void* event);
void QTableWidget_ChildEventDefault(void* ptr, void* event);
void QTableWidget_CustomEvent(void* ptr, void* event);
void QTableWidget_CustomEventDefault(void* ptr, void* event);
void QTableWidgetItem_SetFlags(void* ptr, int flags);
void* QTableWidgetItem_NewQTableWidgetItem3(void* icon, char* text, int ty);
void* QTableWidgetItem_NewQTableWidgetItem2(char* text, int ty);
void* QTableWidgetItem_NewQTableWidgetItem4(void* other);
void* QTableWidgetItem_NewQTableWidgetItem(int ty);
void* QTableWidgetItem_Background(void* ptr);
int QTableWidgetItem_CheckState(void* ptr);
void* QTableWidgetItem_Clone(void* ptr);
void* QTableWidgetItem_CloneDefault(void* ptr);
int QTableWidgetItem_Column(void* ptr);
void* QTableWidgetItem_Data(void* ptr, int role);
void* QTableWidgetItem_DataDefault(void* ptr, int role);
int QTableWidgetItem_Flags(void* ptr);
void* QTableWidgetItem_Foreground(void* ptr);
void* QTableWidgetItem_Icon(void* ptr);
int QTableWidgetItem_IsSelected(void* ptr);
int QTableWidgetItem_Row(void* ptr);
void QTableWidgetItem_SetBackground(void* ptr, void* brush);
void QTableWidgetItem_SetCheckState(void* ptr, int state);
void QTableWidgetItem_SetData(void* ptr, int role, void* value);
void QTableWidgetItem_SetDataDefault(void* ptr, int role, void* value);
void QTableWidgetItem_SetFont(void* ptr, void* font);
void QTableWidgetItem_SetForeground(void* ptr, void* brush);
void QTableWidgetItem_SetIcon(void* ptr, void* icon);
void QTableWidgetItem_SetSelected(void* ptr, int sele);
void QTableWidgetItem_SetSizeHint(void* ptr, void* size);
void QTableWidgetItem_SetStatusTip(void* ptr, char* statusTip);
void QTableWidgetItem_SetText(void* ptr, char* text);
void QTableWidgetItem_SetTextAlignment(void* ptr, int alignment);
void QTableWidgetItem_SetToolTip(void* ptr, char* toolTip);
void QTableWidgetItem_SetWhatsThis(void* ptr, char* whatsThis);
void* QTableWidgetItem_SizeHint(void* ptr);
char* QTableWidgetItem_StatusTip(void* ptr);
void* QTableWidgetItem_TableWidget(void* ptr);
char* QTableWidgetItem_Text(void* ptr);
int QTableWidgetItem_TextAlignment(void* ptr);
char* QTableWidgetItem_ToolTip(void* ptr);
int QTableWidgetItem_Type(void* ptr);
char* QTableWidgetItem_WhatsThis(void* ptr);
void QTableWidgetItem_DestroyQTableWidgetItem(void* ptr);
char* QTableWidgetItem_ObjectNameAbs(void* ptr);
void QTableWidgetItem_SetObjectNameAbs(void* ptr, char* name);
void* QTableWidgetSelectionRange_NewQTableWidgetSelectionRange();
void* QTableWidgetSelectionRange_NewQTableWidgetSelectionRange3(void* other);
void* QTableWidgetSelectionRange_NewQTableWidgetSelectionRange2(int top, int left, int bottom, int right);
int QTableWidgetSelectionRange_BottomRow(void* ptr);
int QTableWidgetSelectionRange_ColumnCount(void* ptr);
int QTableWidgetSelectionRange_LeftColumn(void* ptr);
int QTableWidgetSelectionRange_RightColumn(void* ptr);
int QTableWidgetSelectionRange_RowCount(void* ptr);
int QTableWidgetSelectionRange_TopRow(void* ptr);
void QTableWidgetSelectionRange_DestroyQTableWidgetSelectionRange(void* ptr);
void QTapAndHoldGesture_SetPosition(void* ptr, void* pos);
void QTapAndHoldGesture_QTapAndHoldGesture_SetTimeout(int msecs);
int QTapAndHoldGesture_QTapAndHoldGesture_Timeout();
void QTapAndHoldGesture_DestroyQTapAndHoldGesture(void* ptr);
void QTapAndHoldGesture_TimerEvent(void* ptr, void* event);
void QTapAndHoldGesture_TimerEventDefault(void* ptr, void* event);
void QTapAndHoldGesture_ChildEvent(void* ptr, void* event);
void QTapAndHoldGesture_ChildEventDefault(void* ptr, void* event);
void QTapAndHoldGesture_CustomEvent(void* ptr, void* event);
void QTapAndHoldGesture_CustomEventDefault(void* ptr, void* event);
void QTapGesture_SetPosition(void* ptr, void* pos);
void QTapGesture_DestroyQTapGesture(void* ptr);
void QTapGesture_TimerEvent(void* ptr, void* event);
void QTapGesture_TimerEventDefault(void* ptr, void* event);
void QTapGesture_ChildEvent(void* ptr, void* event);
void QTapGesture_ChildEventDefault(void* ptr, void* event);
void QTapGesture_CustomEvent(void* ptr, void* event);
void QTapGesture_CustomEventDefault(void* ptr, void* event);
int QTextBrowser_OpenExternalLinks(void* ptr);
int QTextBrowser_OpenLinks(void* ptr);
char* QTextBrowser_SearchPaths(void* ptr);
void QTextBrowser_SetOpenExternalLinks(void* ptr, int open);
void QTextBrowser_SetOpenLinks(void* ptr, int open);
void QTextBrowser_SetSearchPaths(void* ptr, char* paths);
void QTextBrowser_SetSource(void* ptr, void* name);
void QTextBrowser_SetSourceDefault(void* ptr, void* name);
void* QTextBrowser_Source(void* ptr);
void* QTextBrowser_NewQTextBrowser(void* parent);
void QTextBrowser_ConnectAnchorClicked(void* ptr);
void QTextBrowser_DisconnectAnchorClicked(void* ptr);
void QTextBrowser_AnchorClicked(void* ptr, void* link);
void QTextBrowser_Backward(void* ptr);
void QTextBrowser_BackwardDefault(void* ptr);
void QTextBrowser_ConnectBackwardAvailable(void* ptr);
void QTextBrowser_DisconnectBackwardAvailable(void* ptr);
void QTextBrowser_BackwardAvailable(void* ptr, int available);
int QTextBrowser_BackwardHistoryCount(void* ptr);
void QTextBrowser_ClearHistory(void* ptr);
int QTextBrowser_Event(void* ptr, void* e);
int QTextBrowser_EventDefault(void* ptr, void* e);
int QTextBrowser_FocusNextPrevChild(void* ptr, int next);
int QTextBrowser_FocusNextPrevChildDefault(void* ptr, int next);
void QTextBrowser_FocusOutEvent(void* ptr, void* ev);
void QTextBrowser_FocusOutEventDefault(void* ptr, void* ev);
void QTextBrowser_Forward(void* ptr);
void QTextBrowser_ForwardDefault(void* ptr);
void QTextBrowser_ConnectForwardAvailable(void* ptr);
void QTextBrowser_DisconnectForwardAvailable(void* ptr);
void QTextBrowser_ForwardAvailable(void* ptr, int available);
int QTextBrowser_ForwardHistoryCount(void* ptr);
void QTextBrowser_ConnectHighlighted2(void* ptr);
void QTextBrowser_DisconnectHighlighted2(void* ptr);
void QTextBrowser_Highlighted2(void* ptr, char* link);
void QTextBrowser_ConnectHighlighted(void* ptr);
void QTextBrowser_DisconnectHighlighted(void* ptr);
void QTextBrowser_Highlighted(void* ptr, void* link);
void QTextBrowser_ConnectHistoryChanged(void* ptr);
void QTextBrowser_DisconnectHistoryChanged(void* ptr);
void QTextBrowser_HistoryChanged(void* ptr);
char* QTextBrowser_HistoryTitle(void* ptr, int i);
void* QTextBrowser_HistoryUrl(void* ptr, int i);
void QTextBrowser_Home(void* ptr);
void QTextBrowser_HomeDefault(void* ptr);
int QTextBrowser_IsBackwardAvailable(void* ptr);
int QTextBrowser_IsForwardAvailable(void* ptr);
void QTextBrowser_KeyPressEvent(void* ptr, void* ev);
void QTextBrowser_KeyPressEventDefault(void* ptr, void* ev);
void* QTextBrowser_LoadResource(void* ptr, int ty, void* name);
void* QTextBrowser_LoadResourceDefault(void* ptr, int ty, void* name);
void QTextBrowser_MouseMoveEvent(void* ptr, void* e);
void QTextBrowser_MouseMoveEventDefault(void* ptr, void* e);
void QTextBrowser_MousePressEvent(void* ptr, void* e);
void QTextBrowser_MousePressEventDefault(void* ptr, void* e);
void QTextBrowser_MouseReleaseEvent(void* ptr, void* e);
void QTextBrowser_MouseReleaseEventDefault(void* ptr, void* e);
void QTextBrowser_PaintEvent(void* ptr, void* e);
void QTextBrowser_PaintEventDefault(void* ptr, void* e);
void QTextBrowser_Reload(void* ptr);
void QTextBrowser_ReloadDefault(void* ptr);
void QTextBrowser_ConnectSourceChanged(void* ptr);
void QTextBrowser_DisconnectSourceChanged(void* ptr);
void QTextBrowser_SourceChanged(void* ptr, void* src);
void QTextBrowser_ContextMenuEvent(void* ptr, void* event);
void QTextBrowser_ContextMenuEventDefault(void* ptr, void* event);
void QTextBrowser_ChangeEvent(void* ptr, void* e);
void QTextBrowser_ChangeEventDefault(void* ptr, void* e);
void QTextBrowser_DragEnterEvent(void* ptr, void* e);
void QTextBrowser_DragEnterEventDefault(void* ptr, void* e);
void QTextBrowser_DragLeaveEvent(void* ptr, void* e);
void QTextBrowser_DragLeaveEventDefault(void* ptr, void* e);
void QTextBrowser_DragMoveEvent(void* ptr, void* e);
void QTextBrowser_DragMoveEventDefault(void* ptr, void* e);
void QTextBrowser_DropEvent(void* ptr, void* e);
void QTextBrowser_DropEventDefault(void* ptr, void* e);
void QTextBrowser_FocusInEvent(void* ptr, void* e);
void QTextBrowser_FocusInEventDefault(void* ptr, void* e);
void QTextBrowser_InputMethodEvent(void* ptr, void* e);
void QTextBrowser_InputMethodEventDefault(void* ptr, void* e);
void QTextBrowser_InsertFromMimeData(void* ptr, void* source);
void QTextBrowser_InsertFromMimeDataDefault(void* ptr, void* source);
void QTextBrowser_KeyReleaseEvent(void* ptr, void* e);
void QTextBrowser_KeyReleaseEventDefault(void* ptr, void* e);
void QTextBrowser_MouseDoubleClickEvent(void* ptr, void* e);
void QTextBrowser_MouseDoubleClickEventDefault(void* ptr, void* e);
void QTextBrowser_ResizeEvent(void* ptr, void* e);
void QTextBrowser_ResizeEventDefault(void* ptr, void* e);
void QTextBrowser_ScrollContentsBy(void* ptr, int dx, int dy);
void QTextBrowser_ScrollContentsByDefault(void* ptr, int dx, int dy);
void QTextBrowser_ShowEvent(void* ptr, void* v);
void QTextBrowser_ShowEventDefault(void* ptr, void* v);
void QTextBrowser_WheelEvent(void* ptr, void* e);
void QTextBrowser_WheelEventDefault(void* ptr, void* e);
void QTextBrowser_SetupViewport(void* ptr, void* viewport);
void QTextBrowser_SetupViewportDefault(void* ptr, void* viewport);
void QTextBrowser_ActionEvent(void* ptr, void* event);
void QTextBrowser_ActionEventDefault(void* ptr, void* event);
void QTextBrowser_EnterEvent(void* ptr, void* event);
void QTextBrowser_EnterEventDefault(void* ptr, void* event);
void QTextBrowser_HideEvent(void* ptr, void* event);
void QTextBrowser_HideEventDefault(void* ptr, void* event);
void QTextBrowser_LeaveEvent(void* ptr, void* event);
void QTextBrowser_LeaveEventDefault(void* ptr, void* event);
void QTextBrowser_MoveEvent(void* ptr, void* event);
void QTextBrowser_MoveEventDefault(void* ptr, void* event);
void QTextBrowser_SetVisible(void* ptr, int visible);
void QTextBrowser_SetVisibleDefault(void* ptr, int visible);
void QTextBrowser_CloseEvent(void* ptr, void* event);
void QTextBrowser_CloseEventDefault(void* ptr, void* event);
void QTextBrowser_InitPainter(void* ptr, void* painter);
void QTextBrowser_InitPainterDefault(void* ptr, void* painter);
void QTextBrowser_TabletEvent(void* ptr, void* event);
void QTextBrowser_TabletEventDefault(void* ptr, void* event);
void QTextBrowser_TimerEvent(void* ptr, void* event);
void QTextBrowser_TimerEventDefault(void* ptr, void* event);
void QTextBrowser_ChildEvent(void* ptr, void* event);
void QTextBrowser_ChildEventDefault(void* ptr, void* event);
void QTextBrowser_CustomEvent(void* ptr, void* event);
void QTextBrowser_CustomEventDefault(void* ptr, void* event);
int QTextEdit_AcceptRichText(void* ptr);
int QTextEdit_AutoFormatting(void* ptr);
void QTextEdit_ContextMenuEvent(void* ptr, void* event);
void QTextEdit_ContextMenuEventDefault(void* ptr, void* event);
int QTextEdit_CursorWidth(void* ptr);
void* QTextEdit_Document(void* ptr);
int QTextEdit_IsReadOnly(void* ptr);
int QTextEdit_LineWrapColumnOrWidth(void* ptr);
int QTextEdit_LineWrapMode(void* ptr);
int QTextEdit_OverwriteMode(void* ptr);
void QTextEdit_PaintEvent(void* ptr, void* event);
void QTextEdit_PaintEventDefault(void* ptr, void* event);
char* QTextEdit_PlaceholderText(void* ptr);
void QTextEdit_Redo(void* ptr);
void QTextEdit_SetAcceptRichText(void* ptr, int accept);
void QTextEdit_SetAutoFormatting(void* ptr, int features);
void QTextEdit_SetCursorWidth(void* ptr, int width);
void QTextEdit_SetDocument(void* ptr, void* document);
void QTextEdit_SetFontWeight(void* ptr, int weight);
void QTextEdit_SetHtml(void* ptr, char* text);
void QTextEdit_SetLineWrapColumnOrWidth(void* ptr, int w);
void QTextEdit_SetLineWrapMode(void* ptr, int mode);
void QTextEdit_SetOverwriteMode(void* ptr, int overwrite);
void QTextEdit_SetPlaceholderText(void* ptr, char* placeholderText);
void QTextEdit_SetReadOnly(void* ptr, int ro);
void QTextEdit_SetTabChangesFocus(void* ptr, int b);
void QTextEdit_SetTabStopWidth(void* ptr, int width);
void QTextEdit_SetTextInteractionFlags(void* ptr, int flags);
void QTextEdit_SetWordWrapMode(void* ptr, int policy);
int QTextEdit_TabChangesFocus(void* ptr);
int QTextEdit_TabStopWidth(void* ptr);
int QTextEdit_TextInteractionFlags(void* ptr);
char* QTextEdit_ToHtml(void* ptr);
int QTextEdit_WordWrapMode(void* ptr);
void QTextEdit_ZoomIn(void* ptr, int ran);
void QTextEdit_ZoomOut(void* ptr, int ran);
void* QTextEdit_NewQTextEdit(void* parent);
void* QTextEdit_NewQTextEdit2(char* text, void* parent);
int QTextEdit_Alignment(void* ptr);
char* QTextEdit_AnchorAt(void* ptr, void* pos);
void QTextEdit_Append(void* ptr, char* text);
int QTextEdit_CanInsertFromMimeData(void* ptr, void* source);
int QTextEdit_CanInsertFromMimeDataDefault(void* ptr, void* source);
int QTextEdit_CanPaste(void* ptr);
void QTextEdit_ChangeEvent(void* ptr, void* e);
void QTextEdit_ChangeEventDefault(void* ptr, void* e);
void QTextEdit_Clear(void* ptr);
void QTextEdit_Copy(void* ptr);
void QTextEdit_ConnectCopyAvailable(void* ptr);
void QTextEdit_DisconnectCopyAvailable(void* ptr);
void QTextEdit_CopyAvailable(void* ptr, int yes);
void* QTextEdit_CreateMimeDataFromSelection(void* ptr);
void* QTextEdit_CreateMimeDataFromSelectionDefault(void* ptr);
void* QTextEdit_CreateStandardContextMenu(void* ptr);
void* QTextEdit_CreateStandardContextMenu2(void* ptr, void* position);
void QTextEdit_ConnectCursorPositionChanged(void* ptr);
void QTextEdit_DisconnectCursorPositionChanged(void* ptr);
void QTextEdit_CursorPositionChanged(void* ptr);
void* QTextEdit_CursorRect2(void* ptr);
void* QTextEdit_CursorRect(void* ptr, void* cursor);
void QTextEdit_Cut(void* ptr);
char* QTextEdit_DocumentTitle(void* ptr);
void QTextEdit_DragEnterEvent(void* ptr, void* e);
void QTextEdit_DragEnterEventDefault(void* ptr, void* e);
void QTextEdit_DragLeaveEvent(void* ptr, void* e);
void QTextEdit_DragLeaveEventDefault(void* ptr, void* e);
void QTextEdit_DragMoveEvent(void* ptr, void* e);
void QTextEdit_DragMoveEventDefault(void* ptr, void* e);
void QTextEdit_DropEvent(void* ptr, void* e);
void QTextEdit_DropEventDefault(void* ptr, void* e);
void QTextEdit_EnsureCursorVisible(void* ptr);
void QTextEdit_FocusInEvent(void* ptr, void* e);
void QTextEdit_FocusInEventDefault(void* ptr, void* e);
int QTextEdit_FocusNextPrevChild(void* ptr, int next);
int QTextEdit_FocusNextPrevChildDefault(void* ptr, int next);
void QTextEdit_FocusOutEvent(void* ptr, void* e);
void QTextEdit_FocusOutEventDefault(void* ptr, void* e);
char* QTextEdit_FontFamily(void* ptr);
int QTextEdit_FontItalic(void* ptr);
double QTextEdit_FontPointSize(void* ptr);
int QTextEdit_FontUnderline(void* ptr);
int QTextEdit_FontWeight(void* ptr);
void QTextEdit_InputMethodEvent(void* ptr, void* e);
void QTextEdit_InputMethodEventDefault(void* ptr, void* e);
void* QTextEdit_InputMethodQuery(void* ptr, int property);
void* QTextEdit_InputMethodQueryDefault(void* ptr, int property);
void QTextEdit_InsertFromMimeData(void* ptr, void* source);
void QTextEdit_InsertFromMimeDataDefault(void* ptr, void* source);
void QTextEdit_InsertHtml(void* ptr, char* text);
void QTextEdit_InsertPlainText(void* ptr, char* text);
int QTextEdit_IsUndoRedoEnabled(void* ptr);
void QTextEdit_KeyPressEvent(void* ptr, void* e);
void QTextEdit_KeyPressEventDefault(void* ptr, void* e);
void QTextEdit_KeyReleaseEvent(void* ptr, void* e);
void QTextEdit_KeyReleaseEventDefault(void* ptr, void* e);
void* QTextEdit_LoadResource(void* ptr, int ty, void* name);
void* QTextEdit_LoadResourceDefault(void* ptr, int ty, void* name);
void QTextEdit_MergeCurrentCharFormat(void* ptr, void* modifier);
void QTextEdit_MouseDoubleClickEvent(void* ptr, void* e);
void QTextEdit_MouseDoubleClickEventDefault(void* ptr, void* e);
void QTextEdit_MouseMoveEvent(void* ptr, void* e);
void QTextEdit_MouseMoveEventDefault(void* ptr, void* e);
void QTextEdit_MousePressEvent(void* ptr, void* e);
void QTextEdit_MousePressEventDefault(void* ptr, void* e);
void QTextEdit_MouseReleaseEvent(void* ptr, void* e);
void QTextEdit_MouseReleaseEventDefault(void* ptr, void* e);
void QTextEdit_MoveCursor(void* ptr, int operation, int mode);
void QTextEdit_Paste(void* ptr);
void QTextEdit_Print(void* ptr, void* printer);
void QTextEdit_ConnectRedoAvailable(void* ptr);
void QTextEdit_DisconnectRedoAvailable(void* ptr);
void QTextEdit_RedoAvailable(void* ptr, int available);
void QTextEdit_ResizeEvent(void* ptr, void* e);
void QTextEdit_ResizeEventDefault(void* ptr, void* e);
void QTextEdit_ScrollContentsBy(void* ptr, int dx, int dy);
void QTextEdit_ScrollContentsByDefault(void* ptr, int dx, int dy);
void QTextEdit_ScrollToAnchor(void* ptr, char* name);
void QTextEdit_SelectAll(void* ptr);
void QTextEdit_ConnectSelectionChanged(void* ptr);
void QTextEdit_DisconnectSelectionChanged(void* ptr);
void QTextEdit_SelectionChanged(void* ptr);
void QTextEdit_SetAlignment(void* ptr, int a);
void QTextEdit_SetCurrentCharFormat(void* ptr, void* format);
void QTextEdit_SetCurrentFont(void* ptr, void* f);
void QTextEdit_SetDocumentTitle(void* ptr, char* title);
void QTextEdit_SetFontFamily(void* ptr, char* fontFamily);
void QTextEdit_SetFontItalic(void* ptr, int italic);
void QTextEdit_SetFontPointSize(void* ptr, double s);
void QTextEdit_SetFontUnderline(void* ptr, int underline);
void QTextEdit_SetPlainText(void* ptr, char* text);
void QTextEdit_SetText(void* ptr, char* text);
void QTextEdit_SetTextBackgroundColor(void* ptr, void* c);
void QTextEdit_SetTextColor(void* ptr, void* c);
void QTextEdit_SetTextCursor(void* ptr, void* cursor);
void QTextEdit_SetUndoRedoEnabled(void* ptr, int enable);
void QTextEdit_ShowEvent(void* ptr, void* v);
void QTextEdit_ShowEventDefault(void* ptr, void* v);
void* QTextEdit_TextBackgroundColor(void* ptr);
void QTextEdit_ConnectTextChanged(void* ptr);
void QTextEdit_DisconnectTextChanged(void* ptr);
void QTextEdit_TextChanged(void* ptr);
void* QTextEdit_TextColor(void* ptr);
char* QTextEdit_ToPlainText(void* ptr);
void QTextEdit_Undo(void* ptr);
void QTextEdit_ConnectUndoAvailable(void* ptr);
void QTextEdit_DisconnectUndoAvailable(void* ptr);
void QTextEdit_UndoAvailable(void* ptr, int available);
void QTextEdit_WheelEvent(void* ptr, void* e);
void QTextEdit_WheelEventDefault(void* ptr, void* e);
void QTextEdit_DestroyQTextEdit(void* ptr);
void QTextEdit_SetupViewport(void* ptr, void* viewport);
void QTextEdit_SetupViewportDefault(void* ptr, void* viewport);
void QTextEdit_ActionEvent(void* ptr, void* event);
void QTextEdit_ActionEventDefault(void* ptr, void* event);
void QTextEdit_EnterEvent(void* ptr, void* event);
void QTextEdit_EnterEventDefault(void* ptr, void* event);
void QTextEdit_HideEvent(void* ptr, void* event);
void QTextEdit_HideEventDefault(void* ptr, void* event);
void QTextEdit_LeaveEvent(void* ptr, void* event);
void QTextEdit_LeaveEventDefault(void* ptr, void* event);
void QTextEdit_MoveEvent(void* ptr, void* event);
void QTextEdit_MoveEventDefault(void* ptr, void* event);
void QTextEdit_SetVisible(void* ptr, int visible);
void QTextEdit_SetVisibleDefault(void* ptr, int visible);
void QTextEdit_CloseEvent(void* ptr, void* event);
void QTextEdit_CloseEventDefault(void* ptr, void* event);
void QTextEdit_InitPainter(void* ptr, void* painter);
void QTextEdit_InitPainterDefault(void* ptr, void* painter);
void QTextEdit_TabletEvent(void* ptr, void* event);
void QTextEdit_TabletEventDefault(void* ptr, void* event);
void QTextEdit_TimerEvent(void* ptr, void* event);
void QTextEdit_TimerEventDefault(void* ptr, void* event);
void QTextEdit_ChildEvent(void* ptr, void* event);
void QTextEdit_ChildEventDefault(void* ptr, void* event);
void QTextEdit_CustomEvent(void* ptr, void* event);
void QTextEdit_CustomEventDefault(void* ptr, void* event);
void* QTileRules_NewQTileRules(int horizontalRule, int verticalRule);
void* QTileRules_NewQTileRules2(int rule);
void* QTimeEdit_NewQTimeEdit(void* parent);
void* QTimeEdit_NewQTimeEdit2(void* time, void* parent);
void QTimeEdit_DestroyQTimeEdit(void* ptr);
void QTimeEdit_Clear(void* ptr);
void QTimeEdit_ClearDefault(void* ptr);
void QTimeEdit_FocusInEvent(void* ptr, void* event);
void QTimeEdit_FocusInEventDefault(void* ptr, void* event);
void QTimeEdit_KeyPressEvent(void* ptr, void* event);
void QTimeEdit_KeyPressEventDefault(void* ptr, void* event);
void QTimeEdit_MousePressEvent(void* ptr, void* event);
void QTimeEdit_MousePressEventDefault(void* ptr, void* event);
void QTimeEdit_PaintEvent(void* ptr, void* event);
void QTimeEdit_PaintEventDefault(void* ptr, void* event);
void QTimeEdit_StepBy(void* ptr, int steps);
void QTimeEdit_StepByDefault(void* ptr, int steps);
void QTimeEdit_WheelEvent(void* ptr, void* event);
void QTimeEdit_WheelEventDefault(void* ptr, void* event);
void QTimeEdit_ChangeEvent(void* ptr, void* event);
void QTimeEdit_ChangeEventDefault(void* ptr, void* event);
void QTimeEdit_CloseEvent(void* ptr, void* event);
void QTimeEdit_CloseEventDefault(void* ptr, void* event);
void QTimeEdit_ContextMenuEvent(void* ptr, void* event);
void QTimeEdit_ContextMenuEventDefault(void* ptr, void* event);
void QTimeEdit_FocusOutEvent(void* ptr, void* event);
void QTimeEdit_FocusOutEventDefault(void* ptr, void* event);
void QTimeEdit_HideEvent(void* ptr, void* event);
void QTimeEdit_HideEventDefault(void* ptr, void* event);
void QTimeEdit_KeyReleaseEvent(void* ptr, void* event);
void QTimeEdit_KeyReleaseEventDefault(void* ptr, void* event);
void QTimeEdit_MouseMoveEvent(void* ptr, void* event);
void QTimeEdit_MouseMoveEventDefault(void* ptr, void* event);
void QTimeEdit_MouseReleaseEvent(void* ptr, void* event);
void QTimeEdit_MouseReleaseEventDefault(void* ptr, void* event);
void QTimeEdit_ResizeEvent(void* ptr, void* event);
void QTimeEdit_ResizeEventDefault(void* ptr, void* event);
void QTimeEdit_ShowEvent(void* ptr, void* event);
void QTimeEdit_ShowEventDefault(void* ptr, void* event);
void QTimeEdit_TimerEvent(void* ptr, void* event);
void QTimeEdit_TimerEventDefault(void* ptr, void* event);
void QTimeEdit_ActionEvent(void* ptr, void* event);
void QTimeEdit_ActionEventDefault(void* ptr, void* event);
void QTimeEdit_DragEnterEvent(void* ptr, void* event);
void QTimeEdit_DragEnterEventDefault(void* ptr, void* event);
void QTimeEdit_DragLeaveEvent(void* ptr, void* event);
void QTimeEdit_DragLeaveEventDefault(void* ptr, void* event);
void QTimeEdit_DragMoveEvent(void* ptr, void* event);
void QTimeEdit_DragMoveEventDefault(void* ptr, void* event);
void QTimeEdit_DropEvent(void* ptr, void* event);
void QTimeEdit_DropEventDefault(void* ptr, void* event);
void QTimeEdit_EnterEvent(void* ptr, void* event);
void QTimeEdit_EnterEventDefault(void* ptr, void* event);
void QTimeEdit_LeaveEvent(void* ptr, void* event);
void QTimeEdit_LeaveEventDefault(void* ptr, void* event);
void QTimeEdit_MoveEvent(void* ptr, void* event);
void QTimeEdit_MoveEventDefault(void* ptr, void* event);
void QTimeEdit_SetVisible(void* ptr, int visible);
void QTimeEdit_SetVisibleDefault(void* ptr, int visible);
void QTimeEdit_InitPainter(void* ptr, void* painter);
void QTimeEdit_InitPainterDefault(void* ptr, void* painter);
void QTimeEdit_InputMethodEvent(void* ptr, void* event);
void QTimeEdit_InputMethodEventDefault(void* ptr, void* event);
void QTimeEdit_MouseDoubleClickEvent(void* ptr, void* event);
void QTimeEdit_MouseDoubleClickEventDefault(void* ptr, void* event);
void QTimeEdit_TabletEvent(void* ptr, void* event);
void QTimeEdit_TabletEventDefault(void* ptr, void* event);
void QTimeEdit_ChildEvent(void* ptr, void* event);
void QTimeEdit_ChildEventDefault(void* ptr, void* event);
void QTimeEdit_CustomEvent(void* ptr, void* event);
void QTimeEdit_CustomEventDefault(void* ptr, void* event);
int QToolBar_AllowedAreas(void* ptr);
void* QToolBar_IconSize(void* ptr);
int QToolBar_IsFloatable(void* ptr);
int QToolBar_IsFloating(void* ptr);
int QToolBar_IsMovable(void* ptr);
int QToolBar_Orientation(void* ptr);
void QToolBar_SetAllowedAreas(void* ptr, int areas);
void QToolBar_SetFloatable(void* ptr, int floatable);
void QToolBar_SetIconSize(void* ptr, void* iconSize);
void QToolBar_SetMovable(void* ptr, int movable);
void QToolBar_SetOrientation(void* ptr, int orientation);
void QToolBar_SetToolButtonStyle(void* ptr, int toolButtonStyle);
int QToolBar_ToolButtonStyle(void* ptr);
void* QToolBar_NewQToolBar2(void* parent);
void* QToolBar_NewQToolBar(char* title, void* parent);
void* QToolBar_ActionAt(void* ptr, void* p);
void* QToolBar_ActionAt2(void* ptr, int x, int y);
void QToolBar_ActionEvent(void* ptr, void* event);
void QToolBar_ActionEventDefault(void* ptr, void* event);
void QToolBar_ConnectActionTriggered(void* ptr);
void QToolBar_DisconnectActionTriggered(void* ptr);
void QToolBar_ActionTriggered(void* ptr, void* action);
void* QToolBar_AddAction2(void* ptr, void* icon, char* text);
void* QToolBar_AddAction4(void* ptr, void* icon, char* text, void* receiver, char* member);
void* QToolBar_AddAction(void* ptr, char* text);
void* QToolBar_AddAction3(void* ptr, char* text, void* receiver, char* member);
void* QToolBar_AddSeparator(void* ptr);
void* QToolBar_AddWidget(void* ptr, void* widget);
void QToolBar_ConnectAllowedAreasChanged(void* ptr);
void QToolBar_DisconnectAllowedAreasChanged(void* ptr);
void QToolBar_AllowedAreasChanged(void* ptr, int allowedAreas);
void QToolBar_ChangeEvent(void* ptr, void* event);
void QToolBar_ChangeEventDefault(void* ptr, void* event);
void QToolBar_Clear(void* ptr);
int QToolBar_Event(void* ptr, void* event);
int QToolBar_EventDefault(void* ptr, void* event);
void QToolBar_ConnectIconSizeChanged(void* ptr);
void QToolBar_DisconnectIconSizeChanged(void* ptr);
void QToolBar_IconSizeChanged(void* ptr, void* iconSize);
void* QToolBar_InsertSeparator(void* ptr, void* before);
void* QToolBar_InsertWidget(void* ptr, void* before, void* widget);
int QToolBar_IsAreaAllowed(void* ptr, int area);
void QToolBar_ConnectMovableChanged(void* ptr);
void QToolBar_DisconnectMovableChanged(void* ptr);
void QToolBar_MovableChanged(void* ptr, int movable);
void QToolBar_ConnectOrientationChanged(void* ptr);
void QToolBar_DisconnectOrientationChanged(void* ptr);
void QToolBar_OrientationChanged(void* ptr, int orientation);
void QToolBar_PaintEvent(void* ptr, void* event);
void QToolBar_PaintEventDefault(void* ptr, void* event);
void* QToolBar_ToggleViewAction(void* ptr);
void QToolBar_ConnectToolButtonStyleChanged(void* ptr);
void QToolBar_DisconnectToolButtonStyleChanged(void* ptr);
void QToolBar_ToolButtonStyleChanged(void* ptr, int toolButtonStyle);
void QToolBar_ConnectTopLevelChanged(void* ptr);
void QToolBar_DisconnectTopLevelChanged(void* ptr);
void QToolBar_TopLevelChanged(void* ptr, int topLevel);
void QToolBar_ConnectVisibilityChanged(void* ptr);
void QToolBar_DisconnectVisibilityChanged(void* ptr);
void QToolBar_VisibilityChanged(void* ptr, int visible);
void* QToolBar_WidgetForAction(void* ptr, void* action);
void QToolBar_DestroyQToolBar(void* ptr);
void QToolBar_DragEnterEvent(void* ptr, void* event);
void QToolBar_DragEnterEventDefault(void* ptr, void* event);
void QToolBar_DragLeaveEvent(void* ptr, void* event);
void QToolBar_DragLeaveEventDefault(void* ptr, void* event);
void QToolBar_DragMoveEvent(void* ptr, void* event);
void QToolBar_DragMoveEventDefault(void* ptr, void* event);
void QToolBar_DropEvent(void* ptr, void* event);
void QToolBar_DropEventDefault(void* ptr, void* event);
void QToolBar_EnterEvent(void* ptr, void* event);
void QToolBar_EnterEventDefault(void* ptr, void* event);
void QToolBar_FocusInEvent(void* ptr, void* event);
void QToolBar_FocusInEventDefault(void* ptr, void* event);
void QToolBar_FocusOutEvent(void* ptr, void* event);
void QToolBar_FocusOutEventDefault(void* ptr, void* event);
void QToolBar_HideEvent(void* ptr, void* event);
void QToolBar_HideEventDefault(void* ptr, void* event);
void QToolBar_LeaveEvent(void* ptr, void* event);
void QToolBar_LeaveEventDefault(void* ptr, void* event);
void QToolBar_MoveEvent(void* ptr, void* event);
void QToolBar_MoveEventDefault(void* ptr, void* event);
void QToolBar_SetVisible(void* ptr, int visible);
void QToolBar_SetVisibleDefault(void* ptr, int visible);
void QToolBar_ShowEvent(void* ptr, void* event);
void QToolBar_ShowEventDefault(void* ptr, void* event);
void QToolBar_CloseEvent(void* ptr, void* event);
void QToolBar_CloseEventDefault(void* ptr, void* event);
void QToolBar_ContextMenuEvent(void* ptr, void* event);
void QToolBar_ContextMenuEventDefault(void* ptr, void* event);
void QToolBar_InitPainter(void* ptr, void* painter);
void QToolBar_InitPainterDefault(void* ptr, void* painter);
void QToolBar_InputMethodEvent(void* ptr, void* event);
void QToolBar_InputMethodEventDefault(void* ptr, void* event);
void QToolBar_KeyPressEvent(void* ptr, void* event);
void QToolBar_KeyPressEventDefault(void* ptr, void* event);
void QToolBar_KeyReleaseEvent(void* ptr, void* event);
void QToolBar_KeyReleaseEventDefault(void* ptr, void* event);
void QToolBar_MouseDoubleClickEvent(void* ptr, void* event);
void QToolBar_MouseDoubleClickEventDefault(void* ptr, void* event);
void QToolBar_MouseMoveEvent(void* ptr, void* event);
void QToolBar_MouseMoveEventDefault(void* ptr, void* event);
void QToolBar_MousePressEvent(void* ptr, void* event);
void QToolBar_MousePressEventDefault(void* ptr, void* event);
void QToolBar_MouseReleaseEvent(void* ptr, void* event);
void QToolBar_MouseReleaseEventDefault(void* ptr, void* event);
void QToolBar_ResizeEvent(void* ptr, void* event);
void QToolBar_ResizeEventDefault(void* ptr, void* event);
void QToolBar_TabletEvent(void* ptr, void* event);
void QToolBar_TabletEventDefault(void* ptr, void* event);
void QToolBar_WheelEvent(void* ptr, void* event);
void QToolBar_WheelEventDefault(void* ptr, void* event);
void QToolBar_TimerEvent(void* ptr, void* event);
void QToolBar_TimerEventDefault(void* ptr, void* event);
void QToolBar_ChildEvent(void* ptr, void* event);
void QToolBar_ChildEventDefault(void* ptr, void* event);
void QToolBar_CustomEvent(void* ptr, void* event);
void QToolBar_CustomEventDefault(void* ptr, void* event);
int QToolBox_Count(void* ptr);
int QToolBox_CurrentIndex(void* ptr);
void QToolBox_SetCurrentIndex(void* ptr, int index);
void* QToolBox_NewQToolBox(void* parent, int f);
int QToolBox_AddItem2(void* ptr, void* w, char* text);
int QToolBox_AddItem(void* ptr, void* widget, void* iconSet, char* text);
void QToolBox_ChangeEvent(void* ptr, void* ev);
void QToolBox_ChangeEventDefault(void* ptr, void* ev);
void QToolBox_ConnectCurrentChanged(void* ptr);
void QToolBox_DisconnectCurrentChanged(void* ptr);
void QToolBox_CurrentChanged(void* ptr, int index);
void* QToolBox_CurrentWidget(void* ptr);
int QToolBox_Event(void* ptr, void* e);
int QToolBox_EventDefault(void* ptr, void* e);
int QToolBox_IndexOf(void* ptr, void* widget);
int QToolBox_InsertItem(void* ptr, int index, void* widget, void* icon, char* text);
int QToolBox_InsertItem2(void* ptr, int index, void* widget, char* text);
int QToolBox_IsItemEnabled(void* ptr, int index);
void* QToolBox_ItemIcon(void* ptr, int index);
void QToolBox_ItemInserted(void* ptr, int index);
void QToolBox_ItemInsertedDefault(void* ptr, int index);
void QToolBox_ItemRemoved(void* ptr, int index);
void QToolBox_ItemRemovedDefault(void* ptr, int index);
char* QToolBox_ItemText(void* ptr, int index);
char* QToolBox_ItemToolTip(void* ptr, int index);
void QToolBox_RemoveItem(void* ptr, int index);
void QToolBox_SetCurrentWidget(void* ptr, void* widget);
void QToolBox_SetItemEnabled(void* ptr, int index, int enabled);
void QToolBox_SetItemIcon(void* ptr, int index, void* icon);
void QToolBox_SetItemText(void* ptr, int index, char* text);
void QToolBox_SetItemToolTip(void* ptr, int index, char* toolTip);
void QToolBox_ShowEvent(void* ptr, void* e);
void QToolBox_ShowEventDefault(void* ptr, void* e);
void* QToolBox_Widget(void* ptr, int index);
void QToolBox_DestroyQToolBox(void* ptr);
void QToolBox_PaintEvent(void* ptr, void* v);
void QToolBox_PaintEventDefault(void* ptr, void* v);
void QToolBox_ActionEvent(void* ptr, void* event);
void QToolBox_ActionEventDefault(void* ptr, void* event);
void QToolBox_DragEnterEvent(void* ptr, void* event);
void QToolBox_DragEnterEventDefault(void* ptr, void* event);
void QToolBox_DragLeaveEvent(void* ptr, void* event);
void QToolBox_DragLeaveEventDefault(void* ptr, void* event);
void QToolBox_DragMoveEvent(void* ptr, void* event);
void QToolBox_DragMoveEventDefault(void* ptr, void* event);
void QToolBox_DropEvent(void* ptr, void* event);
void QToolBox_DropEventDefault(void* ptr, void* event);
void QToolBox_EnterEvent(void* ptr, void* event);
void QToolBox_EnterEventDefault(void* ptr, void* event);
void QToolBox_FocusInEvent(void* ptr, void* event);
void QToolBox_FocusInEventDefault(void* ptr, void* event);
void QToolBox_FocusOutEvent(void* ptr, void* event);
void QToolBox_FocusOutEventDefault(void* ptr, void* event);
void QToolBox_HideEvent(void* ptr, void* event);
void QToolBox_HideEventDefault(void* ptr, void* event);
void QToolBox_LeaveEvent(void* ptr, void* event);
void QToolBox_LeaveEventDefault(void* ptr, void* event);
void QToolBox_MoveEvent(void* ptr, void* event);
void QToolBox_MoveEventDefault(void* ptr, void* event);
void QToolBox_SetVisible(void* ptr, int visible);
void QToolBox_SetVisibleDefault(void* ptr, int visible);
void QToolBox_CloseEvent(void* ptr, void* event);
void QToolBox_CloseEventDefault(void* ptr, void* event);
void QToolBox_ContextMenuEvent(void* ptr, void* event);
void QToolBox_ContextMenuEventDefault(void* ptr, void* event);
void QToolBox_InitPainter(void* ptr, void* painter);
void QToolBox_InitPainterDefault(void* ptr, void* painter);
void QToolBox_InputMethodEvent(void* ptr, void* event);
void QToolBox_InputMethodEventDefault(void* ptr, void* event);
void QToolBox_KeyPressEvent(void* ptr, void* event);
void QToolBox_KeyPressEventDefault(void* ptr, void* event);
void QToolBox_KeyReleaseEvent(void* ptr, void* event);
void QToolBox_KeyReleaseEventDefault(void* ptr, void* event);
void QToolBox_MouseDoubleClickEvent(void* ptr, void* event);
void QToolBox_MouseDoubleClickEventDefault(void* ptr, void* event);
void QToolBox_MouseMoveEvent(void* ptr, void* event);
void QToolBox_MouseMoveEventDefault(void* ptr, void* event);
void QToolBox_MousePressEvent(void* ptr, void* event);
void QToolBox_MousePressEventDefault(void* ptr, void* event);
void QToolBox_MouseReleaseEvent(void* ptr, void* event);
void QToolBox_MouseReleaseEventDefault(void* ptr, void* event);
void QToolBox_ResizeEvent(void* ptr, void* event);
void QToolBox_ResizeEventDefault(void* ptr, void* event);
void QToolBox_TabletEvent(void* ptr, void* event);
void QToolBox_TabletEventDefault(void* ptr, void* event);
void QToolBox_WheelEvent(void* ptr, void* event);
void QToolBox_WheelEventDefault(void* ptr, void* event);
void QToolBox_TimerEvent(void* ptr, void* event);
void QToolBox_TimerEventDefault(void* ptr, void* event);
void QToolBox_ChildEvent(void* ptr, void* event);
void QToolBox_ChildEventDefault(void* ptr, void* event);
void QToolBox_CustomEvent(void* ptr, void* event);
void QToolBox_CustomEventDefault(void* ptr, void* event);
int QToolButton_ArrowType(void* ptr);
int QToolButton_AutoRaise(void* ptr);
void QToolButton_PaintEvent(void* ptr, void* event);
void QToolButton_PaintEventDefault(void* ptr, void* event);
int QToolButton_PopupMode(void* ptr);
void QToolButton_SetArrowType(void* ptr, int ty);
void QToolButton_SetAutoRaise(void* ptr, int enable);
void QToolButton_SetPopupMode(void* ptr, int mode);
void QToolButton_SetToolButtonStyle(void* ptr, int style);
int QToolButton_ToolButtonStyle(void* ptr);
void* QToolButton_NewQToolButton(void* parent);
void QToolButton_ActionEvent(void* ptr, void* event);
void QToolButton_ActionEventDefault(void* ptr, void* event);
void QToolButton_ChangeEvent(void* ptr, void* e);
void QToolButton_ChangeEventDefault(void* ptr, void* e);
void QToolButton_EnterEvent(void* ptr, void* e);
void QToolButton_EnterEventDefault(void* ptr, void* e);
int QToolButton_Event(void* ptr, void* event);
int QToolButton_EventDefault(void* ptr, void* event);
int QToolButton_HitButton(void* ptr, void* pos);
int QToolButton_HitButtonDefault(void* ptr, void* pos);
void QToolButton_LeaveEvent(void* ptr, void* e);
void QToolButton_LeaveEventDefault(void* ptr, void* e);
void* QToolButton_Menu(void* ptr);
void* QToolButton_MinimumSizeHint(void* ptr);
void* QToolButton_MinimumSizeHintDefault(void* ptr);
void QToolButton_MousePressEvent(void* ptr, void* e);
void QToolButton_MousePressEventDefault(void* ptr, void* e);
void QToolButton_MouseReleaseEvent(void* ptr, void* e);
void QToolButton_MouseReleaseEventDefault(void* ptr, void* e);
void QToolButton_NextCheckState(void* ptr);
void QToolButton_NextCheckStateDefault(void* ptr);
void QToolButton_SetMenu(void* ptr, void* menu);
void QToolButton_ShowMenu(void* ptr);
void* QToolButton_SizeHint(void* ptr);
void* QToolButton_SizeHintDefault(void* ptr);
void QToolButton_TimerEvent(void* ptr, void* e);
void QToolButton_TimerEventDefault(void* ptr, void* e);
void QToolButton_ConnectTriggered(void* ptr);
void QToolButton_DisconnectTriggered(void* ptr);
void QToolButton_Triggered(void* ptr, void* action);
void QToolButton_DestroyQToolButton(void* ptr);
void QToolButton_CheckStateSet(void* ptr);
void QToolButton_CheckStateSetDefault(void* ptr);
void QToolButton_FocusInEvent(void* ptr, void* e);
void QToolButton_FocusInEventDefault(void* ptr, void* e);
void QToolButton_FocusOutEvent(void* ptr, void* e);
void QToolButton_FocusOutEventDefault(void* ptr, void* e);
void QToolButton_KeyPressEvent(void* ptr, void* e);
void QToolButton_KeyPressEventDefault(void* ptr, void* e);
void QToolButton_KeyReleaseEvent(void* ptr, void* e);
void QToolButton_KeyReleaseEventDefault(void* ptr, void* e);
void QToolButton_MouseMoveEvent(void* ptr, void* e);
void QToolButton_MouseMoveEventDefault(void* ptr, void* e);
void QToolButton_DragEnterEvent(void* ptr, void* event);
void QToolButton_DragEnterEventDefault(void* ptr, void* event);
void QToolButton_DragLeaveEvent(void* ptr, void* event);
void QToolButton_DragLeaveEventDefault(void* ptr, void* event);
void QToolButton_DragMoveEvent(void* ptr, void* event);
void QToolButton_DragMoveEventDefault(void* ptr, void* event);
void QToolButton_DropEvent(void* ptr, void* event);
void QToolButton_DropEventDefault(void* ptr, void* event);
void QToolButton_HideEvent(void* ptr, void* event);
void QToolButton_HideEventDefault(void* ptr, void* event);
void QToolButton_MoveEvent(void* ptr, void* event);
void QToolButton_MoveEventDefault(void* ptr, void* event);
void QToolButton_SetVisible(void* ptr, int visible);
void QToolButton_SetVisibleDefault(void* ptr, int visible);
void QToolButton_ShowEvent(void* ptr, void* event);
void QToolButton_ShowEventDefault(void* ptr, void* event);
void QToolButton_CloseEvent(void* ptr, void* event);
void QToolButton_CloseEventDefault(void* ptr, void* event);
void QToolButton_ContextMenuEvent(void* ptr, void* event);
void QToolButton_ContextMenuEventDefault(void* ptr, void* event);
void QToolButton_InitPainter(void* ptr, void* painter);
void QToolButton_InitPainterDefault(void* ptr, void* painter);
void QToolButton_InputMethodEvent(void* ptr, void* event);
void QToolButton_InputMethodEventDefault(void* ptr, void* event);
void QToolButton_MouseDoubleClickEvent(void* ptr, void* event);
void QToolButton_MouseDoubleClickEventDefault(void* ptr, void* event);
void QToolButton_ResizeEvent(void* ptr, void* event);
void QToolButton_ResizeEventDefault(void* ptr, void* event);
void QToolButton_TabletEvent(void* ptr, void* event);
void QToolButton_TabletEventDefault(void* ptr, void* event);
void QToolButton_WheelEvent(void* ptr, void* event);
void QToolButton_WheelEventDefault(void* ptr, void* event);
void QToolButton_ChildEvent(void* ptr, void* event);
void QToolButton_ChildEventDefault(void* ptr, void* event);
void QToolButton_CustomEvent(void* ptr, void* event);
void QToolButton_CustomEventDefault(void* ptr, void* event);
void QToolTip_QToolTip_HideText();
int QToolTip_QToolTip_IsVisible();
void QToolTip_QToolTip_SetFont(void* font);
void QToolTip_QToolTip_SetPalette(void* palette);
void QToolTip_QToolTip_ShowText3(void* pos, char* text, void* w);
void QToolTip_QToolTip_ShowText(void* pos, char* text, void* w, void* rect);
void QToolTip_QToolTip_ShowText2(void* pos, char* text, void* w, void* rect, int msecDisplayTime);
char* QToolTip_QToolTip_Text();
int QTreeView_AllColumnsShowFocus(void* ptr);
int QTreeView_AutoExpandDelay(void* ptr);
void QTreeView_Collapse(void* ptr, void* index);
void QTreeView_Expand(void* ptr, void* index);
int QTreeView_ExpandsOnDoubleClick(void* ptr);
int QTreeView_Indentation(void* ptr);
int QTreeView_IsAnimated(void* ptr);
int QTreeView_IsExpanded(void* ptr, void* index);
int QTreeView_IsHeaderHidden(void* ptr);
int QTreeView_IsSortingEnabled(void* ptr);
int QTreeView_ItemsExpandable(void* ptr);
void QTreeView_ResetIndentation(void* ptr);
int QTreeView_RootIsDecorated(void* ptr);
void QTreeView_SetAllColumnsShowFocus(void* ptr, int enable);
void QTreeView_SetAnimated(void* ptr, int enable);
void QTreeView_SetAutoExpandDelay(void* ptr, int delay);
void QTreeView_SetExpandsOnDoubleClick(void* ptr, int enable);
void QTreeView_SetHeaderHidden(void* ptr, int hide);
void QTreeView_SetIndentation(void* ptr, int i);
void QTreeView_SetItemsExpandable(void* ptr, int enable);
void QTreeView_SetRootIsDecorated(void* ptr, int show);
void QTreeView_SetSortingEnabled(void* ptr, int enable);
void QTreeView_SetUniformRowHeights(void* ptr, int uniform);
void QTreeView_SetWordWrap(void* ptr, int on);
int QTreeView_UniformRowHeights(void* ptr);
int QTreeView_WordWrap(void* ptr);
void* QTreeView_NewQTreeView(void* parent);
void QTreeView_CollapseAll(void* ptr);
void QTreeView_ConnectCollapsed(void* ptr);
void QTreeView_DisconnectCollapsed(void* ptr);
void QTreeView_Collapsed(void* ptr, void* index);
int QTreeView_ColumnAt(void* ptr, int x);
int QTreeView_ColumnViewportPosition(void* ptr, int column);
int QTreeView_ColumnWidth(void* ptr, int column);
void QTreeView_CurrentChanged(void* ptr, void* current, void* previous);
void QTreeView_CurrentChangedDefault(void* ptr, void* current, void* previous);
void QTreeView_DragMoveEvent(void* ptr, void* event);
void QTreeView_DragMoveEventDefault(void* ptr, void* event);
void QTreeView_DrawBranches(void* ptr, void* painter, void* rect, void* index);
void QTreeView_DrawBranchesDefault(void* ptr, void* painter, void* rect, void* index);
void QTreeView_ExpandAll(void* ptr);
void QTreeView_ExpandToDepth(void* ptr, int depth);
void QTreeView_ConnectExpanded(void* ptr);
void QTreeView_DisconnectExpanded(void* ptr);
void QTreeView_Expanded(void* ptr, void* index);
void* QTreeView_Header(void* ptr);
void QTreeView_HideColumn(void* ptr, int column);
int QTreeView_HorizontalOffset(void* ptr);
int QTreeView_HorizontalOffsetDefault(void* ptr);
void* QTreeView_IndexAbove(void* ptr, void* index);
void* QTreeView_IndexAt(void* ptr, void* point);
void* QTreeView_IndexAtDefault(void* ptr, void* point);
void* QTreeView_IndexBelow(void* ptr, void* index);
int QTreeView_IsColumnHidden(void* ptr, int column);
int QTreeView_IsFirstColumnSpanned(void* ptr, int row, void* parent);
int QTreeView_IsIndexHidden(void* ptr, void* index);
int QTreeView_IsIndexHiddenDefault(void* ptr, void* index);
int QTreeView_IsRowHidden(void* ptr, int row, void* parent);
void QTreeView_KeyPressEvent(void* ptr, void* event);
void QTreeView_KeyPressEventDefault(void* ptr, void* event);
void QTreeView_KeyboardSearch(void* ptr, char* search);
void QTreeView_KeyboardSearchDefault(void* ptr, char* search);
void QTreeView_MouseDoubleClickEvent(void* ptr, void* event);
void QTreeView_MouseDoubleClickEventDefault(void* ptr, void* event);
void QTreeView_MouseMoveEvent(void* ptr, void* event);
void QTreeView_MouseMoveEventDefault(void* ptr, void* event);
void QTreeView_MousePressEvent(void* ptr, void* event);
void QTreeView_MousePressEventDefault(void* ptr, void* event);
void QTreeView_MouseReleaseEvent(void* ptr, void* event);
void QTreeView_MouseReleaseEventDefault(void* ptr, void* event);
void* QTreeView_MoveCursor(void* ptr, int cursorAction, int modifiers);
void* QTreeView_MoveCursorDefault(void* ptr, int cursorAction, int modifiers);
void QTreeView_PaintEvent(void* ptr, void* event);
void QTreeView_PaintEventDefault(void* ptr, void* event);
void QTreeView_Reset(void* ptr);
void QTreeView_ResetDefault(void* ptr);
void QTreeView_ResizeColumnToContents(void* ptr, int column);
void QTreeView_RowsAboutToBeRemoved(void* ptr, void* parent, int start, int end);
void QTreeView_RowsAboutToBeRemovedDefault(void* ptr, void* parent, int start, int end);
void QTreeView_RowsInserted(void* ptr, void* parent, int start, int end);
void QTreeView_RowsInsertedDefault(void* ptr, void* parent, int start, int end);
void QTreeView_ScrollContentsBy(void* ptr, int dx, int dy);
void QTreeView_ScrollContentsByDefault(void* ptr, int dx, int dy);
void QTreeView_ScrollTo(void* ptr, void* index, int hint);
void QTreeView_ScrollToDefault(void* ptr, void* index, int hint);
void QTreeView_SelectAll(void* ptr);
void QTreeView_SelectAllDefault(void* ptr);
void QTreeView_SetColumnHidden(void* ptr, int column, int hide);
void QTreeView_SetColumnWidth(void* ptr, int column, int width);
void QTreeView_SetExpanded(void* ptr, void* index, int expanded);
void QTreeView_SetFirstColumnSpanned(void* ptr, int row, void* parent, int span);
void QTreeView_SetHeader(void* ptr, void* header);
void QTreeView_SetModel(void* ptr, void* model);
void QTreeView_SetModelDefault(void* ptr, void* model);
void QTreeView_SetRootIndex(void* ptr, void* index);
void QTreeView_SetRootIndexDefault(void* ptr, void* index);
void QTreeView_SetRowHidden(void* ptr, int row, void* parent, int hide);
void QTreeView_SetSelection(void* ptr, void* rect, int command);
void QTreeView_SetSelectionDefault(void* ptr, void* rect, int command);
void QTreeView_SetSelectionModel(void* ptr, void* selectionModel);
void QTreeView_SetSelectionModelDefault(void* ptr, void* selectionModel);
void QTreeView_SetTreePosition(void* ptr, int index);
void QTreeView_ShowColumn(void* ptr, int column);
int QTreeView_SizeHintForColumn(void* ptr, int column);
int QTreeView_SizeHintForColumnDefault(void* ptr, int column);
void QTreeView_SortByColumn(void* ptr, int column, int order);
void QTreeView_TimerEvent(void* ptr, void* event);
void QTreeView_TimerEventDefault(void* ptr, void* event);
int QTreeView_TreePosition(void* ptr);
void QTreeView_UpdateGeometries(void* ptr);
void QTreeView_UpdateGeometriesDefault(void* ptr);
int QTreeView_VerticalOffset(void* ptr);
int QTreeView_VerticalOffsetDefault(void* ptr);
int QTreeView_ViewportEvent(void* ptr, void* event);
int QTreeView_ViewportEventDefault(void* ptr, void* event);
void* QTreeView_ViewportSizeHint(void* ptr);
void* QTreeView_ViewportSizeHintDefault(void* ptr);
void* QTreeView_VisualRect(void* ptr, void* index);
void* QTreeView_VisualRectDefault(void* ptr, void* index);
void* QTreeView_VisualRegionForSelection(void* ptr, void* selection);
void* QTreeView_VisualRegionForSelectionDefault(void* ptr, void* selection);
void QTreeView_DestroyQTreeView(void* ptr);
void QTreeView_DragLeaveEvent(void* ptr, void* event);
void QTreeView_DragLeaveEventDefault(void* ptr, void* event);
void QTreeView_CloseEditor(void* ptr, void* editor, int hint);
void QTreeView_CloseEditorDefault(void* ptr, void* editor, int hint);
void QTreeView_CommitData(void* ptr, void* editor);
void QTreeView_CommitDataDefault(void* ptr, void* editor);
void QTreeView_DragEnterEvent(void* ptr, void* event);
void QTreeView_DragEnterEventDefault(void* ptr, void* event);
void QTreeView_DropEvent(void* ptr, void* event);
void QTreeView_DropEventDefault(void* ptr, void* event);
void QTreeView_EditorDestroyed(void* ptr, void* editor);
void QTreeView_EditorDestroyedDefault(void* ptr, void* editor);
void QTreeView_FocusInEvent(void* ptr, void* event);
void QTreeView_FocusInEventDefault(void* ptr, void* event);
void QTreeView_FocusOutEvent(void* ptr, void* event);
void QTreeView_FocusOutEventDefault(void* ptr, void* event);
void QTreeView_InputMethodEvent(void* ptr, void* event);
void QTreeView_InputMethodEventDefault(void* ptr, void* event);
void QTreeView_ResizeEvent(void* ptr, void* event);
void QTreeView_ResizeEventDefault(void* ptr, void* event);
void QTreeView_StartDrag(void* ptr, int supportedActions);
void QTreeView_StartDragDefault(void* ptr, int supportedActions);
void QTreeView_ContextMenuEvent(void* ptr, void* e);
void QTreeView_ContextMenuEventDefault(void* ptr, void* e);
void QTreeView_SetupViewport(void* ptr, void* viewport);
void QTreeView_SetupViewportDefault(void* ptr, void* viewport);
void QTreeView_WheelEvent(void* ptr, void* e);
void QTreeView_WheelEventDefault(void* ptr, void* e);
void QTreeView_ChangeEvent(void* ptr, void* ev);
void QTreeView_ChangeEventDefault(void* ptr, void* ev);
void QTreeView_ActionEvent(void* ptr, void* event);
void QTreeView_ActionEventDefault(void* ptr, void* event);
void QTreeView_EnterEvent(void* ptr, void* event);
void QTreeView_EnterEventDefault(void* ptr, void* event);
void QTreeView_HideEvent(void* ptr, void* event);
void QTreeView_HideEventDefault(void* ptr, void* event);
void QTreeView_LeaveEvent(void* ptr, void* event);
void QTreeView_LeaveEventDefault(void* ptr, void* event);
void QTreeView_MoveEvent(void* ptr, void* event);
void QTreeView_MoveEventDefault(void* ptr, void* event);
void QTreeView_SetVisible(void* ptr, int visible);
void QTreeView_SetVisibleDefault(void* ptr, int visible);
void QTreeView_ShowEvent(void* ptr, void* event);
void QTreeView_ShowEventDefault(void* ptr, void* event);
void QTreeView_CloseEvent(void* ptr, void* event);
void QTreeView_CloseEventDefault(void* ptr, void* event);
void QTreeView_InitPainter(void* ptr, void* painter);
void QTreeView_InitPainterDefault(void* ptr, void* painter);
void QTreeView_KeyReleaseEvent(void* ptr, void* event);
void QTreeView_KeyReleaseEventDefault(void* ptr, void* event);
void QTreeView_TabletEvent(void* ptr, void* event);
void QTreeView_TabletEventDefault(void* ptr, void* event);
void QTreeView_ChildEvent(void* ptr, void* event);
void QTreeView_ChildEventDefault(void* ptr, void* event);
void QTreeView_CustomEvent(void* ptr, void* event);
void QTreeView_CustomEventDefault(void* ptr, void* event);
int QTreeWidget_ColumnCount(void* ptr);
void QTreeWidget_SetColumnCount(void* ptr, int columns);
int QTreeWidget_TopLevelItemCount(void* ptr);
void* QTreeWidget_NewQTreeWidget(void* parent);
void QTreeWidget_AddTopLevelItem(void* ptr, void* item);
void QTreeWidget_Clear(void* ptr);
void QTreeWidget_ClosePersistentEditor(void* ptr, void* item, int column);
void QTreeWidget_CollapseItem(void* ptr, void* item);
int QTreeWidget_CurrentColumn(void* ptr);
void* QTreeWidget_CurrentItem(void* ptr);
void QTreeWidget_ConnectCurrentItemChanged(void* ptr);
void QTreeWidget_DisconnectCurrentItemChanged(void* ptr);
void QTreeWidget_CurrentItemChanged(void* ptr, void* current, void* previous);
void QTreeWidget_DropEvent(void* ptr, void* event);
void QTreeWidget_DropEventDefault(void* ptr, void* event);
int QTreeWidget_DropMimeData(void* ptr, void* parent, int index, void* data, int action);
int QTreeWidget_DropMimeDataDefault(void* ptr, void* parent, int index, void* data, int action);
void QTreeWidget_EditItem(void* ptr, void* item, int column);
int QTreeWidget_Event(void* ptr, void* e);
int QTreeWidget_EventDefault(void* ptr, void* e);
void QTreeWidget_ExpandItem(void* ptr, void* item);
void* QTreeWidget_HeaderItem(void* ptr);
int QTreeWidget_IndexOfTopLevelItem(void* ptr, void* item);
void QTreeWidget_InsertTopLevelItem(void* ptr, int index, void* item);
void* QTreeWidget_InvisibleRootItem(void* ptr);
int QTreeWidget_IsFirstItemColumnSpanned(void* ptr, void* item);
void* QTreeWidget_ItemAbove(void* ptr, void* item);
void QTreeWidget_ConnectItemActivated(void* ptr);
void QTreeWidget_DisconnectItemActivated(void* ptr);
void QTreeWidget_ItemActivated(void* ptr, void* item, int column);
void* QTreeWidget_ItemAt(void* ptr, void* p);
void* QTreeWidget_ItemAt2(void* ptr, int x, int y);
void* QTreeWidget_ItemBelow(void* ptr, void* item);
void QTreeWidget_ConnectItemChanged(void* ptr);
void QTreeWidget_DisconnectItemChanged(void* ptr);
void QTreeWidget_ItemChanged(void* ptr, void* item, int column);
void QTreeWidget_ConnectItemClicked(void* ptr);
void QTreeWidget_DisconnectItemClicked(void* ptr);
void QTreeWidget_ItemClicked(void* ptr, void* item, int column);
void QTreeWidget_ConnectItemCollapsed(void* ptr);
void QTreeWidget_DisconnectItemCollapsed(void* ptr);
void QTreeWidget_ItemCollapsed(void* ptr, void* item);
void QTreeWidget_ConnectItemDoubleClicked(void* ptr);
void QTreeWidget_DisconnectItemDoubleClicked(void* ptr);
void QTreeWidget_ItemDoubleClicked(void* ptr, void* item, int column);
void QTreeWidget_ConnectItemEntered(void* ptr);
void QTreeWidget_DisconnectItemEntered(void* ptr);
void QTreeWidget_ItemEntered(void* ptr, void* item, int column);
void QTreeWidget_ConnectItemExpanded(void* ptr);
void QTreeWidget_DisconnectItemExpanded(void* ptr);
void QTreeWidget_ItemExpanded(void* ptr, void* item);
void QTreeWidget_ConnectItemPressed(void* ptr);
void QTreeWidget_DisconnectItemPressed(void* ptr);
void QTreeWidget_ItemPressed(void* ptr, void* item, int column);
void QTreeWidget_ConnectItemSelectionChanged(void* ptr);
void QTreeWidget_DisconnectItemSelectionChanged(void* ptr);
void QTreeWidget_ItemSelectionChanged(void* ptr);
void* QTreeWidget_ItemWidget(void* ptr, void* item, int column);
char* QTreeWidget_MimeTypes(void* ptr);
char* QTreeWidget_MimeTypesDefault(void* ptr);
void QTreeWidget_OpenPersistentEditor(void* ptr, void* item, int column);
void QTreeWidget_RemoveItemWidget(void* ptr, void* item, int column);
void QTreeWidget_ScrollToItem(void* ptr, void* item, int hint);
void QTreeWidget_SetCurrentItem(void* ptr, void* item);
void QTreeWidget_SetCurrentItem2(void* ptr, void* item, int column);
void QTreeWidget_SetCurrentItem3(void* ptr, void* item, int column, int command);
void QTreeWidget_SetFirstItemColumnSpanned(void* ptr, void* item, int span);
void QTreeWidget_SetHeaderItem(void* ptr, void* item);
void QTreeWidget_SetHeaderLabel(void* ptr, char* label);
void QTreeWidget_SetHeaderLabels(void* ptr, char* labels);
void QTreeWidget_SetItemWidget(void* ptr, void* item, int column, void* widget);
void QTreeWidget_SetSelectionModel(void* ptr, void* selectionModel);
void QTreeWidget_SetSelectionModelDefault(void* ptr, void* selectionModel);
int QTreeWidget_SortColumn(void* ptr);
void QTreeWidget_SortItems(void* ptr, int column, int order);
int QTreeWidget_SupportedDropActions(void* ptr);
int QTreeWidget_SupportedDropActionsDefault(void* ptr);
void* QTreeWidget_TakeTopLevelItem(void* ptr, int index);
void* QTreeWidget_TopLevelItem(void* ptr, int index);
void* QTreeWidget_VisualItemRect(void* ptr, void* item);
void QTreeWidget_DestroyQTreeWidget(void* ptr);
void QTreeWidget_CurrentChanged(void* ptr, void* current, void* previous);
void QTreeWidget_CurrentChangedDefault(void* ptr, void* current, void* previous);
void QTreeWidget_DragMoveEvent(void* ptr, void* event);
void QTreeWidget_DragMoveEventDefault(void* ptr, void* event);
void QTreeWidget_DrawBranches(void* ptr, void* painter, void* rect, void* index);
void QTreeWidget_DrawBranchesDefault(void* ptr, void* painter, void* rect, void* index);
void QTreeWidget_KeyPressEvent(void* ptr, void* event);
void QTreeWidget_KeyPressEventDefault(void* ptr, void* event);
void QTreeWidget_KeyboardSearch(void* ptr, char* search);
void QTreeWidget_KeyboardSearchDefault(void* ptr, char* search);
void QTreeWidget_MouseDoubleClickEvent(void* ptr, void* event);
void QTreeWidget_MouseDoubleClickEventDefault(void* ptr, void* event);
void QTreeWidget_MouseMoveEvent(void* ptr, void* event);
void QTreeWidget_MouseMoveEventDefault(void* ptr, void* event);
void QTreeWidget_MousePressEvent(void* ptr, void* event);
void QTreeWidget_MousePressEventDefault(void* ptr, void* event);
void QTreeWidget_MouseReleaseEvent(void* ptr, void* event);
void QTreeWidget_MouseReleaseEventDefault(void* ptr, void* event);
void QTreeWidget_PaintEvent(void* ptr, void* event);
void QTreeWidget_PaintEventDefault(void* ptr, void* event);
void QTreeWidget_Reset(void* ptr);
void QTreeWidget_ResetDefault(void* ptr);
void QTreeWidget_RowsAboutToBeRemoved(void* ptr, void* parent, int start, int end);
void QTreeWidget_RowsAboutToBeRemovedDefault(void* ptr, void* parent, int start, int end);
void QTreeWidget_RowsInserted(void* ptr, void* parent, int start, int end);
void QTreeWidget_RowsInsertedDefault(void* ptr, void* parent, int start, int end);
void QTreeWidget_ScrollContentsBy(void* ptr, int dx, int dy);
void QTreeWidget_ScrollContentsByDefault(void* ptr, int dx, int dy);
void QTreeWidget_ScrollTo(void* ptr, void* index, int hint);
void QTreeWidget_ScrollToDefault(void* ptr, void* index, int hint);
void QTreeWidget_SelectAll(void* ptr);
void QTreeWidget_SelectAllDefault(void* ptr);
void QTreeWidget_SetRootIndex(void* ptr, void* index);
void QTreeWidget_SetRootIndexDefault(void* ptr, void* index);
void QTreeWidget_SetSelection(void* ptr, void* rect, int command);
void QTreeWidget_SetSelectionDefault(void* ptr, void* rect, int command);
void QTreeWidget_TimerEvent(void* ptr, void* event);
void QTreeWidget_TimerEventDefault(void* ptr, void* event);
void QTreeWidget_UpdateGeometries(void* ptr);
void QTreeWidget_UpdateGeometriesDefault(void* ptr);
void QTreeWidget_DragLeaveEvent(void* ptr, void* event);
void QTreeWidget_DragLeaveEventDefault(void* ptr, void* event);
void QTreeWidget_CloseEditor(void* ptr, void* editor, int hint);
void QTreeWidget_CloseEditorDefault(void* ptr, void* editor, int hint);
void QTreeWidget_CommitData(void* ptr, void* editor);
void QTreeWidget_CommitDataDefault(void* ptr, void* editor);
void QTreeWidget_DragEnterEvent(void* ptr, void* event);
void QTreeWidget_DragEnterEventDefault(void* ptr, void* event);
void QTreeWidget_EditorDestroyed(void* ptr, void* editor);
void QTreeWidget_EditorDestroyedDefault(void* ptr, void* editor);
void QTreeWidget_FocusInEvent(void* ptr, void* event);
void QTreeWidget_FocusInEventDefault(void* ptr, void* event);
void QTreeWidget_FocusOutEvent(void* ptr, void* event);
void QTreeWidget_FocusOutEventDefault(void* ptr, void* event);
void QTreeWidget_InputMethodEvent(void* ptr, void* event);
void QTreeWidget_InputMethodEventDefault(void* ptr, void* event);
void QTreeWidget_ResizeEvent(void* ptr, void* event);
void QTreeWidget_ResizeEventDefault(void* ptr, void* event);
void QTreeWidget_StartDrag(void* ptr, int supportedActions);
void QTreeWidget_StartDragDefault(void* ptr, int supportedActions);
void QTreeWidget_ContextMenuEvent(void* ptr, void* e);
void QTreeWidget_ContextMenuEventDefault(void* ptr, void* e);
void QTreeWidget_SetupViewport(void* ptr, void* viewport);
void QTreeWidget_SetupViewportDefault(void* ptr, void* viewport);
void QTreeWidget_WheelEvent(void* ptr, void* e);
void QTreeWidget_WheelEventDefault(void* ptr, void* e);
void QTreeWidget_ChangeEvent(void* ptr, void* ev);
void QTreeWidget_ChangeEventDefault(void* ptr, void* ev);
void QTreeWidget_ActionEvent(void* ptr, void* event);
void QTreeWidget_ActionEventDefault(void* ptr, void* event);
void QTreeWidget_EnterEvent(void* ptr, void* event);
void QTreeWidget_EnterEventDefault(void* ptr, void* event);
void QTreeWidget_HideEvent(void* ptr, void* event);
void QTreeWidget_HideEventDefault(void* ptr, void* event);
void QTreeWidget_LeaveEvent(void* ptr, void* event);
void QTreeWidget_LeaveEventDefault(void* ptr, void* event);
void QTreeWidget_MoveEvent(void* ptr, void* event);
void QTreeWidget_MoveEventDefault(void* ptr, void* event);
void QTreeWidget_SetVisible(void* ptr, int visible);
void QTreeWidget_SetVisibleDefault(void* ptr, int visible);
void QTreeWidget_ShowEvent(void* ptr, void* event);
void QTreeWidget_ShowEventDefault(void* ptr, void* event);
void QTreeWidget_CloseEvent(void* ptr, void* event);
void QTreeWidget_CloseEventDefault(void* ptr, void* event);
void QTreeWidget_InitPainter(void* ptr, void* painter);
void QTreeWidget_InitPainterDefault(void* ptr, void* painter);
void QTreeWidget_KeyReleaseEvent(void* ptr, void* event);
void QTreeWidget_KeyReleaseEventDefault(void* ptr, void* event);
void QTreeWidget_TabletEvent(void* ptr, void* event);
void QTreeWidget_TabletEventDefault(void* ptr, void* event);
void QTreeWidget_ChildEvent(void* ptr, void* event);
void QTreeWidget_ChildEventDefault(void* ptr, void* event);
void QTreeWidget_CustomEvent(void* ptr, void* event);
void QTreeWidget_CustomEventDefault(void* ptr, void* event);
void* QTreeWidgetItem_NewQTreeWidgetItem5(void* parent, void* preceding, int ty);
void* QTreeWidgetItem_NewQTreeWidgetItem4(void* parent, char* strin, int ty);
void* QTreeWidgetItem_NewQTreeWidgetItem3(void* parent, int ty);
void* QTreeWidgetItem_NewQTreeWidgetItem8(void* parent, void* preceding, int ty);
int QTreeWidgetItem_Flags(void* ptr);
void QTreeWidgetItem_SetFlags(void* ptr, int flags);
void* QTreeWidgetItem_NewQTreeWidgetItem7(void* parent, char* strin, int ty);
void* QTreeWidgetItem_NewQTreeWidgetItem6(void* parent, int ty);
void* QTreeWidgetItem_NewQTreeWidgetItem2(char* strin, int ty);
void* QTreeWidgetItem_NewQTreeWidgetItem9(void* other);
void* QTreeWidgetItem_NewQTreeWidgetItem(int ty);
void QTreeWidgetItem_AddChild(void* ptr, void* child);
void* QTreeWidgetItem_Background(void* ptr, int column);
int QTreeWidgetItem_CheckState(void* ptr, int column);
void* QTreeWidgetItem_Child(void* ptr, int index);
int QTreeWidgetItem_ChildCount(void* ptr);
int QTreeWidgetItem_ChildIndicatorPolicy(void* ptr);
int QTreeWidgetItem_ColumnCount(void* ptr);
void* QTreeWidgetItem_Data(void* ptr, int column, int role);
void* QTreeWidgetItem_DataDefault(void* ptr, int column, int role);
void* QTreeWidgetItem_Clone(void* ptr);
void* QTreeWidgetItem_CloneDefault(void* ptr);
void* QTreeWidgetItem_Foreground(void* ptr, int column);
void* QTreeWidgetItem_Icon(void* ptr, int column);
int QTreeWidgetItem_IndexOfChild(void* ptr, void* child);
void QTreeWidgetItem_InsertChild(void* ptr, int index, void* child);
int QTreeWidgetItem_IsDisabled(void* ptr);
int QTreeWidgetItem_IsExpanded(void* ptr);
int QTreeWidgetItem_IsFirstColumnSpanned(void* ptr);
int QTreeWidgetItem_IsHidden(void* ptr);
int QTreeWidgetItem_IsSelected(void* ptr);
void* QTreeWidgetItem_Parent(void* ptr);
void QTreeWidgetItem_RemoveChild(void* ptr, void* child);
void QTreeWidgetItem_SetBackground(void* ptr, int column, void* brush);
void QTreeWidgetItem_SetCheckState(void* ptr, int column, int state);
void QTreeWidgetItem_SetChildIndicatorPolicy(void* ptr, int policy);
void QTreeWidgetItem_SetData(void* ptr, int column, int role, void* value);
void QTreeWidgetItem_SetDataDefault(void* ptr, int column, int role, void* value);
void QTreeWidgetItem_SetDisabled(void* ptr, int disabled);
void QTreeWidgetItem_SetExpanded(void* ptr, int expand);
void QTreeWidgetItem_SetFirstColumnSpanned(void* ptr, int span);
void QTreeWidgetItem_SetFont(void* ptr, int column, void* font);
void QTreeWidgetItem_SetForeground(void* ptr, int column, void* brush);
void QTreeWidgetItem_SetHidden(void* ptr, int hide);
void QTreeWidgetItem_SetIcon(void* ptr, int column, void* icon);
void QTreeWidgetItem_SetSelected(void* ptr, int sele);
void QTreeWidgetItem_SetSizeHint(void* ptr, int column, void* size);
void QTreeWidgetItem_SetStatusTip(void* ptr, int column, char* statusTip);
void QTreeWidgetItem_SetText(void* ptr, int column, char* text);
void QTreeWidgetItem_SetTextAlignment(void* ptr, int column, int alignment);
void QTreeWidgetItem_SetToolTip(void* ptr, int column, char* toolTip);
void QTreeWidgetItem_SetWhatsThis(void* ptr, int column, char* whatsThis);
void* QTreeWidgetItem_SizeHint(void* ptr, int column);
void QTreeWidgetItem_SortChildren(void* ptr, int column, int order);
char* QTreeWidgetItem_StatusTip(void* ptr, int column);
void* QTreeWidgetItem_TakeChild(void* ptr, int index);
char* QTreeWidgetItem_Text(void* ptr, int column);
int QTreeWidgetItem_TextAlignment(void* ptr, int column);
char* QTreeWidgetItem_ToolTip(void* ptr, int column);
void* QTreeWidgetItem_TreeWidget(void* ptr);
int QTreeWidgetItem_Type(void* ptr);
char* QTreeWidgetItem_WhatsThis(void* ptr, int column);
void QTreeWidgetItem_DestroyQTreeWidgetItem(void* ptr);
char* QTreeWidgetItem_ObjectNameAbs(void* ptr);
void QTreeWidgetItem_SetObjectNameAbs(void* ptr, char* name);
void* QUndoCommand_NewQUndoCommand(void* parent);
void* QUndoCommand_NewQUndoCommand2(char* text, void* parent);
char* QUndoCommand_ActionText(void* ptr);
void* QUndoCommand_Child(void* ptr, int index);
int QUndoCommand_ChildCount(void* ptr);
int QUndoCommand_Id(void* ptr);
int QUndoCommand_IdDefault(void* ptr);
int QUndoCommand_MergeWith(void* ptr, void* command);
int QUndoCommand_MergeWithDefault(void* ptr, void* command);
void QUndoCommand_Redo(void* ptr);
void QUndoCommand_RedoDefault(void* ptr);
void QUndoCommand_SetText(void* ptr, char* text);
char* QUndoCommand_Text(void* ptr);
void QUndoCommand_Undo(void* ptr);
void QUndoCommand_UndoDefault(void* ptr);
void QUndoCommand_DestroyQUndoCommand(void* ptr);
char* QUndoCommand_ObjectNameAbs(void* ptr);
void QUndoCommand_SetObjectNameAbs(void* ptr, char* name);
void* QUndoGroup_NewQUndoGroup(void* parent);
void* QUndoGroup_ActiveStack(void* ptr);
void QUndoGroup_ConnectActiveStackChanged(void* ptr);
void QUndoGroup_DisconnectActiveStackChanged(void* ptr);
void QUndoGroup_ActiveStackChanged(void* ptr, void* stack);
void QUndoGroup_AddStack(void* ptr, void* stack);
int QUndoGroup_CanRedo(void* ptr);
void QUndoGroup_ConnectCanRedoChanged(void* ptr);
void QUndoGroup_DisconnectCanRedoChanged(void* ptr);
void QUndoGroup_CanRedoChanged(void* ptr, int canRedo);
int QUndoGroup_CanUndo(void* ptr);
void QUndoGroup_ConnectCanUndoChanged(void* ptr);
void QUndoGroup_DisconnectCanUndoChanged(void* ptr);
void QUndoGroup_CanUndoChanged(void* ptr, int canUndo);
void QUndoGroup_ConnectCleanChanged(void* ptr);
void QUndoGroup_DisconnectCleanChanged(void* ptr);
void QUndoGroup_CleanChanged(void* ptr, int clean);
void* QUndoGroup_CreateRedoAction(void* ptr, void* parent, char* prefix);
void* QUndoGroup_CreateUndoAction(void* ptr, void* parent, char* prefix);
void QUndoGroup_ConnectIndexChanged(void* ptr);
void QUndoGroup_DisconnectIndexChanged(void* ptr);
void QUndoGroup_IndexChanged(void* ptr, int idx);
int QUndoGroup_IsClean(void* ptr);
void QUndoGroup_Redo(void* ptr);
char* QUndoGroup_RedoText(void* ptr);
void QUndoGroup_ConnectRedoTextChanged(void* ptr);
void QUndoGroup_DisconnectRedoTextChanged(void* ptr);
void QUndoGroup_RedoTextChanged(void* ptr, char* redoText);
void QUndoGroup_RemoveStack(void* ptr, void* stack);
void QUndoGroup_SetActiveStack(void* ptr, void* stack);
void QUndoGroup_Undo(void* ptr);
char* QUndoGroup_UndoText(void* ptr);
void QUndoGroup_ConnectUndoTextChanged(void* ptr);
void QUndoGroup_DisconnectUndoTextChanged(void* ptr);
void QUndoGroup_UndoTextChanged(void* ptr, char* undoText);
void QUndoGroup_DestroyQUndoGroup(void* ptr);
void QUndoGroup_TimerEvent(void* ptr, void* event);
void QUndoGroup_TimerEventDefault(void* ptr, void* event);
void QUndoGroup_ChildEvent(void* ptr, void* event);
void QUndoGroup_ChildEventDefault(void* ptr, void* event);
void QUndoGroup_CustomEvent(void* ptr, void* event);
void QUndoGroup_CustomEventDefault(void* ptr, void* event);
int QUndoStack_IsActive(void* ptr);
void QUndoStack_SetActive(void* ptr, int active);
void QUndoStack_SetUndoLimit(void* ptr, int limit);
int QUndoStack_UndoLimit(void* ptr);
void* QUndoStack_NewQUndoStack(void* parent);
void QUndoStack_BeginMacro(void* ptr, char* text);
int QUndoStack_CanRedo(void* ptr);
void QUndoStack_ConnectCanRedoChanged(void* ptr);
void QUndoStack_DisconnectCanRedoChanged(void* ptr);
void QUndoStack_CanRedoChanged(void* ptr, int canRedo);
int QUndoStack_CanUndo(void* ptr);
void QUndoStack_ConnectCanUndoChanged(void* ptr);
void QUndoStack_DisconnectCanUndoChanged(void* ptr);
void QUndoStack_CanUndoChanged(void* ptr, int canUndo);
void QUndoStack_ConnectCleanChanged(void* ptr);
void QUndoStack_DisconnectCleanChanged(void* ptr);
void QUndoStack_CleanChanged(void* ptr, int clean);
int QUndoStack_CleanIndex(void* ptr);
void QUndoStack_Clear(void* ptr);
void* QUndoStack_Command(void* ptr, int index);
int QUndoStack_Count(void* ptr);
void* QUndoStack_CreateRedoAction(void* ptr, void* parent, char* prefix);
void* QUndoStack_CreateUndoAction(void* ptr, void* parent, char* prefix);
void QUndoStack_EndMacro(void* ptr);
int QUndoStack_Index(void* ptr);
void QUndoStack_ConnectIndexChanged(void* ptr);
void QUndoStack_DisconnectIndexChanged(void* ptr);
void QUndoStack_IndexChanged(void* ptr, int idx);
int QUndoStack_IsClean(void* ptr);
void QUndoStack_Push(void* ptr, void* cmd);
void QUndoStack_Redo(void* ptr);
char* QUndoStack_RedoText(void* ptr);
void QUndoStack_ConnectRedoTextChanged(void* ptr);
void QUndoStack_DisconnectRedoTextChanged(void* ptr);
void QUndoStack_RedoTextChanged(void* ptr, char* redoText);
void QUndoStack_SetClean(void* ptr);
void QUndoStack_SetIndex(void* ptr, int idx);
char* QUndoStack_Text(void* ptr, int idx);
void QUndoStack_Undo(void* ptr);
char* QUndoStack_UndoText(void* ptr);
void QUndoStack_ConnectUndoTextChanged(void* ptr);
void QUndoStack_DisconnectUndoTextChanged(void* ptr);
void QUndoStack_UndoTextChanged(void* ptr, char* undoText);
void QUndoStack_DestroyQUndoStack(void* ptr);
void QUndoStack_TimerEvent(void* ptr, void* event);
void QUndoStack_TimerEventDefault(void* ptr, void* event);
void QUndoStack_ChildEvent(void* ptr, void* event);
void QUndoStack_ChildEventDefault(void* ptr, void* event);
void QUndoStack_CustomEvent(void* ptr, void* event);
void QUndoStack_CustomEventDefault(void* ptr, void* event);
void* QUndoView_CleanIcon(void* ptr);
char* QUndoView_EmptyLabel(void* ptr);
void QUndoView_SetCleanIcon(void* ptr, void* icon);
void QUndoView_SetEmptyLabel(void* ptr, char* label);
void* QUndoView_NewQUndoView3(void* group, void* parent);
void* QUndoView_NewQUndoView2(void* stack, void* parent);
void* QUndoView_NewQUndoView(void* parent);
void* QUndoView_Group(void* ptr);
void QUndoView_SetGroup(void* ptr, void* group);
void QUndoView_SetStack(void* ptr, void* stack);
void* QUndoView_Stack(void* ptr);
void QUndoView_DestroyQUndoView(void* ptr);
void QUndoView_CurrentChanged(void* ptr, void* current, void* previous);
void QUndoView_CurrentChangedDefault(void* ptr, void* current, void* previous);
void QUndoView_DragLeaveEvent(void* ptr, void* e);
void QUndoView_DragLeaveEventDefault(void* ptr, void* e);
void QUndoView_DragMoveEvent(void* ptr, void* e);
void QUndoView_DragMoveEventDefault(void* ptr, void* e);
void QUndoView_DropEvent(void* ptr, void* e);
void QUndoView_DropEventDefault(void* ptr, void* e);
void QUndoView_MouseMoveEvent(void* ptr, void* e);
void QUndoView_MouseMoveEventDefault(void* ptr, void* e);
void QUndoView_MouseReleaseEvent(void* ptr, void* e);
void QUndoView_MouseReleaseEventDefault(void* ptr, void* e);
void QUndoView_PaintEvent(void* ptr, void* e);
void QUndoView_PaintEventDefault(void* ptr, void* e);
void QUndoView_ResizeEvent(void* ptr, void* e);
void QUndoView_ResizeEventDefault(void* ptr, void* e);
void QUndoView_RowsAboutToBeRemoved(void* ptr, void* parent, int start, int end);
void QUndoView_RowsAboutToBeRemovedDefault(void* ptr, void* parent, int start, int end);
void QUndoView_RowsInserted(void* ptr, void* parent, int start, int end);
void QUndoView_RowsInsertedDefault(void* ptr, void* parent, int start, int end);
void QUndoView_ScrollTo(void* ptr, void* index, int hint);
void QUndoView_ScrollToDefault(void* ptr, void* index, int hint);
void QUndoView_SetSelection(void* ptr, void* rect, int command);
void QUndoView_SetSelectionDefault(void* ptr, void* rect, int command);
void QUndoView_StartDrag(void* ptr, int supportedActions);
void QUndoView_StartDragDefault(void* ptr, int supportedActions);
void QUndoView_TimerEvent(void* ptr, void* e);
void QUndoView_TimerEventDefault(void* ptr, void* e);
void QUndoView_UpdateGeometries(void* ptr);
void QUndoView_UpdateGeometriesDefault(void* ptr);
void QUndoView_CloseEditor(void* ptr, void* editor, int hint);
void QUndoView_CloseEditorDefault(void* ptr, void* editor, int hint);
void QUndoView_CommitData(void* ptr, void* editor);
void QUndoView_CommitDataDefault(void* ptr, void* editor);
void QUndoView_DragEnterEvent(void* ptr, void* event);
void QUndoView_DragEnterEventDefault(void* ptr, void* event);
void QUndoView_EditorDestroyed(void* ptr, void* editor);
void QUndoView_EditorDestroyedDefault(void* ptr, void* editor);
void QUndoView_FocusInEvent(void* ptr, void* event);
void QUndoView_FocusInEventDefault(void* ptr, void* event);
void QUndoView_FocusOutEvent(void* ptr, void* event);
void QUndoView_FocusOutEventDefault(void* ptr, void* event);
void QUndoView_InputMethodEvent(void* ptr, void* event);
void QUndoView_InputMethodEventDefault(void* ptr, void* event);
void QUndoView_KeyPressEvent(void* ptr, void* event);
void QUndoView_KeyPressEventDefault(void* ptr, void* event);
void QUndoView_KeyboardSearch(void* ptr, char* search);
void QUndoView_KeyboardSearchDefault(void* ptr, char* search);
void QUndoView_MouseDoubleClickEvent(void* ptr, void* event);
void QUndoView_MouseDoubleClickEventDefault(void* ptr, void* event);
void QUndoView_MousePressEvent(void* ptr, void* event);
void QUndoView_MousePressEventDefault(void* ptr, void* event);
void QUndoView_Reset(void* ptr);
void QUndoView_ResetDefault(void* ptr);
void QUndoView_SelectAll(void* ptr);
void QUndoView_SelectAllDefault(void* ptr);
void QUndoView_SetModel(void* ptr, void* model);
void QUndoView_SetModelDefault(void* ptr, void* model);
void QUndoView_SetRootIndex(void* ptr, void* index);
void QUndoView_SetRootIndexDefault(void* ptr, void* index);
void QUndoView_SetSelectionModel(void* ptr, void* selectionModel);
void QUndoView_SetSelectionModelDefault(void* ptr, void* selectionModel);
void QUndoView_ContextMenuEvent(void* ptr, void* e);
void QUndoView_ContextMenuEventDefault(void* ptr, void* e);
void QUndoView_ScrollContentsBy(void* ptr, int dx, int dy);
void QUndoView_ScrollContentsByDefault(void* ptr, int dx, int dy);
void QUndoView_SetupViewport(void* ptr, void* viewport);
void QUndoView_SetupViewportDefault(void* ptr, void* viewport);
void QUndoView_WheelEvent(void* ptr, void* e);
void QUndoView_WheelEventDefault(void* ptr, void* e);
void QUndoView_ChangeEvent(void* ptr, void* ev);
void QUndoView_ChangeEventDefault(void* ptr, void* ev);
void QUndoView_ActionEvent(void* ptr, void* event);
void QUndoView_ActionEventDefault(void* ptr, void* event);
void QUndoView_EnterEvent(void* ptr, void* event);
void QUndoView_EnterEventDefault(void* ptr, void* event);
void QUndoView_HideEvent(void* ptr, void* event);
void QUndoView_HideEventDefault(void* ptr, void* event);
void QUndoView_LeaveEvent(void* ptr, void* event);
void QUndoView_LeaveEventDefault(void* ptr, void* event);
void QUndoView_MoveEvent(void* ptr, void* event);
void QUndoView_MoveEventDefault(void* ptr, void* event);
void QUndoView_SetVisible(void* ptr, int visible);
void QUndoView_SetVisibleDefault(void* ptr, int visible);
void QUndoView_ShowEvent(void* ptr, void* event);
void QUndoView_ShowEventDefault(void* ptr, void* event);
void QUndoView_CloseEvent(void* ptr, void* event);
void QUndoView_CloseEventDefault(void* ptr, void* event);
void QUndoView_InitPainter(void* ptr, void* painter);
void QUndoView_InitPainterDefault(void* ptr, void* painter);
void QUndoView_KeyReleaseEvent(void* ptr, void* event);
void QUndoView_KeyReleaseEventDefault(void* ptr, void* event);
void QUndoView_TabletEvent(void* ptr, void* event);
void QUndoView_TabletEventDefault(void* ptr, void* event);
void QUndoView_ChildEvent(void* ptr, void* event);
void QUndoView_ChildEventDefault(void* ptr, void* event);
void QUndoView_CustomEvent(void* ptr, void* event);
void QUndoView_CustomEventDefault(void* ptr, void* event);
void* QVBoxLayout_NewQVBoxLayout();
void* QVBoxLayout_NewQVBoxLayout2(void* parent);
void QVBoxLayout_DestroyQVBoxLayout(void* ptr);
void QVBoxLayout_AddItem(void* ptr, void* item);
void QVBoxLayout_AddItemDefault(void* ptr, void* item);
void QVBoxLayout_Invalidate(void* ptr);
void QVBoxLayout_InvalidateDefault(void* ptr);
void QVBoxLayout_SetGeometry(void* ptr, void* r);
void QVBoxLayout_SetGeometryDefault(void* ptr, void* r);
void QVBoxLayout_ChildEvent(void* ptr, void* e);
void QVBoxLayout_ChildEventDefault(void* ptr, void* e);
void QVBoxLayout_TimerEvent(void* ptr, void* event);
void QVBoxLayout_TimerEventDefault(void* ptr, void* event);
void QVBoxLayout_CustomEvent(void* ptr, void* event);
void QVBoxLayout_CustomEventDefault(void* ptr, void* event);
void* QWhatsThis_QWhatsThis_CreateAction(void* parent);
void QWhatsThis_QWhatsThis_EnterWhatsThisMode();
void QWhatsThis_QWhatsThis_HideText();
int QWhatsThis_QWhatsThis_InWhatsThisMode();
void QWhatsThis_QWhatsThis_LeaveWhatsThisMode();
void QWhatsThis_QWhatsThis_ShowText(void* pos, char* text, void* w);
int QWidget_AcceptDrops(void* ptr);
char* QWidget_AccessibleDescription(void* ptr);
char* QWidget_AccessibleName(void* ptr);
void QWidget_ActionEvent(void* ptr, void* event);
void QWidget_ActionEventDefault(void* ptr, void* event);
void QWidget_ActivateWindow(void* ptr);
int QWidget_AutoFillBackground(void* ptr);
void* QWidget_BaseSize(void* ptr);
void* QWidget_ChildrenRect(void* ptr);
void* QWidget_ChildrenRegion(void* ptr);
void QWidget_ClearMask(void* ptr);
int QWidget_ContextMenuPolicy(void* ptr);
void QWidget_DragEnterEvent(void* ptr, void* event);
void QWidget_DragEnterEventDefault(void* ptr, void* event);
void QWidget_DragLeaveEvent(void* ptr, void* event);
void QWidget_DragLeaveEventDefault(void* ptr, void* event);
void QWidget_DragMoveEvent(void* ptr, void* event);
void QWidget_DragMoveEventDefault(void* ptr, void* event);
void QWidget_DropEvent(void* ptr, void* event);
void QWidget_DropEventDefault(void* ptr, void* event);
void QWidget_EnterEvent(void* ptr, void* event);
void QWidget_EnterEventDefault(void* ptr, void* event);
void QWidget_FocusInEvent(void* ptr, void* event);
void QWidget_FocusInEventDefault(void* ptr, void* event);
void QWidget_FocusOutEvent(void* ptr, void* event);
void QWidget_FocusOutEventDefault(void* ptr, void* event);
int QWidget_FocusPolicy(void* ptr);
void* QWidget_FrameGeometry(void* ptr);
void* QWidget_FrameSize(void* ptr);
void QWidget_GrabKeyboard(void* ptr);
void QWidget_GrabMouse(void* ptr);
void QWidget_GrabMouse2(void* ptr, void* cursor);
int QWidget_HasFocus(void* ptr);
void QWidget_HideEvent(void* ptr, void* event);
void QWidget_HideEventDefault(void* ptr, void* event);
int QWidget_InputMethodHints(void* ptr);
int QWidget_IsActiveWindow(void* ptr);
int QWidget_IsFullScreen(void* ptr);
int QWidget_IsMaximized(void* ptr);
int QWidget_IsMinimized(void* ptr);
int QWidget_IsWindowModified(void* ptr);
void* QWidget_QWidget_KeyboardGrabber();
int QWidget_LayoutDirection(void* ptr);
void QWidget_LeaveEvent(void* ptr, void* event);
void QWidget_LeaveEventDefault(void* ptr, void* event);
void* QWidget_MapFromGlobal(void* ptr, void* pos);
void* QWidget_MapToGlobal(void* ptr, void* pos);
void* QWidget_MaximumSize(void* ptr);
int QWidget_Metric(void* ptr, int m);
int QWidget_MetricDefault(void* ptr, int m);
void* QWidget_MinimumSize(void* ptr);
void* QWidget_MinimumSizeHint(void* ptr);
void* QWidget_MinimumSizeHintDefault(void* ptr);
void* QWidget_QWidget_MouseGrabber();
void QWidget_Move(void* ptr, void* v);
void QWidget_MoveEvent(void* ptr, void* event);
void QWidget_MoveEventDefault(void* ptr, void* event);
void* QWidget_NormalGeometry(void* ptr);
void* QWidget_PaintEngine(void* ptr);
void* QWidget_PaintEngineDefault(void* ptr);
void QWidget_PaintEvent(void* ptr, void* event);
void QWidget_PaintEventDefault(void* ptr, void* event);
void* QWidget_Pos(void* ptr);
void QWidget_ReleaseKeyboard(void* ptr);
void QWidget_ReleaseMouse(void* ptr);
void QWidget_Resize(void* ptr, void* v);
void QWidget_SetAcceptDrops(void* ptr, int on);
void QWidget_SetAccessibleDescription(void* ptr, char* description);
void QWidget_SetAccessibleName(void* ptr, char* name);
void QWidget_SetAutoFillBackground(void* ptr, int enabled);
void QWidget_SetContextMenuPolicy(void* ptr, int policy);
void QWidget_SetCursor(void* ptr, void* v);
void QWidget_SetEnabled(void* ptr, int v);
void QWidget_SetFixedSize2(void* ptr, int w, int h);
void QWidget_SetFocusPolicy(void* ptr, int policy);
void QWidget_SetFont(void* ptr, void* v);
void QWidget_SetGeometry(void* ptr, void* v);
void QWidget_SetInputMethodHints(void* ptr, int hints);
void QWidget_SetLayout(void* ptr, void* layout);
void QWidget_SetLayoutDirection(void* ptr, int direction);
void QWidget_SetLocale(void* ptr, void* locale);
void QWidget_SetMask(void* ptr, void* bitmap);
void QWidget_SetMask2(void* ptr, void* region);
void QWidget_SetMaximumHeight(void* ptr, int maxh);
void QWidget_SetMaximumWidth(void* ptr, int maxw);
void QWidget_SetMinimumHeight(void* ptr, int minh);
void QWidget_SetMinimumWidth(void* ptr, int minw);
void QWidget_SetPalette(void* ptr, void* v);
void QWidget_SetSizePolicy(void* ptr, void* v);
void QWidget_SetStatusTip(void* ptr, char* v);
void QWidget_SetStyleSheet(void* ptr, char* styleSheet);
void QWidget_SetToolTip(void* ptr, char* v);
void QWidget_SetToolTipDuration(void* ptr, int msec);
void QWidget_SetUpdatesEnabled(void* ptr, int enable);
void QWidget_SetVisible(void* ptr, int visible);
void QWidget_SetVisibleDefault(void* ptr, int visible);
void QWidget_SetWhatsThis(void* ptr, char* v);
void QWidget_SetWindowFilePath(void* ptr, char* filePath);
void QWidget_SetWindowFlags(void* ptr, int ty);
void QWidget_SetWindowIcon(void* ptr, void* icon);
void QWidget_SetWindowIconText(void* ptr, char* v);
void QWidget_SetWindowModality(void* ptr, int windowModality);
void QWidget_SetWindowModified(void* ptr, int v);
void QWidget_SetWindowOpacity(void* ptr, double level);
void QWidget_SetWindowState(void* ptr, int windowState);
void QWidget_SetWindowTitle(void* ptr, char* v);
void QWidget_ShowEvent(void* ptr, void* event);
void QWidget_ShowEventDefault(void* ptr, void* event);
void* QWidget_SizeHint(void* ptr);
void* QWidget_SizeHintDefault(void* ptr);
void* QWidget_SizeIncrement(void* ptr);
char* QWidget_StatusTip(void* ptr);
char* QWidget_StyleSheet(void* ptr);
char* QWidget_ToolTip(void* ptr);
int QWidget_ToolTipDuration(void* ptr);
void QWidget_UnsetCursor(void* ptr);
void QWidget_UnsetLayoutDirection(void* ptr);
void QWidget_UnsetLocale(void* ptr);
char* QWidget_WhatsThis(void* ptr);
char* QWidget_WindowFilePath(void* ptr);
void* QWidget_WindowIcon(void* ptr);
char* QWidget_WindowIconText(void* ptr);
int QWidget_WindowModality(void* ptr);
double QWidget_WindowOpacity(void* ptr);
char* QWidget_WindowTitle(void* ptr);
int QWidget_X(void* ptr);
int QWidget_Y(void* ptr);
void* QWidget_NewQWidget(void* parent, int f);
void QWidget_AddAction(void* ptr, void* action);
void QWidget_AdjustSize(void* ptr);
int QWidget_BackgroundRole(void* ptr);
void* QWidget_BackingStore(void* ptr);
void QWidget_ChangeEvent(void* ptr, void* event);
void QWidget_ChangeEventDefault(void* ptr, void* event);
void* QWidget_ChildAt2(void* ptr, void* p);
void* QWidget_ChildAt(void* ptr, int x, int y);
void QWidget_ClearFocus(void* ptr);
int QWidget_Close(void* ptr);
void QWidget_CloseEvent(void* ptr, void* event);
void QWidget_CloseEventDefault(void* ptr, void* event);
void* QWidget_ContentsRect(void* ptr);
void QWidget_ContextMenuEvent(void* ptr, void* event);
void QWidget_ContextMenuEventDefault(void* ptr, void* event);
void QWidget_ConnectCustomContextMenuRequested(void* ptr);
void QWidget_DisconnectCustomContextMenuRequested(void* ptr);
void QWidget_CustomContextMenuRequested(void* ptr, void* pos);
void QWidget_EnsurePolished(void* ptr);
int QWidget_Event(void* ptr, void* event);
int QWidget_EventDefault(void* ptr, void* event);
int QWidget_FocusNextPrevChild(void* ptr, int next);
int QWidget_FocusNextPrevChildDefault(void* ptr, int next);
void* QWidget_FocusProxy(void* ptr);
void* QWidget_FocusWidget(void* ptr);
int QWidget_ForegroundRole(void* ptr);
void* QWidget_Geometry(void* ptr);
void QWidget_GetContentsMargins(void* ptr, int left, int top, int right, int bottom);
void QWidget_GrabGesture(void* ptr, int gesture, int flags);
int QWidget_GrabShortcut(void* ptr, void* key, int context);
void* QWidget_GraphicsEffect(void* ptr);
void* QWidget_GraphicsProxyWidget(void* ptr);
int QWidget_HasHeightForWidth(void* ptr);
int QWidget_HasHeightForWidthDefault(void* ptr);
int QWidget_HasMouseTracking(void* ptr);
int QWidget_Height(void* ptr);
int QWidget_HeightForWidth(void* ptr, int w);
int QWidget_HeightForWidthDefault(void* ptr, int w);
void QWidget_Hide(void* ptr);
void QWidget_InitPainter(void* ptr, void* painter);
void QWidget_InitPainterDefault(void* ptr, void* painter);
void QWidget_InputMethodEvent(void* ptr, void* event);
void QWidget_InputMethodEventDefault(void* ptr, void* event);
void* QWidget_InputMethodQuery(void* ptr, int query);
void* QWidget_InputMethodQueryDefault(void* ptr, int query);
void QWidget_InsertAction(void* ptr, void* before, void* action);
int QWidget_IsAncestorOf(void* ptr, void* child);
int QWidget_IsEnabled(void* ptr);
int QWidget_IsEnabledTo(void* ptr, void* ancestor);
int QWidget_IsHidden(void* ptr);
int QWidget_IsModal(void* ptr);
int QWidget_IsVisible(void* ptr);
int QWidget_IsVisibleTo(void* ptr, void* ancestor);
int QWidget_IsWindow(void* ptr);
void QWidget_KeyPressEvent(void* ptr, void* event);
void QWidget_KeyPressEventDefault(void* ptr, void* event);
void QWidget_KeyReleaseEvent(void* ptr, void* event);
void QWidget_KeyReleaseEventDefault(void* ptr, void* event);
void* QWidget_Layout(void* ptr);
void QWidget_Lower(void* ptr);
void* QWidget_MapFrom(void* ptr, void* parent, void* pos);
void* QWidget_MapFromParent(void* ptr, void* pos);
void* QWidget_MapTo(void* ptr, void* parent, void* pos);
void* QWidget_MapToParent(void* ptr, void* pos);
void* QWidget_Mask(void* ptr);
int QWidget_MaximumHeight(void* ptr);
int QWidget_MaximumWidth(void* ptr);
int QWidget_MinimumHeight(void* ptr);
int QWidget_MinimumWidth(void* ptr);
void QWidget_MouseDoubleClickEvent(void* ptr, void* event);
void QWidget_MouseDoubleClickEventDefault(void* ptr, void* event);
void QWidget_MouseMoveEvent(void* ptr, void* event);
void QWidget_MouseMoveEventDefault(void* ptr, void* event);
void QWidget_MousePressEvent(void* ptr, void* event);
void QWidget_MousePressEventDefault(void* ptr, void* event);
void QWidget_MouseReleaseEvent(void* ptr, void* event);
void QWidget_MouseReleaseEventDefault(void* ptr, void* event);
void QWidget_Move2(void* ptr, int x, int y);
void* QWidget_NativeParentWidget(void* ptr);
void* QWidget_NextInFocusChain(void* ptr);
void QWidget_OverrideWindowFlags(void* ptr, int flags);
void* QWidget_ParentWidget(void* ptr);
void* QWidget_PreviousInFocusChain(void* ptr);
void QWidget_Raise(void* ptr);
void* QWidget_Rect(void* ptr);
void QWidget_ReleaseShortcut(void* ptr, int id);
void QWidget_RemoveAction(void* ptr, void* action);
void QWidget_Render(void* ptr, void* target, void* targetOffset, void* sourceRegion, int renderFlags);
void QWidget_Render2(void* ptr, void* painter, void* targetOffset, void* sourceRegion, int renderFlags);
void QWidget_Repaint(void* ptr);
void QWidget_Repaint3(void* ptr, void* rect);
void QWidget_Repaint4(void* ptr, void* rgn);
void QWidget_Repaint2(void* ptr, int x, int y, int w, int h);
void QWidget_Resize2(void* ptr, int w, int h);
void QWidget_ResizeEvent(void* ptr, void* event);
void QWidget_ResizeEventDefault(void* ptr, void* event);
int QWidget_RestoreGeometry(void* ptr, void* geometry);
void* QWidget_SaveGeometry(void* ptr);
void QWidget_Scroll(void* ptr, int dx, int dy);
void QWidget_Scroll2(void* ptr, int dx, int dy, void* r);
void QWidget_SetAttribute(void* ptr, int attribute, int on);
void QWidget_SetBackgroundRole(void* ptr, int role);
void QWidget_SetBaseSize(void* ptr, void* v);
void QWidget_SetBaseSize2(void* ptr, int basew, int baseh);
void QWidget_SetContentsMargins2(void* ptr, void* margins);
void QWidget_SetContentsMargins(void* ptr, int left, int top, int right, int bottom);
void QWidget_SetDisabled(void* ptr, int disable);
void QWidget_SetFixedHeight(void* ptr, int h);
void QWidget_SetFixedSize(void* ptr, void* s);
void QWidget_SetFixedWidth(void* ptr, int w);
void QWidget_SetFocus2(void* ptr);
void QWidget_SetFocus(void* ptr, int reason);
void QWidget_SetFocusProxy(void* ptr, void* w);
void QWidget_SetForegroundRole(void* ptr, int role);
void QWidget_SetGeometry2(void* ptr, int x, int y, int w, int h);
void QWidget_SetGraphicsEffect(void* ptr, void* effect);
void QWidget_SetHidden(void* ptr, int hidden);
void QWidget_SetMaximumSize(void* ptr, void* v);
void QWidget_SetMaximumSize2(void* ptr, int maxw, int maxh);
void QWidget_SetMinimumSize(void* ptr, void* v);
void QWidget_SetMinimumSize2(void* ptr, int minw, int minh);
void QWidget_SetMouseTracking(void* ptr, int enable);
void QWidget_SetParent(void* ptr, void* parent);
void QWidget_SetParent2(void* ptr, void* parent, int f);
void QWidget_SetShortcutAutoRepeat(void* ptr, int id, int enable);
void QWidget_SetShortcutEnabled(void* ptr, int id, int enable);
void QWidget_SetSizeIncrement(void* ptr, void* v);
void QWidget_SetSizeIncrement2(void* ptr, int w, int h);
void QWidget_SetSizePolicy2(void* ptr, int horizontal, int vertical);
void QWidget_SetStyle(void* ptr, void* style);
void QWidget_QWidget_SetTabOrder(void* first, void* second);
void QWidget_SetWindowRole(void* ptr, char* role);
void QWidget_Show(void* ptr);
void QWidget_ShowFullScreen(void* ptr);
void QWidget_ShowMaximized(void* ptr);
void QWidget_ShowMinimized(void* ptr);
void QWidget_ShowNormal(void* ptr);
void* QWidget_Size(void* ptr);
void QWidget_StackUnder(void* ptr, void* w);
void* QWidget_Style(void* ptr);
void QWidget_TabletEvent(void* ptr, void* event);
void QWidget_TabletEventDefault(void* ptr, void* event);
int QWidget_TestAttribute(void* ptr, int attribute);
int QWidget_UnderMouse(void* ptr);
void QWidget_UngrabGesture(void* ptr, int gesture);
void QWidget_Update(void* ptr);
void QWidget_Update3(void* ptr, void* rect);
void QWidget_Update4(void* ptr, void* rgn);
void QWidget_Update2(void* ptr, int x, int y, int w, int h);
void QWidget_UpdateGeometry(void* ptr);
int QWidget_UpdatesEnabled(void* ptr);
void* QWidget_VisibleRegion(void* ptr);
void QWidget_WheelEvent(void* ptr, void* event);
void QWidget_WheelEventDefault(void* ptr, void* event);
int QWidget_Width(void* ptr);
void* QWidget_Window(void* ptr);
int QWidget_WindowFlags(void* ptr);
void* QWidget_WindowHandle(void* ptr);
void QWidget_ConnectWindowIconChanged(void* ptr);
void QWidget_DisconnectWindowIconChanged(void* ptr);
void QWidget_WindowIconChanged(void* ptr, void* icon);
void QWidget_ConnectWindowIconTextChanged(void* ptr);
void QWidget_DisconnectWindowIconTextChanged(void* ptr);
void QWidget_WindowIconTextChanged(void* ptr, char* iconText);
char* QWidget_WindowRole(void* ptr);
int QWidget_WindowState(void* ptr);
void QWidget_ConnectWindowTitleChanged(void* ptr);
void QWidget_DisconnectWindowTitleChanged(void* ptr);
void QWidget_WindowTitleChanged(void* ptr, char* title);
int QWidget_WindowType(void* ptr);
void QWidget_DestroyQWidget(void* ptr);
void* QWidget_QWidget_CreateWindowContainer(void* window, void* parent, int flags);
void QWidget_TimerEvent(void* ptr, void* event);
void QWidget_TimerEventDefault(void* ptr, void* event);
void QWidget_ChildEvent(void* ptr, void* event);
void QWidget_ChildEventDefault(void* ptr, void* event);
void QWidget_CustomEvent(void* ptr, void* event);
void QWidget_CustomEventDefault(void* ptr, void* event);
void* QWidgetAction_NewQWidgetAction(void* parent);
void* QWidgetAction_CreateWidget(void* ptr, void* parent);
void* QWidgetAction_CreateWidgetDefault(void* ptr, void* parent);
void* QWidgetAction_DefaultWidget(void* ptr);
void QWidgetAction_DeleteWidget(void* ptr, void* widget);
void QWidgetAction_DeleteWidgetDefault(void* ptr, void* widget);
int QWidgetAction_Event(void* ptr, void* event);
int QWidgetAction_EventDefault(void* ptr, void* event);
int QWidgetAction_EventFilter(void* ptr, void* obj, void* event);
int QWidgetAction_EventFilterDefault(void* ptr, void* obj, void* event);
void QWidgetAction_ReleaseWidget(void* ptr, void* widget);
void* QWidgetAction_RequestWidget(void* ptr, void* parent);
void QWidgetAction_SetDefaultWidget(void* ptr, void* widget);
void QWidgetAction_DestroyQWidgetAction(void* ptr);
void QWidgetAction_TimerEvent(void* ptr, void* event);
void QWidgetAction_TimerEventDefault(void* ptr, void* event);
void QWidgetAction_ChildEvent(void* ptr, void* event);
void QWidgetAction_ChildEventDefault(void* ptr, void* event);
void QWidgetAction_CustomEvent(void* ptr, void* event);
void QWidgetAction_CustomEventDefault(void* ptr, void* event);
void* QWidgetItem_NewQWidgetItem(void* widget);
int QWidgetItem_ControlTypes(void* ptr);
int QWidgetItem_ControlTypesDefault(void* ptr);
int QWidgetItem_ExpandingDirections(void* ptr);
int QWidgetItem_ExpandingDirectionsDefault(void* ptr);
void* QWidgetItem_Geometry(void* ptr);
void* QWidgetItem_GeometryDefault(void* ptr);
int QWidgetItem_HasHeightForWidth(void* ptr);
int QWidgetItem_HasHeightForWidthDefault(void* ptr);
int QWidgetItem_HeightForWidth(void* ptr, int w);
int QWidgetItem_HeightForWidthDefault(void* ptr, int w);
int QWidgetItem_IsEmpty(void* ptr);
int QWidgetItem_IsEmptyDefault(void* ptr);
void* QWidgetItem_MaximumSize(void* ptr);
void* QWidgetItem_MaximumSizeDefault(void* ptr);
void* QWidgetItem_MinimumSize(void* ptr);
void* QWidgetItem_MinimumSizeDefault(void* ptr);
void QWidgetItem_SetGeometry(void* ptr, void* rect);
void QWidgetItem_SetGeometryDefault(void* ptr, void* rect);
void* QWidgetItem_SizeHint(void* ptr);
void* QWidgetItem_SizeHintDefault(void* ptr);
void* QWidgetItem_Widget(void* ptr);
void* QWidgetItem_WidgetDefault(void* ptr);
void QWidgetItem_DestroyQWidgetItem(void* ptr);
char* QWidgetItem_ObjectNameAbs(void* ptr);
void QWidgetItem_SetObjectNameAbs(void* ptr, char* name);
void QWidgetItem_Invalidate(void* ptr);
void QWidgetItem_InvalidateDefault(void* ptr);
void QWizard_CleanupPage(void* ptr, int id);
void QWizard_CleanupPageDefault(void* ptr, int id);
int QWizard_CurrentId(void* ptr);
int QWizard_HasVisitedPage(void* ptr, int id);
void QWizard_InitializePage(void* ptr, int id);
void QWizard_InitializePageDefault(void* ptr, int id);
int QWizard_Options(void* ptr);
void* QWizard_Page(void* ptr, int id);
void QWizard_SetOptions(void* ptr, int options);
void QWizard_SetPage(void* ptr, int id, void* page);
void QWizard_SetStartId(void* ptr, int id);
void QWizard_SetSubTitleFormat(void* ptr, int format);
void QWizard_SetTitleFormat(void* ptr, int format);
void QWizard_SetWizardStyle(void* ptr, int style);
int QWizard_StartId(void* ptr);
int QWizard_SubTitleFormat(void* ptr);
int QWizard_TitleFormat(void* ptr);
int QWizard_WizardStyle(void* ptr);
void* QWizard_NewQWizard(void* parent, int flags);
int QWizard_AddPage(void* ptr, void* page);
void QWizard_Back(void* ptr);
void* QWizard_Button(void* ptr, int which);
char* QWizard_ButtonText(void* ptr, int which);
void QWizard_ConnectCurrentIdChanged(void* ptr);
void QWizard_DisconnectCurrentIdChanged(void* ptr);
void QWizard_CurrentIdChanged(void* ptr, int id);
void* QWizard_CurrentPage(void* ptr);
void QWizard_ConnectCustomButtonClicked(void* ptr);
void QWizard_DisconnectCustomButtonClicked(void* ptr);
void QWizard_CustomButtonClicked(void* ptr, int which);
void QWizard_Done(void* ptr, int result);
void QWizard_DoneDefault(void* ptr, int result);
int QWizard_Event(void* ptr, void* event);
int QWizard_EventDefault(void* ptr, void* event);
void* QWizard_Field(void* ptr, char* name);
void QWizard_ConnectHelpRequested(void* ptr);
void QWizard_DisconnectHelpRequested(void* ptr);
void QWizard_HelpRequested(void* ptr);
void QWizard_Next(void* ptr);
int QWizard_NextId(void* ptr);
int QWizard_NextIdDefault(void* ptr);
void QWizard_ConnectPageAdded(void* ptr);
void QWizard_DisconnectPageAdded(void* ptr);
void QWizard_PageAdded(void* ptr, int id);
void QWizard_ConnectPageRemoved(void* ptr);
void QWizard_DisconnectPageRemoved(void* ptr);
void QWizard_PageRemoved(void* ptr, int id);
void QWizard_PaintEvent(void* ptr, void* event);
void QWizard_PaintEventDefault(void* ptr, void* event);
void QWizard_RemovePage(void* ptr, int id);
void QWizard_ResizeEvent(void* ptr, void* event);
void QWizard_ResizeEventDefault(void* ptr, void* event);
void QWizard_Restart(void* ptr);
void QWizard_SetButton(void* ptr, int which, void* button);
void QWizard_SetButtonText(void* ptr, int which, char* text);
void QWizard_SetDefaultProperty(void* ptr, char* className, char* property, char* changedSignal);
void QWizard_SetField(void* ptr, char* name, void* value);
void QWizard_SetOption(void* ptr, int option, int on);
void QWizard_SetPixmap(void* ptr, int which, void* pixmap);
void QWizard_SetSideWidget(void* ptr, void* widget);
void QWizard_SetVisible(void* ptr, int visible);
void QWizard_SetVisibleDefault(void* ptr, int visible);
void* QWizard_SideWidget(void* ptr);
void* QWizard_SizeHint(void* ptr);
void* QWizard_SizeHintDefault(void* ptr);
int QWizard_TestOption(void* ptr, int option);
int QWizard_ValidateCurrentPage(void* ptr);
int QWizard_ValidateCurrentPageDefault(void* ptr);
void QWizard_DestroyQWizard(void* ptr);
void QWizard_Accept(void* ptr);
void QWizard_AcceptDefault(void* ptr);
void QWizard_CloseEvent(void* ptr, void* e);
void QWizard_CloseEventDefault(void* ptr, void* e);
void QWizard_ContextMenuEvent(void* ptr, void* e);
void QWizard_ContextMenuEventDefault(void* ptr, void* e);
void QWizard_KeyPressEvent(void* ptr, void* e);
void QWizard_KeyPressEventDefault(void* ptr, void* e);
void QWizard_Open(void* ptr);
void QWizard_OpenDefault(void* ptr);
void QWizard_Reject(void* ptr);
void QWizard_RejectDefault(void* ptr);
void QWizard_ShowEvent(void* ptr, void* event);
void QWizard_ShowEventDefault(void* ptr, void* event);
void QWizard_ActionEvent(void* ptr, void* event);
void QWizard_ActionEventDefault(void* ptr, void* event);
void QWizard_DragEnterEvent(void* ptr, void* event);
void QWizard_DragEnterEventDefault(void* ptr, void* event);
void QWizard_DragLeaveEvent(void* ptr, void* event);
void QWizard_DragLeaveEventDefault(void* ptr, void* event);
void QWizard_DragMoveEvent(void* ptr, void* event);
void QWizard_DragMoveEventDefault(void* ptr, void* event);
void QWizard_DropEvent(void* ptr, void* event);
void QWizard_DropEventDefault(void* ptr, void* event);
void QWizard_EnterEvent(void* ptr, void* event);
void QWizard_EnterEventDefault(void* ptr, void* event);
void QWizard_FocusInEvent(void* ptr, void* event);
void QWizard_FocusInEventDefault(void* ptr, void* event);
void QWizard_FocusOutEvent(void* ptr, void* event);
void QWizard_FocusOutEventDefault(void* ptr, void* event);
void QWizard_HideEvent(void* ptr, void* event);
void QWizard_HideEventDefault(void* ptr, void* event);
void QWizard_LeaveEvent(void* ptr, void* event);
void QWizard_LeaveEventDefault(void* ptr, void* event);
void QWizard_MoveEvent(void* ptr, void* event);
void QWizard_MoveEventDefault(void* ptr, void* event);
void QWizard_ChangeEvent(void* ptr, void* event);
void QWizard_ChangeEventDefault(void* ptr, void* event);
void QWizard_InitPainter(void* ptr, void* painter);
void QWizard_InitPainterDefault(void* ptr, void* painter);
void QWizard_InputMethodEvent(void* ptr, void* event);
void QWizard_InputMethodEventDefault(void* ptr, void* event);
void QWizard_KeyReleaseEvent(void* ptr, void* event);
void QWizard_KeyReleaseEventDefault(void* ptr, void* event);
void QWizard_MouseDoubleClickEvent(void* ptr, void* event);
void QWizard_MouseDoubleClickEventDefault(void* ptr, void* event);
void QWizard_MouseMoveEvent(void* ptr, void* event);
void QWizard_MouseMoveEventDefault(void* ptr, void* event);
void QWizard_MousePressEvent(void* ptr, void* event);
void QWizard_MousePressEventDefault(void* ptr, void* event);
void QWizard_MouseReleaseEvent(void* ptr, void* event);
void QWizard_MouseReleaseEventDefault(void* ptr, void* event);
void QWizard_TabletEvent(void* ptr, void* event);
void QWizard_TabletEventDefault(void* ptr, void* event);
void QWizard_WheelEvent(void* ptr, void* event);
void QWizard_WheelEventDefault(void* ptr, void* event);
void QWizard_TimerEvent(void* ptr, void* event);
void QWizard_TimerEventDefault(void* ptr, void* event);
void QWizard_ChildEvent(void* ptr, void* event);
void QWizard_ChildEventDefault(void* ptr, void* event);
void QWizard_CustomEvent(void* ptr, void* event);
void QWizard_CustomEventDefault(void* ptr, void* event);
void QWizardPage_SetSubTitle(void* ptr, char* subTitle);
void QWizardPage_SetTitle(void* ptr, char* title);
char* QWizardPage_SubTitle(void* ptr);
char* QWizardPage_Title(void* ptr);
void* QWizardPage_NewQWizardPage(void* parent);
char* QWizardPage_ButtonText(void* ptr, int which);
void QWizardPage_CleanupPage(void* ptr);
void QWizardPage_CleanupPageDefault(void* ptr);
void QWizardPage_ConnectCompleteChanged(void* ptr);
void QWizardPage_DisconnectCompleteChanged(void* ptr);
void QWizardPage_CompleteChanged(void* ptr);
void QWizardPage_InitializePage(void* ptr);
void QWizardPage_InitializePageDefault(void* ptr);
int QWizardPage_IsCommitPage(void* ptr);
int QWizardPage_IsComplete(void* ptr);
int QWizardPage_IsCompleteDefault(void* ptr);
int QWizardPage_IsFinalPage(void* ptr);
int QWizardPage_NextId(void* ptr);
int QWizardPage_NextIdDefault(void* ptr);
void QWizardPage_SetButtonText(void* ptr, int which, char* text);
void QWizardPage_SetCommitPage(void* ptr, int commitPage);
void QWizardPage_SetFinalPage(void* ptr, int finalPage);
void QWizardPage_SetPixmap(void* ptr, int which, void* pixmap);
int QWizardPage_ValidatePage(void* ptr);
int QWizardPage_ValidatePageDefault(void* ptr);
void QWizardPage_DestroyQWizardPage(void* ptr);
void QWizardPage_ActionEvent(void* ptr, void* event);
void QWizardPage_ActionEventDefault(void* ptr, void* event);
void QWizardPage_DragEnterEvent(void* ptr, void* event);
void QWizardPage_DragEnterEventDefault(void* ptr, void* event);
void QWizardPage_DragLeaveEvent(void* ptr, void* event);
void QWizardPage_DragLeaveEventDefault(void* ptr, void* event);
void QWizardPage_DragMoveEvent(void* ptr, void* event);
void QWizardPage_DragMoveEventDefault(void* ptr, void* event);
void QWizardPage_DropEvent(void* ptr, void* event);
void QWizardPage_DropEventDefault(void* ptr, void* event);
void QWizardPage_EnterEvent(void* ptr, void* event);
void QWizardPage_EnterEventDefault(void* ptr, void* event);
void QWizardPage_FocusInEvent(void* ptr, void* event);
void QWizardPage_FocusInEventDefault(void* ptr, void* event);
void QWizardPage_FocusOutEvent(void* ptr, void* event);
void QWizardPage_FocusOutEventDefault(void* ptr, void* event);
void QWizardPage_HideEvent(void* ptr, void* event);
void QWizardPage_HideEventDefault(void* ptr, void* event);
void QWizardPage_LeaveEvent(void* ptr, void* event);
void QWizardPage_LeaveEventDefault(void* ptr, void* event);
void QWizardPage_MoveEvent(void* ptr, void* event);
void QWizardPage_MoveEventDefault(void* ptr, void* event);
void QWizardPage_PaintEvent(void* ptr, void* event);
void QWizardPage_PaintEventDefault(void* ptr, void* event);
void QWizardPage_SetVisible(void* ptr, int visible);
void QWizardPage_SetVisibleDefault(void* ptr, int visible);
void QWizardPage_ShowEvent(void* ptr, void* event);
void QWizardPage_ShowEventDefault(void* ptr, void* event);
void QWizardPage_ChangeEvent(void* ptr, void* event);
void QWizardPage_ChangeEventDefault(void* ptr, void* event);
void QWizardPage_CloseEvent(void* ptr, void* event);
void QWizardPage_CloseEventDefault(void* ptr, void* event);
void QWizardPage_ContextMenuEvent(void* ptr, void* event);
void QWizardPage_ContextMenuEventDefault(void* ptr, void* event);
void QWizardPage_InitPainter(void* ptr, void* painter);
void QWizardPage_InitPainterDefault(void* ptr, void* painter);
void QWizardPage_InputMethodEvent(void* ptr, void* event);
void QWizardPage_InputMethodEventDefault(void* ptr, void* event);
void QWizardPage_KeyPressEvent(void* ptr, void* event);
void QWizardPage_KeyPressEventDefault(void* ptr, void* event);
void QWizardPage_KeyReleaseEvent(void* ptr, void* event);
void QWizardPage_KeyReleaseEventDefault(void* ptr, void* event);
void QWizardPage_MouseDoubleClickEvent(void* ptr, void* event);
void QWizardPage_MouseDoubleClickEventDefault(void* ptr, void* event);
void QWizardPage_MouseMoveEvent(void* ptr, void* event);
void QWizardPage_MouseMoveEventDefault(void* ptr, void* event);
void QWizardPage_MousePressEvent(void* ptr, void* event);
void QWizardPage_MousePressEventDefault(void* ptr, void* event);
void QWizardPage_MouseReleaseEvent(void* ptr, void* event);
void QWizardPage_MouseReleaseEventDefault(void* ptr, void* event);
void QWizardPage_ResizeEvent(void* ptr, void* event);
void QWizardPage_ResizeEventDefault(void* ptr, void* event);
void QWizardPage_TabletEvent(void* ptr, void* event);
void QWizardPage_TabletEventDefault(void* ptr, void* event);
void QWizardPage_WheelEvent(void* ptr, void* event);
void QWizardPage_WheelEventDefault(void* ptr, void* event);
void QWizardPage_TimerEvent(void* ptr, void* event);
void QWizardPage_TimerEventDefault(void* ptr, void* event);
void QWizardPage_ChildEvent(void* ptr, void* event);
void QWizardPage_ChildEventDefault(void* ptr, void* event);
void QWizardPage_CustomEvent(void* ptr, void* event);
void QWizardPage_CustomEventDefault(void* ptr, void* event);

#ifdef __cplusplus
}
#endif

#endif