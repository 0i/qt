########################################			FUNCTIONS			########################################
&{calculateRoute QGeoRoutingManager::calculateRoute commendable public /work/build/qt5_workdir/w/s/qtlocation/src/location/maps/qgeoroutingmanager.h non plain false false  QGeoRouteReply * QGeoRouteReply * calculateRoute(const QGeoRouteRequest &request) [0xc822346220] }
&{error QGeoRoutingManager::error commendable public /work/build/qt5_workdir/w/s/qtlocation/src/location/maps/qgeoroutingmanager.h non signal false false  void void error(QGeoRouteReply *reply, QGeoRouteReply::Error error, QString errorString) [0xc822346640 0xc822346740 0xc8223468e0] }
&{finished QGeoRoutingManager::finished commendable public /work/build/qt5_workdir/w/s/qtlocation/src/location/maps/qgeoroutingmanager.h non signal false false  void void finished(QGeoRouteReply *reply) [0xc822346c80] }
&{locale QGeoRoutingManager::locale commendable unsupported_cppOutput /work/build/qt5_workdir/w/s/qtlocation/src/location/maps/qgeoroutingmanager.h non plain false false  QLocale QLocale locale() const [] }
&{managerName QGeoRoutingManager::managerName commendable public /work/build/qt5_workdir/w/s/qtlocation/src/location/maps/qgeoroutingmanager.h non plain false false  QString QString managerName() const [] }
&{managerVersion QGeoRoutingManager::managerVersion commendable public /work/build/qt5_workdir/w/s/qtlocation/src/location/maps/qgeoroutingmanager.h non plain false false  int int managerVersion() const [] }
&{measurementSystem QGeoRoutingManager::measurementSystem commendable public /work/build/qt5_workdir/w/s/qtlocation/src/location/maps/qgeoroutingmanager.h non plain false false  QLocale::MeasurementSystem QLocale::MeasurementSystem measurementSystem() const [] }
&{setLocale QGeoRoutingManager::setLocale commendable public /work/build/qt5_workdir/w/s/qtlocation/src/location/maps/qgeoroutingmanager.h non plain false false  void void setLocale(const QLocale &locale) [0xc822347a20] }
&{setMeasurementSystem QGeoRoutingManager::setMeasurementSystem commendable public /work/build/qt5_workdir/w/s/qtlocation/src/location/maps/qgeoroutingmanager.h non plain false false  void void setMeasurementSystem(QLocale::MeasurementSystem system) [0xc822347da0] }
&{supportedFeatureTypes QGeoRoutingManager::supportedFeatureTypes commendable public /work/build/qt5_workdir/w/s/qtlocation/src/location/maps/qgeoroutingmanager.h non plain false false  QGeoRouteRequest::FeatureTypes QGeoRouteRequest::FeatureTypes supportedFeatureTypes() const [] }
&{supportedFeatureWeights QGeoRoutingManager::supportedFeatureWeights commendable public /work/build/qt5_workdir/w/s/qtlocation/src/location/maps/qgeoroutingmanager.h non plain false false  QGeoRouteRequest::FeatureWeights QGeoRouteRequest::FeatureWeights supportedFeatureWeights() const [] }
&{supportedManeuverDetails QGeoRoutingManager::supportedManeuverDetails commendable public /work/build/qt5_workdir/w/s/qtlocation/src/location/maps/qgeoroutingmanager.h non plain false false  QGeoRouteRequest::ManeuverDetails QGeoRouteRequest::ManeuverDetails supportedManeuverDetails() const [] }
&{supportedRouteOptimizations QGeoRoutingManager::supportedRouteOptimizations commendable public /work/build/qt5_workdir/w/s/qtlocation/src/location/maps/qgeoroutingmanager.h non plain false false  QGeoRouteRequest::RouteOptimizations QGeoRouteRequest::RouteOptimizations supportedRouteOptimizations() const [] }
&{supportedSegmentDetails QGeoRoutingManager::supportedSegmentDetails commendable public /work/build/qt5_workdir/w/s/qtlocation/src/location/maps/qgeoroutingmanager.h non plain false false  QGeoRouteRequest::SegmentDetails QGeoRouteRequest::SegmentDetails supportedSegmentDetails() const [] }
&{supportedTravelModes QGeoRoutingManager::supportedTravelModes commendable public /work/build/qt5_workdir/w/s/qtlocation/src/location/maps/qgeoroutingmanager.h non plain false false  QGeoRouteRequest::TravelModes QGeoRouteRequest::TravelModes supportedTravelModes() const [] }
&{updateRoute QGeoRoutingManager::updateRoute commendable public /work/build/qt5_workdir/w/s/qtlocation/src/location/maps/qgeoroutingmanager.h non plain false false  QGeoRouteReply * QGeoRouteReply * updateRoute(const QGeoRoute &route, const QGeoCoordinate &position) [0xc8216076a0 0xc821607960] }
&{~QGeoRoutingManager QGeoRoutingManager::~QGeoRoutingManager commendable public /work/build/qt5_workdir/w/s/qtlocation/src/location/maps/qgeoroutingmanager.h non destructor false false   ~QGeoRoutingManager() [] }
########################################			ENUMS			########################################
