########################################			FUNCTIONS			########################################
&{category QPlaceManager::category commendable public /work/build/qt5_workdir/w/s/qtlocation/src/location/places/qplacemanager.h non plain false false  QPlaceCategory QPlaceCategory category(const QString &categoryId) const [0xc8221aeba0] }
&{categoryAdded QPlaceManager::categoryAdded commendable public /work/build/qt5_workdir/w/s/qtlocation/src/location/places/qplacemanager.h non signal false false  void void categoryAdded(const QPlaceCategory &category, const QString &parentId) [0xc8221af0a0 0xc8221af2c0] }
&{categoryRemoved QPlaceManager::categoryRemoved commendable public /work/build/qt5_workdir/w/s/qtlocation/src/location/places/qplacemanager.h non signal false false  void void categoryRemoved(const QString &categoryId, const QString &parentId) [0xc8221af6c0 0xc8221af7e0] }
&{categoryUpdated QPlaceManager::categoryUpdated commendable public /work/build/qt5_workdir/w/s/qtlocation/src/location/places/qplacemanager.h non signal false false  void void categoryUpdated(const QPlaceCategory &category, const QString &parentId) [0xc8221afc80 0xc8221afe00] }
&{childCategories QPlaceManager::childCategories commendable public /work/build/qt5_workdir/w/s/qtlocation/src/location/places/qplacemanager.h non plain false false  QList<QPlaceCategory> QList<QPlaceCategory> childCategories(const QString &parentId) const [0xc8221bc3a0] }
&{childCategoryIds QPlaceManager::childCategoryIds commendable public /work/build/qt5_workdir/w/s/qtlocation/src/location/places/qplacemanager.h non plain false false  QStringList QStringList childCategoryIds(const QString &parentId) const [0xc8221bc7e0] }
&{compatiblePlace QPlaceManager::compatiblePlace commendable public /work/build/qt5_workdir/w/s/qtlocation/src/location/places/qplacemanager.h non plain false false  QPlace QPlace compatiblePlace(const QPlace &original) [0xc8221bcb00] }
&{dataChanged QPlaceManager::dataChanged commendable public /work/build/qt5_workdir/w/s/qtlocation/src/location/places/qplacemanager.h non signal false false  void void dataChanged() [] }
&{error QPlaceManager::error commendable public /work/build/qt5_workdir/w/s/qtlocation/src/location/places/qplacemanager.h non signal false false  void void error(QPlaceReply *reply, QPlaceReply::Error error, const QString &errorString) [0xc8221bd280 0xc8221bd3e0 0xc8221bd580] }
&{finished QPlaceManager::finished commendable public /work/build/qt5_workdir/w/s/qtlocation/src/location/places/qplacemanager.h non signal false false  void void finished(QPlaceReply *reply) [0xc8221bd960] }
&{getPlaceContent QPlaceManager::getPlaceContent commendable public /work/build/qt5_workdir/w/s/qtlocation/src/location/places/qplacemanager.h non plain false false  QPlaceContentReply * QPlaceContentReply * getPlaceContent(const QPlaceContentRequest &request) const [0xc8221bde20] }
&{getPlaceDetails QPlaceManager::getPlaceDetails commendable public /work/build/qt5_workdir/w/s/qtlocation/src/location/places/qplacemanager.h non plain false false  QPlaceDetailsReply * QPlaceDetailsReply * getPlaceDetails(const QString &placeId) const [0xc822a0e400] }
&{initializeCategories QPlaceManager::initializeCategories commendable public /work/build/qt5_workdir/w/s/qtlocation/src/location/places/qplacemanager.h non plain false false  QPlaceReply * QPlaceReply * initializeCategories() [] }
&{locales QPlaceManager::locales commendable public /work/build/qt5_workdir/w/s/qtlocation/src/location/places/qplacemanager.h non plain false false  QList<QLocale> QList<QLocale> locales() const [] }
&{managerName QPlaceManager::managerName commendable public /work/build/qt5_workdir/w/s/qtlocation/src/location/places/qplacemanager.h non plain false false  QString QString managerName() const [] }
&{managerVersion QPlaceManager::managerVersion commendable public /work/build/qt5_workdir/w/s/qtlocation/src/location/places/qplacemanager.h non plain false false  int int managerVersion() const [] }
&{matchingPlaces QPlaceManager::matchingPlaces commendable public /work/build/qt5_workdir/w/s/qtlocation/src/location/places/qplacemanager.h non plain false false  QPlaceMatchReply * QPlaceMatchReply * matchingPlaces(const QPlaceMatchRequest &request) const [0xc822a0f240] }
&{parentCategoryId QPlaceManager::parentCategoryId commendable public /work/build/qt5_workdir/w/s/qtlocation/src/location/places/qplacemanager.h non plain false false  QString QString parentCategoryId(const QString &categoryId) const [0xc822a0f640] }
&{placeAdded QPlaceManager::placeAdded commendable public /work/build/qt5_workdir/w/s/qtlocation/src/location/places/qplacemanager.h non signal false false  void void placeAdded(const QString &placeId) [0xc822a0f9e0] }
&{placeRemoved QPlaceManager::placeRemoved commendable public /work/build/qt5_workdir/w/s/qtlocation/src/location/places/qplacemanager.h non signal false false  void void placeRemoved(const QString &placeId) [0xc822a0fc20] }
&{placeUpdated QPlaceManager::placeUpdated commendable public /work/build/qt5_workdir/w/s/qtlocation/src/location/places/qplacemanager.h non signal false false  void void placeUpdated(const QString &placeId) [0xc822a0fea0] }
&{removeCategory QPlaceManager::removeCategory commendable public /work/build/qt5_workdir/w/s/qtlocation/src/location/places/qplacemanager.h non plain false false  QPlaceIdReply * QPlaceIdReply * removeCategory(const QString &categoryId) [0xc822a20160] }
&{removePlace QPlaceManager::removePlace commendable public /work/build/qt5_workdir/w/s/qtlocation/src/location/places/qplacemanager.h non plain false false  QPlaceIdReply * QPlaceIdReply * removePlace(const QString &placeId) [0xc822a203a0] }
&{saveCategory QPlaceManager::saveCategory commendable public /work/build/qt5_workdir/w/s/qtlocation/src/location/places/qplacemanager.h non plain false false  QPlaceIdReply * QPlaceIdReply * saveCategory(const QPlaceCategory &category, const QString &parentId) [0xc822a206c0 0xc822a20800] }
&{savePlace QPlaceManager::savePlace commendable public /work/build/qt5_workdir/w/s/qtlocation/src/location/places/qplacemanager.h non plain false false  QPlaceIdReply * QPlaceIdReply * savePlace(const QPlace &place) [0xc822a20a60] }
&{search QPlaceManager::search commendable public /work/build/qt5_workdir/w/s/qtlocation/src/location/places/qplacemanager.h non plain false false  QPlaceSearchReply * QPlaceSearchReply * search(const QPlaceSearchRequest &request) const [0xc822a20f00] }
&{searchSuggestions QPlaceManager::searchSuggestions commendable public /work/build/qt5_workdir/w/s/qtlocation/src/location/places/qplacemanager.h non plain false false  QPlaceSearchSuggestionReply * QPlaceSearchSuggestionReply * searchSuggestions(const QPlaceSearchRequest &request) const [0xc822a21640] }
&{setLocale QPlaceManager::setLocale commendable public /work/build/qt5_workdir/w/s/qtlocation/src/location/places/qplacemanager.h non plain false false  void void setLocale(const QLocale &locale) [0xc822a21a20] }
&{setLocales QPlaceManager::setLocales commendable public /work/build/qt5_workdir/w/s/qtlocation/src/location/places/qplacemanager.h non plain false false  void void setLocales(const QList<QLocale> &locales) [0xc822a21d60] }
&{~QPlaceManager QPlaceManager::~QPlaceManager commendable public /work/build/qt5_workdir/w/s/qtlocation/src/location/places/qplacemanager.h non destructor false false   ~QPlaceManager() [] }
########################################			ENUMS			########################################
