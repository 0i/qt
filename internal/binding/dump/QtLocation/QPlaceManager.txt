########################################			FUNCTIONS			########################################
&{category QPlaceManager::category commendable public /work/build/qt5_workdir/w/s/qtlocation/src/location/places/qplacemanager.h non plain false false  QPlaceCategory QPlaceCategory category(const QString &categoryId) const [0xc820333a20] }
&{categoryAdded QPlaceManager::categoryAdded commendable public /work/build/qt5_workdir/w/s/qtlocation/src/location/places/qplacemanager.h non signal false false  void void categoryAdded(const QPlaceCategory &category, const QString &parentId) [0xc820333f80 0xc8203242c0] }
&{categoryRemoved QPlaceManager::categoryRemoved commendable public /work/build/qt5_workdir/w/s/qtlocation/src/location/places/qplacemanager.h non signal false false  void void categoryRemoved(const QString &categoryId, const QString &parentId) [0xc820324860 0xc820324960] }
&{categoryUpdated QPlaceManager::categoryUpdated commendable public /work/build/qt5_workdir/w/s/qtlocation/src/location/places/qplacemanager.h non signal false false  void void categoryUpdated(const QPlaceCategory &category, const QString &parentId) [0xc820324fc0 0xc8203250a0] }
&{childCategories QPlaceManager::childCategories commendable public /work/build/qt5_workdir/w/s/qtlocation/src/location/places/qplacemanager.h non plain false false  QList<QPlaceCategory> QList<QPlaceCategory> childCategories(const QString &parentId) const [0xc8203258c0] }
&{childCategoryIds QPlaceManager::childCategoryIds commendable public /work/build/qt5_workdir/w/s/qtlocation/src/location/places/qplacemanager.h non plain false false  QStringList QStringList childCategoryIds(const QString &parentId) const [0xc820325e80] }
&{compatiblePlace QPlaceManager::compatiblePlace commendable public /work/build/qt5_workdir/w/s/qtlocation/src/location/places/qplacemanager.h non plain false false  QPlace QPlace compatiblePlace(const QPlace &original) [0xc826bc81e0] }
&{dataChanged QPlaceManager::dataChanged commendable public /work/build/qt5_workdir/w/s/qtlocation/src/location/places/qplacemanager.h non signal false false  void void dataChanged() [] }
&{error QPlaceManager::error commendable public /work/build/qt5_workdir/w/s/qtlocation/src/location/places/qplacemanager.h non signal false false  void void error(QPlaceReply *reply, QPlaceReply::Error error, const QString &errorString) [0xc826bc8860 0xc826bc8920 0xc826bc8aa0] }
&{finished QPlaceManager::finished commendable public /work/build/qt5_workdir/w/s/qtlocation/src/location/places/qplacemanager.h non signal false false  void void finished(QPlaceReply *reply) [0xc826bc8e40] }
&{getPlaceContent QPlaceManager::getPlaceContent commendable public /work/build/qt5_workdir/w/s/qtlocation/src/location/places/qplacemanager.h non plain false false  QPlaceContentReply * QPlaceContentReply * getPlaceContent(const QPlaceContentRequest &request) const [0xc826bc9200] }
&{getPlaceDetails QPlaceManager::getPlaceDetails commendable public /work/build/qt5_workdir/w/s/qtlocation/src/location/places/qplacemanager.h non plain false false  QPlaceDetailsReply * QPlaceDetailsReply * getPlaceDetails(const QString &placeId) const [0xc826bc96c0] }
&{initializeCategories QPlaceManager::initializeCategories commendable public /work/build/qt5_workdir/w/s/qtlocation/src/location/places/qplacemanager.h non plain false false  QPlaceReply * QPlaceReply * initializeCategories() [] }
&{locales QPlaceManager::locales commendable public /work/build/qt5_workdir/w/s/qtlocation/src/location/places/qplacemanager.h non plain false false  QList<QLocale> QList<QLocale> locales() const [] }
&{managerName QPlaceManager::managerName commendable public /work/build/qt5_workdir/w/s/qtlocation/src/location/places/qplacemanager.h non plain false false  QString QString managerName() const [] }
&{managerVersion QPlaceManager::managerVersion commendable public /work/build/qt5_workdir/w/s/qtlocation/src/location/places/qplacemanager.h non plain false false  int int managerVersion() const [] }
&{matchingPlaces QPlaceManager::matchingPlaces commendable public /work/build/qt5_workdir/w/s/qtlocation/src/location/places/qplacemanager.h non plain false false  QPlaceMatchReply * QPlaceMatchReply * matchingPlaces(const QPlaceMatchRequest &request) const [0xc8203209e0] }
&{parentCategoryId QPlaceManager::parentCategoryId commendable public /work/build/qt5_workdir/w/s/qtlocation/src/location/places/qplacemanager.h non plain false false  QString QString parentCategoryId(const QString &categoryId) const [0xc8203211a0] }
&{placeAdded QPlaceManager::placeAdded commendable public /work/build/qt5_workdir/w/s/qtlocation/src/location/places/qplacemanager.h non signal false false  void void placeAdded(const QString &placeId) [0xc820321800] }
&{placeRemoved QPlaceManager::placeRemoved commendable public /work/build/qt5_workdir/w/s/qtlocation/src/location/places/qplacemanager.h non signal false false  void void placeRemoved(const QString &placeId) [0xc820321ea0] }
&{placeUpdated QPlaceManager::placeUpdated commendable public /work/build/qt5_workdir/w/s/qtlocation/src/location/places/qplacemanager.h non signal false false  void void placeUpdated(const QString &placeId) [0xc82030e440] }
&{removeCategory QPlaceManager::removeCategory commendable public /work/build/qt5_workdir/w/s/qtlocation/src/location/places/qplacemanager.h non plain false false  QPlaceIdReply * QPlaceIdReply * removeCategory(const QString &categoryId) [0xc82030ea80] }
&{removePlace QPlaceManager::removePlace commendable public /work/build/qt5_workdir/w/s/qtlocation/src/location/places/qplacemanager.h non plain false false  QPlaceIdReply * QPlaceIdReply * removePlace(const QString &placeId) [0xc82030f180] }
&{saveCategory QPlaceManager::saveCategory commendable public /work/build/qt5_workdir/w/s/qtlocation/src/location/places/qplacemanager.h non plain false false  QPlaceIdReply * QPlaceIdReply * saveCategory(const QPlaceCategory &category, const QString &parentId) [0xc82030f780 0xc82030fa00] }
&{savePlace QPlaceManager::savePlace commendable public /work/build/qt5_workdir/w/s/qtlocation/src/location/places/qplacemanager.h non plain false false  QPlaceIdReply * QPlaceIdReply * savePlace(const QPlace &place) [0xc82030fe20] }
&{search QPlaceManager::search commendable public /work/build/qt5_workdir/w/s/qtlocation/src/location/places/qplacemanager.h non plain false false  QPlaceSearchReply * QPlaceSearchReply * search(const QPlaceSearchRequest &request) const [0xc8202f8480] }
&{searchSuggestions QPlaceManager::searchSuggestions commendable public /work/build/qt5_workdir/w/s/qtlocation/src/location/places/qplacemanager.h non plain false false  QPlaceSearchSuggestionReply * QPlaceSearchSuggestionReply * searchSuggestions(const QPlaceSearchRequest &request) const [0xc8202f8ea0] }
&{setLocale QPlaceManager::setLocale commendable public /work/build/qt5_workdir/w/s/qtlocation/src/location/places/qplacemanager.h non plain false false  void void setLocale(const QLocale &locale) [0xc8202f9680] }
&{setLocales QPlaceManager::setLocales commendable public /work/build/qt5_workdir/w/s/qtlocation/src/location/places/qplacemanager.h non plain false false  void void setLocales(const QList<QLocale> &locales) [0xc8202f9da0] }
&{~QPlaceManager QPlaceManager::~QPlaceManager commendable public /work/build/qt5_workdir/w/s/qtlocation/src/location/places/qplacemanager.h non destructor false false   ~QPlaceManager() [] }
########################################			ENUMS			########################################
