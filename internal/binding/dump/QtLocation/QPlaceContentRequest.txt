########################################			FUNCTIONS			########################################
&{QPlaceContentRequest QPlaceContentRequest::QPlaceContentRequest commendable public /work/build/qt5_workdir/w/s/qtlocation/src/location/places/qplacecontentrequest.h non constructor false false   QPlaceContentRequest() [] }
&{QPlaceContentRequest QPlaceContentRequest::QPlaceContentRequest commendable public /work/build/qt5_workdir/w/s/qtlocation/src/location/places/qplacecontentrequest.h non constructor false true 2  QPlaceContentRequest(const QPlaceContentRequest &other) [0xc8227e81e0] }
&{clear QPlaceContentRequest::clear commendable public /work/build/qt5_workdir/w/s/qtlocation/src/location/places/qplacecontentrequest.h non plain false false  void void clear() [] }
&{contentContext QPlaceContentRequest::contentContext commendable public /work/build/qt5_workdir/w/s/qtlocation/src/location/places/qplacecontentrequest.h non plain false false  QVariant QVariant contentContext() const [] }
&{contentType QPlaceContentRequest::contentType commendable public /work/build/qt5_workdir/w/s/qtlocation/src/location/places/qplacecontentrequest.h non plain false false  QPlaceContent::Type QPlaceContent::Type contentType() const [] }
&{limit QPlaceContentRequest::limit commendable public /work/build/qt5_workdir/w/s/qtlocation/src/location/places/qplacecontentrequest.h non plain false false  int int limit() const [] }
&{operator!= QPlaceContentRequest::operator!= commendable public /work/build/qt5_workdir/w/s/qtlocation/src/location/places/qplacecontentrequest.h non plain false false  bool bool operator!=(const QPlaceContentRequest &other) const [0xc8227e8fa0] }
&{operator= QPlaceContentRequest::operator= commendable public /work/build/qt5_workdir/w/s/qtlocation/src/location/places/qplacecontentrequest.h non plain false false  QPlaceContentRequest & QPlaceContentRequest & operator=(const QPlaceContentRequest &other) [0xc8227e9560] }
&{operator== QPlaceContentRequest::operator== commendable public /work/build/qt5_workdir/w/s/qtlocation/src/location/places/qplacecontentrequest.h non plain false false  bool bool operator==(const QPlaceContentRequest &other) const [0xc8227e9a40] }
&{placeId QPlaceContentRequest::placeId commendable public /work/build/qt5_workdir/w/s/qtlocation/src/location/places/qplacecontentrequest.h non plain false false  QString QString placeId() const [] }
&{setContentContext QPlaceContentRequest::setContentContext commendable public /work/build/qt5_workdir/w/s/qtlocation/src/location/places/qplacecontentrequest.h non plain false false  void void setContentContext(const QVariant &context) [0xc8226ec2c0] }
&{setContentType QPlaceContentRequest::setContentType commendable public /work/build/qt5_workdir/w/s/qtlocation/src/location/places/qplacecontentrequest.h non plain false false  void void setContentType(QPlaceContent::Type type) [0xc8226ec620] }
&{setLimit QPlaceContentRequest::setLimit commendable public /work/build/qt5_workdir/w/s/qtlocation/src/location/places/qplacecontentrequest.h non plain false false  void void setLimit(int limit) [0xc8226ecbe0] }
&{setPlaceId QPlaceContentRequest::setPlaceId commendable public /work/build/qt5_workdir/w/s/qtlocation/src/location/places/qplacecontentrequest.h non plain false false  void void setPlaceId(const QString &identifier) [0xc8226ecfc0] }
&{~QPlaceContentRequest QPlaceContentRequest::~QPlaceContentRequest commendable public /work/build/qt5_workdir/w/s/qtlocation/src/location/places/qplacecontentrequest.h non destructor false false   ~QPlaceContentRequest() [] }
########################################			ENUMS			########################################
