########################################			FUNCTIONS			########################################
&{captureMode QCamera::captureMode commendable public /work/build/qt5_workdir/w/s/qtmultimedia/src/multimedia/camera/qcamera.cpp non plain false false  CaptureModes CaptureModes captureMode() const [] }
&{searchAndLock QCamera::searchAndLock commendable public /work/build/qt5_workdir/w/s/qtmultimedia/src/multimedia/camera/qcamera.cpp non slot false true 2 void void searchAndLock(QCamera::LockTypes locks) [0xc8217b9b80] }
&{setCaptureMode QCamera::setCaptureMode commendable public /work/build/qt5_workdir/w/s/qtmultimedia/src/multimedia/camera/qcamera.cpp non slot false false  void void setCaptureMode(QCamera::CaptureModes mode) [0xc8217b9fc0] }
&{state QCamera::state commendable unsupported_isBlocked /work/build/qt5_workdir/w/s/qtmultimedia/src/multimedia/camera/qcamera.cpp non plain false false  State State state() const [] }
&{status QCamera::status commendable public /work/build/qt5_workdir/w/s/qtmultimedia/src/multimedia/camera/qcamera.cpp non plain false false  Status Status status() const [] }
&{QCamera QCamera::QCamera commendable public /work/build/qt5_workdir/w/s/qtmultimedia/src/multimedia/camera/qcamera.h non constructor false true 4  QCamera(QCamera::Position position, QObject *parent) [0xc821781bc0 0xc821781d20] }
&{QCamera QCamera::QCamera commendable public /work/build/qt5_workdir/w/s/qtmultimedia/src/multimedia/camera/qcamera.h non constructor false false   QCamera(QObject *parent) [0xc82176c020] }
&{QCamera QCamera::QCamera commendable public /work/build/qt5_workdir/w/s/qtmultimedia/src/multimedia/camera/qcamera.h non constructor false true 2  QCamera(const QByteArray &deviceName, QObject *parent) [0xc82176c3a0 0xc82176c560] }
&{QCamera QCamera::QCamera commendable public /work/build/qt5_workdir/w/s/qtmultimedia/src/multimedia/camera/qcamera.h non constructor false true 3  QCamera(const QCameraInfo &cameraInfo, QObject *parent) [0xc82176c820 0xc82176c980] }
&{availability QCamera::availability commendable unsupported_goEnum /work/build/qt5_workdir/w/s/qtmultimedia/src/multimedia/camera/qcamera.h impure plain false false  QMultimedia::AvailabilityStatus QMultimedia::AvailabilityStatus availability() const [] }
&{captureModeChanged QCamera::captureModeChanged commendable public /work/build/qt5_workdir/w/s/qtmultimedia/src/multimedia/camera/qcamera.h non signal false false  void void captureModeChanged(QCamera::CaptureModes mode) [0xc82176d8e0] }
&{error QCamera::error commendable public /work/build/qt5_workdir/w/s/qtmultimedia/src/multimedia/camera/qcamera.h non signal false true 2 void void error(QCamera::Error value) [0xc821756320] }
&{error QCamera::error commendable public /work/build/qt5_workdir/w/s/qtmultimedia/src/multimedia/camera/qcamera.h non plain false false  Error Error error() const [] }
&{errorString QCamera::errorString commendable public /work/build/qt5_workdir/w/s/qtmultimedia/src/multimedia/camera/qcamera.h non plain false false  QString QString errorString() const [] }
&{exposure QCamera::exposure commendable public /work/build/qt5_workdir/w/s/qtmultimedia/src/multimedia/camera/qcamera.h non plain false false  QCameraExposure * QCameraExposure * exposure() const [] }
&{focus QCamera::focus commendable public /work/build/qt5_workdir/w/s/qtmultimedia/src/multimedia/camera/qcamera.h non plain false false  QCameraFocus * QCameraFocus * focus() const [] }
&{imageProcessing QCamera::imageProcessing commendable public /work/build/qt5_workdir/w/s/qtmultimedia/src/multimedia/camera/qcamera.h non plain false false  QCameraImageProcessing * QCameraImageProcessing * imageProcessing() const [] }
&{isCaptureModeSupported QCamera::isCaptureModeSupported commendable public /work/build/qt5_workdir/w/s/qtmultimedia/src/multimedia/camera/qcamera.h non plain false false  bool bool isCaptureModeSupported(CaptureModes mode) const [0xc821757480] }
&{load QCamera::load commendable public /work/build/qt5_workdir/w/s/qtmultimedia/src/multimedia/camera/qcamera.h non slot false false  void void load() [] }
&{lockFailed QCamera::lockFailed commendable public /work/build/qt5_workdir/w/s/qtmultimedia/src/multimedia/camera/qcamera.h non signal false false  void void lockFailed() [] }
&{lockStatus QCamera::lockStatus commendable public /work/build/qt5_workdir/w/s/qtmultimedia/src/multimedia/camera/qcamera.h non plain false false  QCamera::LockStatus QCamera::LockStatus lockStatus() const [] }
&{lockStatus QCamera::lockStatus commendable public /work/build/qt5_workdir/w/s/qtmultimedia/src/multimedia/camera/qcamera.h non plain false true 2 QCamera::LockStatus QCamera::LockStatus lockStatus(QCamera::LockType lockType) const [0xc8217400a0] }
&{lockStatusChanged QCamera::lockStatusChanged commendable public /work/build/qt5_workdir/w/s/qtmultimedia/src/multimedia/camera/qcamera.h non signal false false  void void lockStatusChanged(QCamera::LockStatus status, QCamera::LockChangeReason reason) [0xc821740640 0xc821740880] }
&{lockStatusChanged QCamera::lockStatusChanged commendable public /work/build/qt5_workdir/w/s/qtmultimedia/src/multimedia/camera/qcamera.h non signal false true 2 void void lockStatusChanged(QCamera::LockType lock, QCamera::LockStatus status, QCamera::LockChangeReason reason) [0xc821740da0 0xc821741060 0xc8217411a0] }
&{locked QCamera::locked commendable public /work/build/qt5_workdir/w/s/qtmultimedia/src/multimedia/camera/qcamera.h non signal false false  void void locked() [] }
&{requestedLocks QCamera::requestedLocks commendable public /work/build/qt5_workdir/w/s/qtmultimedia/src/multimedia/camera/qcamera.h non plain false false  QCamera::LockTypes QCamera::LockTypes requestedLocks() const [] }
&{searchAndLock QCamera::searchAndLock commendable public /work/build/qt5_workdir/w/s/qtmultimedia/src/multimedia/camera/qcamera.h non slot false false  void void searchAndLock() [] }
&{setViewfinder QCamera::setViewfinder commendable public /work/build/qt5_workdir/w/s/qtmultimedia/src/multimedia/camera/qcamera.h non plain false true 3 void void setViewfinder(QAbstractVideoSurface *surface) [0xc821741e40] }
&{setViewfinder QCamera::setViewfinder commendable unsupported_goInput /work/build/qt5_workdir/w/s/qtmultimedia/src/multimedia/camera/qcamera.h non plain false true 2 void void setViewfinder(QGraphicsVideoItem *viewfinder) [0xc82172e420] }
&{setViewfinder QCamera::setViewfinder commendable unsupported_goInput /work/build/qt5_workdir/w/s/qtmultimedia/src/multimedia/camera/qcamera.h non plain false false  void void setViewfinder(QVideoWidget *viewfinder) [0xc82172e860] }
&{setViewfinderSettings QCamera::setViewfinderSettings commendable public /work/build/qt5_workdir/w/s/qtmultimedia/src/multimedia/camera/qcamera.h non plain false false  void void setViewfinderSettings(const QCameraViewfinderSettings &settings) [0xc82172ed20] }
&{start QCamera::start commendable public /work/build/qt5_workdir/w/s/qtmultimedia/src/multimedia/camera/qcamera.h non slot false false  void void start() [] }
&{stateChanged QCamera::stateChanged commendable public /work/build/qt5_workdir/w/s/qtmultimedia/src/multimedia/camera/qcamera.h non signal false false  void void stateChanged(QCamera::State state) [0xc82172f280] }
&{statusChanged QCamera::statusChanged commendable public /work/build/qt5_workdir/w/s/qtmultimedia/src/multimedia/camera/qcamera.h non signal false false  void void statusChanged(QCamera::Status status) [0xc82172f6a0] }
&{stop QCamera::stop commendable public /work/build/qt5_workdir/w/s/qtmultimedia/src/multimedia/camera/qcamera.h non slot false false  void void stop() [] }
&{supportedLocks QCamera::supportedLocks commendable public /work/build/qt5_workdir/w/s/qtmultimedia/src/multimedia/camera/qcamera.h non plain false false  QCamera::LockTypes QCamera::LockTypes supportedLocks() const [] }
&{supportedViewfinderFrameRateRanges QCamera::supportedViewfinderFrameRateRanges commendable unsupported_GoBodyOutputFailed /work/build/qt5_workdir/w/s/qtmultimedia/src/multimedia/camera/qcamera.h non plain false false  QList<FrameRateRange> QList<FrameRateRange> supportedViewfinderFrameRateRanges(const QCameraViewfinderSettings &settings) const [0xc82172fea0] }
&{supportedViewfinderPixelFormats QCamera::supportedViewfinderPixelFormats commendable unsupported_goEnum /work/build/qt5_workdir/w/s/qtmultimedia/src/multimedia/camera/qcamera.h non plain false false  QList<QVideoFrame::PixelFormat> QList<QVideoFrame::PixelFormat> supportedViewfinderPixelFormats(const QCameraViewfinderSettings &settings) const [0xc822cfe1c0] }
&{supportedViewfinderResolutions QCamera::supportedViewfinderResolutions commendable unsupported_GoBodyOutputFailed /work/build/qt5_workdir/w/s/qtmultimedia/src/multimedia/camera/qcamera.h non plain false false  QList<QSize> QList<QSize> supportedViewfinderResolutions(const QCameraViewfinderSettings &settings) const [0xc822cfe3e0] }
&{supportedViewfinderSettings QCamera::supportedViewfinderSettings commendable unsupported_GoBodyOutputFailed /work/build/qt5_workdir/w/s/qtmultimedia/src/multimedia/camera/qcamera.h non plain false false  QList<QCameraViewfinderSettings> QList<QCameraViewfinderSettings> supportedViewfinderSettings(const QCameraViewfinderSettings &settings) const [0xc822cfe700] }
&{unload QCamera::unload commendable public /work/build/qt5_workdir/w/s/qtmultimedia/src/multimedia/camera/qcamera.h non slot false false  void void unload() [] }
&{unlock QCamera::unlock commendable public /work/build/qt5_workdir/w/s/qtmultimedia/src/multimedia/camera/qcamera.h non slot false false  void void unlock() [] }
&{unlock QCamera::unlock commendable public /work/build/qt5_workdir/w/s/qtmultimedia/src/multimedia/camera/qcamera.h non slot false true 2 void void unlock(QCamera::LockTypes locks) [0xc822cfea00] }
&{viewfinderSettings QCamera::viewfinderSettings commendable unsupported_cppOutput /work/build/qt5_workdir/w/s/qtmultimedia/src/multimedia/camera/qcamera.h non plain false false  QCameraViewfinderSettings QCameraViewfinderSettings viewfinderSettings() const [] }
&{~QCamera QCamera::~QCamera commendable public /work/build/qt5_workdir/w/s/qtmultimedia/src/multimedia/camera/qcamera.h non destructor false false   ~QCamera() [] }
########################################			ENUMS			########################################
&{CaptureMode QCamera::CaptureMode commendable public QCamera::CaptureModes [0xc8217a3520 0xc8217a3740 0xc8217a3940] false}
&{Error QCamera::Error commendable public  [0xc8217a3c60 0xc8217a3dc0 0xc8217a3f20 0xc8217920e0 0xc821792380] false}
&{LockChangeReason QCamera::LockChangeReason commendable public  [0xc8217927a0 0xc8217928e0 0xc8217929c0 0xc821792b20 0xc821792ca0] false}
&{LockStatus QCamera::LockStatus commendable public  [0xc8217931a0 0xc821793320 0xc8217933e0] false}
&{LockType QCamera::LockType commendable public QCamera::LockTypes [0xc821793980 0xc821793a80 0xc821793ba0 0xc821793d20] false}
&{Position QCamera::Position commendable public  [0xc821780120 0xc8217802e0 0xc821780420] false}
&{State QCamera::State commendable public  [0xc8217806e0 0xc8217808e0 0xc8217809a0] false}
&{Status QCamera::Status commendable public  [0xc821780cc0 0xc821780e60 0xc821780f60 0xc821781060 0xc8217811e0 0xc821781280 0xc8217813a0 0xc8217814a0 0xc8217815a0] false}
