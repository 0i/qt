########################################			FUNCTIONS			########################################
&{alignment QLineEdit::alignment commendable public /work/build/qt5_workdir/w/s/qtbase/src/widgets/widgets/qlineedit.cpp non plain false false  Qt::Alignment Qt::Alignment alignment() const [] }
&{cursorMoveStyle QLineEdit::cursorMoveStyle commendable public /work/build/qt5_workdir/w/s/qtbase/src/widgets/widgets/qlineedit.cpp non plain false false  Qt::CursorMoveStyle Qt::CursorMoveStyle cursorMoveStyle() const [] }
&{cursorPosition QLineEdit::cursorPosition commendable public /work/build/qt5_workdir/w/s/qtbase/src/widgets/widgets/qlineedit.cpp non plain false false  int int cursorPosition() const [] }
&{displayText QLineEdit::displayText commendable public /work/build/qt5_workdir/w/s/qtbase/src/widgets/widgets/qlineedit.cpp non plain false false  QString QString displayText() const [] }
&{dragEnabled QLineEdit::dragEnabled commendable public /work/build/qt5_workdir/w/s/qtbase/src/widgets/widgets/qlineedit.cpp non plain false false  bool bool dragEnabled() const [] }
&{echoMode QLineEdit::echoMode commendable public /work/build/qt5_workdir/w/s/qtbase/src/widgets/widgets/qlineedit.cpp non plain false false  EchoMode EchoMode echoMode() const [] }
&{hasAcceptableInput QLineEdit::hasAcceptableInput commendable public /work/build/qt5_workdir/w/s/qtbase/src/widgets/widgets/qlineedit.cpp non plain false false  bool bool hasAcceptableInput() const [] }
&{hasFrame QLineEdit::hasFrame commendable public /work/build/qt5_workdir/w/s/qtbase/src/widgets/widgets/qlineedit.cpp non plain false false  bool bool hasFrame() const [] }
&{hasSelectedText QLineEdit::hasSelectedText commendable public /work/build/qt5_workdir/w/s/qtbase/src/widgets/widgets/qlineedit.cpp non plain false false  bool bool hasSelectedText() const [] }
&{inputMask QLineEdit::inputMask commendable public /work/build/qt5_workdir/w/s/qtbase/src/widgets/widgets/qlineedit.cpp non plain false false  QString QString inputMask() const [] }
&{isClearButtonEnabled QLineEdit::isClearButtonEnabled commendable public /work/build/qt5_workdir/w/s/qtbase/src/widgets/widgets/qlineedit.cpp non plain false false  bool bool isClearButtonEnabled() const [] }
&{isModified QLineEdit::isModified commendable public /work/build/qt5_workdir/w/s/qtbase/src/widgets/widgets/qlineedit.cpp non plain false false  bool bool isModified() const [] }
&{isReadOnly QLineEdit::isReadOnly commendable public /work/build/qt5_workdir/w/s/qtbase/src/widgets/widgets/qlineedit.cpp non plain false false  bool bool isReadOnly() const [] }
&{isRedoAvailable QLineEdit::isRedoAvailable commendable public /work/build/qt5_workdir/w/s/qtbase/src/widgets/widgets/qlineedit.cpp non plain false false  bool bool isRedoAvailable() const [] }
&{isUndoAvailable QLineEdit::isUndoAvailable commendable public /work/build/qt5_workdir/w/s/qtbase/src/widgets/widgets/qlineedit.cpp non plain false false  bool bool isUndoAvailable() const [] }
&{maxLength QLineEdit::maxLength commendable public /work/build/qt5_workdir/w/s/qtbase/src/widgets/widgets/qlineedit.cpp non plain false false  int int maxLength() const [] }
&{placeholderText QLineEdit::placeholderText commendable public /work/build/qt5_workdir/w/s/qtbase/src/widgets/widgets/qlineedit.cpp non plain false false  QString QString placeholderText() const [] }
&{selectedText QLineEdit::selectedText commendable public /work/build/qt5_workdir/w/s/qtbase/src/widgets/widgets/qlineedit.cpp non plain false false  QString QString selectedText() const [] }
&{setAlignment QLineEdit::setAlignment commendable public /work/build/qt5_workdir/w/s/qtbase/src/widgets/widgets/qlineedit.cpp non plain false false  void void setAlignment(Qt::Alignment flag) [0xc821d00ec0] }
&{setClearButtonEnabled QLineEdit::setClearButtonEnabled commendable public /work/build/qt5_workdir/w/s/qtbase/src/widgets/widgets/qlineedit.cpp non plain false false  void void setClearButtonEnabled(bool enable) [0xc821d01220] }
&{setCursorMoveStyle QLineEdit::setCursorMoveStyle commendable public /work/build/qt5_workdir/w/s/qtbase/src/widgets/widgets/qlineedit.cpp non plain false false  void void setCursorMoveStyle(Qt::CursorMoveStyle style) [0xc821d015a0] }
&{setCursorPosition QLineEdit::setCursorPosition commendable public /work/build/qt5_workdir/w/s/qtbase/src/widgets/widgets/qlineedit.cpp non plain false false  void void setCursorPosition(int ) [0xc821d01a60] }
&{setDragEnabled QLineEdit::setDragEnabled commendable public /work/build/qt5_workdir/w/s/qtbase/src/widgets/widgets/qlineedit.cpp non plain false false  void void setDragEnabled(bool b) [0xc821d01d80] }
&{setEchoMode QLineEdit::setEchoMode commendable public /work/build/qt5_workdir/w/s/qtbase/src/widgets/widgets/qlineedit.cpp non plain false false  void void setEchoMode(EchoMode ) [0xc821cfa0c0] }
&{setFrame QLineEdit::setFrame commendable public /work/build/qt5_workdir/w/s/qtbase/src/widgets/widgets/qlineedit.cpp non plain false false  void void setFrame(bool ) [0xc821cfa560] }
&{setInputMask QLineEdit::setInputMask commendable public /work/build/qt5_workdir/w/s/qtbase/src/widgets/widgets/qlineedit.cpp non plain false false  void void setInputMask(const QString &inputMask) [0xc821cfa9a0] }
&{setMaxLength QLineEdit::setMaxLength commendable public /work/build/qt5_workdir/w/s/qtbase/src/widgets/widgets/qlineedit.cpp non plain false false  void void setMaxLength(int ) [0xc821cfae20] }
&{setModified QLineEdit::setModified commendable public /work/build/qt5_workdir/w/s/qtbase/src/widgets/widgets/qlineedit.cpp non plain false false  void void setModified(bool ) [0xc821cfb280] }
&{setPlaceholderText QLineEdit::setPlaceholderText commendable public /work/build/qt5_workdir/w/s/qtbase/src/widgets/widgets/qlineedit.cpp non plain false false  void void setPlaceholderText(const QString &) [0xc821cfb640] }
&{setReadOnly QLineEdit::setReadOnly commendable public /work/build/qt5_workdir/w/s/qtbase/src/widgets/widgets/qlineedit.cpp non plain false false  void void setReadOnly(bool ) [0xc821cfb9e0] }
&{setText QLineEdit::setText commendable public /work/build/qt5_workdir/w/s/qtbase/src/widgets/widgets/qlineedit.cpp non slot false false  void void setText(const QString &) [0xc821cfbda0] }
&{text QLineEdit::text commendable public /work/build/qt5_workdir/w/s/qtbase/src/widgets/widgets/qlineedit.cpp non plain false false  QString QString text() const [] }
&{QLineEdit QLineEdit::QLineEdit commendable public /work/build/qt5_workdir/w/s/qtbase/src/widgets/widgets/qlineedit.h non constructor false false   QLineEdit(QWidget *parent) [0xc821cdf020] }
&{QLineEdit QLineEdit::QLineEdit commendable public /work/build/qt5_workdir/w/s/qtbase/src/widgets/widgets/qlineedit.h non constructor false true 2  QLineEdit(const QString &contents, QWidget *parent) [0xc821cdf360 0xc821cdf480] }
&{addAction QLineEdit::addAction commendable public /work/build/qt5_workdir/w/s/qtbase/src/widgets/widgets/qlineedit.h non plain false true 2 QAction * QAction * addAction(const QIcon &icon, ActionPosition position) [0xc821cdfc00 0xc821cdfd00] }
&{addAction QLineEdit::addAction commendable public /work/build/qt5_workdir/w/s/qtbase/src/widgets/widgets/qlineedit.h non plain false false  void void addAction(QAction *action, ActionPosition position) [0xc821cd4060 0xc821cd4200] }
&{backspace QLineEdit::backspace commendable public /work/build/qt5_workdir/w/s/qtbase/src/widgets/widgets/qlineedit.h non plain false false  void void backspace() [] }
&{changeEvent QLineEdit::changeEvent commendable protected /work/build/qt5_workdir/w/s/qtbase/src/widgets/widgets/qlineedit.h impure plain false false  void void changeEvent(QEvent *ev) [0xc821cd4920] }
&{clear QLineEdit::clear commendable public /work/build/qt5_workdir/w/s/qtbase/src/widgets/widgets/qlineedit.h non slot false false  void void clear() [] }
&{completer QLineEdit::completer commendable public /work/build/qt5_workdir/w/s/qtbase/src/widgets/widgets/qlineedit.h non plain false false  QCompleter * QCompleter * completer() const [] }
&{contextMenuEvent QLineEdit::contextMenuEvent commendable protected /work/build/qt5_workdir/w/s/qtbase/src/widgets/widgets/qlineedit.h impure plain false false  void void contextMenuEvent(QContextMenuEvent *event) [0xc821cd5320] }
&{copy QLineEdit::copy commendable public /work/build/qt5_workdir/w/s/qtbase/src/widgets/widgets/qlineedit.h non slot false false  void void copy() const [] }
&{createStandardContextMenu QLineEdit::createStandardContextMenu commendable public /work/build/qt5_workdir/w/s/qtbase/src/widgets/widgets/qlineedit.h non plain false false  QMenu * QMenu * createStandardContextMenu() [] }
&{cursorBackward QLineEdit::cursorBackward commendable public /work/build/qt5_workdir/w/s/qtbase/src/widgets/widgets/qlineedit.h non plain false false  void void cursorBackward(bool mark, int steps) [0xc821cd5b40 0xc821cd5c40] }
&{cursorForward QLineEdit::cursorForward commendable public /work/build/qt5_workdir/w/s/qtbase/src/widgets/widgets/qlineedit.h non plain false false  void void cursorForward(bool mark, int steps) [0xc821cce060 0xc821cce120] }
&{cursorPositionAt QLineEdit::cursorPositionAt commendable public /work/build/qt5_workdir/w/s/qtbase/src/widgets/widgets/qlineedit.h non plain false false  int int cursorPositionAt(const QPoint &pos) [0xc821cce3c0] }
&{cursorPositionChanged QLineEdit::cursorPositionChanged commendable public /work/build/qt5_workdir/w/s/qtbase/src/widgets/widgets/qlineedit.h non signal false false  void void cursorPositionChanged(int old, int new) [0xc821cce6a0 0xc821cce780] }
&{cursorRect QLineEdit::cursorRect commendable unsupported_cppOutput /work/build/qt5_workdir/w/s/qtbase/src/widgets/widgets/qlineedit.h non plain false false  QRect QRect cursorRect() const [] }
&{cursorWordBackward QLineEdit::cursorWordBackward commendable public /work/build/qt5_workdir/w/s/qtbase/src/widgets/widgets/qlineedit.h non plain false false  void void cursorWordBackward(bool mark) [0xc821ccec40] }
&{cursorWordForward QLineEdit::cursorWordForward commendable public /work/build/qt5_workdir/w/s/qtbase/src/widgets/widgets/qlineedit.h non plain false false  void void cursorWordForward(bool mark) [0xc821ccef60] }
&{cut QLineEdit::cut commendable public /work/build/qt5_workdir/w/s/qtbase/src/widgets/widgets/qlineedit.h non slot false false  void void cut() [] }
&{del QLineEdit::del commendable public /work/build/qt5_workdir/w/s/qtbase/src/widgets/widgets/qlineedit.h non plain false false  void void del() [] }
&{deselect QLineEdit::deselect commendable public /work/build/qt5_workdir/w/s/qtbase/src/widgets/widgets/qlineedit.h non plain false false  void void deselect() [] }
&{dragEnterEvent QLineEdit::dragEnterEvent commendable protected /work/build/qt5_workdir/w/s/qtbase/src/widgets/widgets/qlineedit.h impure plain false false  void void dragEnterEvent(QDragEnterEvent *e) [0xc821ccf420] }
&{dragLeaveEvent QLineEdit::dragLeaveEvent commendable protected /work/build/qt5_workdir/w/s/qtbase/src/widgets/widgets/qlineedit.h impure plain false false  void void dragLeaveEvent(QDragLeaveEvent *e) [0xc821ccf6e0] }
&{dragMoveEvent QLineEdit::dragMoveEvent commendable protected /work/build/qt5_workdir/w/s/qtbase/src/widgets/widgets/qlineedit.h impure plain false false  void void dragMoveEvent(QDragMoveEvent *e) [0xc821ccf960] }
&{dropEvent QLineEdit::dropEvent commendable protected /work/build/qt5_workdir/w/s/qtbase/src/widgets/widgets/qlineedit.h impure plain false false  void void dropEvent(QDropEvent *e) [0xc821ccfc20] }
&{editingFinished QLineEdit::editingFinished commendable public /work/build/qt5_workdir/w/s/qtbase/src/widgets/widgets/qlineedit.h non signal false false  void void editingFinished() [] }
&{end QLineEdit::end commendable public /work/build/qt5_workdir/w/s/qtbase/src/widgets/widgets/qlineedit.h non plain false false  void void end(bool mark) [0xc822c960e0] }
&{event QLineEdit::event commendable public /work/build/qt5_workdir/w/s/qtbase/src/widgets/widgets/qlineedit.h impure plain false false  bool bool event(QEvent *e) [0xc822c96300] }
&{focusInEvent QLineEdit::focusInEvent commendable protected /work/build/qt5_workdir/w/s/qtbase/src/widgets/widgets/qlineedit.h impure plain false false  void void focusInEvent(QFocusEvent *e) [0xc822c965a0] }
&{focusOutEvent QLineEdit::focusOutEvent commendable protected /work/build/qt5_workdir/w/s/qtbase/src/widgets/widgets/qlineedit.h impure plain false false  void void focusOutEvent(QFocusEvent *e) [0xc822c967a0] }
&{getTextMargins QLineEdit::getTextMargins commendable public /work/build/qt5_workdir/w/s/qtbase/src/widgets/widgets/qlineedit.h non plain false false  void void getTextMargins(int *left, int *top, int *right, int *bottom) const [0xc822c969e0 0xc822c96ae0 0xc822c96b80 0xc822c96c80] }
&{home QLineEdit::home commendable public /work/build/qt5_workdir/w/s/qtbase/src/widgets/widgets/qlineedit.h non plain false false  void void home(bool mark) [0xc822c96f40] }
&{initStyleOption QLineEdit::initStyleOption commendable protected /work/build/qt5_workdir/w/s/qtbase/src/widgets/widgets/qlineedit.h non plain false false  void void initStyleOption(QStyleOptionFrame *option) const [0xc822c97280] }
&{inputMethodEvent QLineEdit::inputMethodEvent commendable protected /work/build/qt5_workdir/w/s/qtbase/src/widgets/widgets/qlineedit.h impure plain false false  void void inputMethodEvent(QInputMethodEvent *e) [0xc822c97520] }
&{inputMethodQuery QLineEdit::inputMethodQuery commendable public /work/build/qt5_workdir/w/s/qtbase/src/widgets/widgets/qlineedit.h impure plain false false  QVariant QVariant inputMethodQuery(Qt::InputMethodQuery property) const [0xc822c977a0] }
&{insert QLineEdit::insert commendable unsupported_isBlocked /work/build/qt5_workdir/w/s/qtbase/src/widgets/widgets/qlineedit.h non plain false false  void void insert(const QString &newText) [0xc822c97a40] }
&{keyPressEvent QLineEdit::keyPressEvent commendable protected /work/build/qt5_workdir/w/s/qtbase/src/widgets/widgets/qlineedit.h impure plain false false  void void keyPressEvent(QKeyEvent *event) [0xc822c97c60] }
&{minimumSizeHint QLineEdit::minimumSizeHint commendable unsupported_cppOutput /work/build/qt5_workdir/w/s/qtbase/src/widgets/widgets/qlineedit.h impure plain false false  QSize QSize minimumSizeHint() const [] }
&{mouseDoubleClickEvent QLineEdit::mouseDoubleClickEvent commendable protected /work/build/qt5_workdir/w/s/qtbase/src/widgets/widgets/qlineedit.h impure plain false false  void void mouseDoubleClickEvent(QMouseEvent *e) [0xc821cc2300] }
&{mouseMoveEvent QLineEdit::mouseMoveEvent commendable protected /work/build/qt5_workdir/w/s/qtbase/src/widgets/widgets/qlineedit.h impure plain false false  void void mouseMoveEvent(QMouseEvent *e) [0xc821cc2640] }
&{mousePressEvent QLineEdit::mousePressEvent commendable protected /work/build/qt5_workdir/w/s/qtbase/src/widgets/widgets/qlineedit.h impure plain false false  void void mousePressEvent(QMouseEvent *e) [0xc821cc2a40] }
&{mouseReleaseEvent QLineEdit::mouseReleaseEvent commendable protected /work/build/qt5_workdir/w/s/qtbase/src/widgets/widgets/qlineedit.h impure plain false false  void void mouseReleaseEvent(QMouseEvent *e) [0xc821cc3020] }
&{paintEvent QLineEdit::paintEvent commendable protected /work/build/qt5_workdir/w/s/qtbase/src/widgets/widgets/qlineedit.h impure plain false false  void void paintEvent(QPaintEvent *) [0xc821cc3580] }
&{paste QLineEdit::paste commendable public /work/build/qt5_workdir/w/s/qtbase/src/widgets/widgets/qlineedit.h non slot false false  void void paste() [] }
&{redo QLineEdit::redo commendable public /work/build/qt5_workdir/w/s/qtbase/src/widgets/widgets/qlineedit.h non slot false false  void void redo() [] }
&{returnPressed QLineEdit::returnPressed commendable public /work/build/qt5_workdir/w/s/qtbase/src/widgets/widgets/qlineedit.h non signal false false  void void returnPressed() [] }
&{selectAll QLineEdit::selectAll commendable public /work/build/qt5_workdir/w/s/qtbase/src/widgets/widgets/qlineedit.h non slot false false  void void selectAll() [] }
&{selectionChanged QLineEdit::selectionChanged commendable public /work/build/qt5_workdir/w/s/qtbase/src/widgets/widgets/qlineedit.h non signal false false  void void selectionChanged() [] }
&{selectionStart QLineEdit::selectionStart commendable public /work/build/qt5_workdir/w/s/qtbase/src/widgets/widgets/qlineedit.h non plain false false  int int selectionStart() const [] }
&{setCompleter QLineEdit::setCompleter commendable public /work/build/qt5_workdir/w/s/qtbase/src/widgets/widgets/qlineedit.h non plain false false  void void setCompleter(QCompleter *c) [0xc821cae540] }
&{setSelection QLineEdit::setSelection commendable public /work/build/qt5_workdir/w/s/qtbase/src/widgets/widgets/qlineedit.h non plain false false  void void setSelection(int start, int length) [0xc821cae960 0xc821caea80] }
&{setTextMargins QLineEdit::setTextMargins commendable public /work/build/qt5_workdir/w/s/qtbase/src/widgets/widgets/qlineedit.h non plain false true 2 void void setTextMargins(const QMargins &margins) [0xc821caee60] }
&{setTextMargins QLineEdit::setTextMargins commendable public /work/build/qt5_workdir/w/s/qtbase/src/widgets/widgets/qlineedit.h non plain false false  void void setTextMargins(int left, int top, int right, int bottom) [0xc821caf2a0 0xc821caf3a0 0xc821caf540 0xc821caf660] }
&{setValidator QLineEdit::setValidator commendable public /work/build/qt5_workdir/w/s/qtbase/src/widgets/widgets/qlineedit.h non plain false false  void void setValidator(const QValidator *v) [0xc821caf940] }
&{sizeHint QLineEdit::sizeHint commendable unsupported_cppOutput /work/build/qt5_workdir/w/s/qtbase/src/widgets/widgets/qlineedit.h impure plain false false  QSize QSize sizeHint() const [] }
&{textChanged QLineEdit::textChanged commendable public /work/build/qt5_workdir/w/s/qtbase/src/widgets/widgets/qlineedit.h non signal false false  void void textChanged(const QString &text) [0xc821caffa0] }
&{textEdited QLineEdit::textEdited commendable public /work/build/qt5_workdir/w/s/qtbase/src/widgets/widgets/qlineedit.h non signal false false  void void textEdited(const QString &text) [0xc8222ca200] }
&{textMargins QLineEdit::textMargins commendable unsupported_cppOutput /work/build/qt5_workdir/w/s/qtbase/src/widgets/widgets/qlineedit.h non plain false false  QMargins QMargins textMargins() const [] }
&{undo QLineEdit::undo commendable public /work/build/qt5_workdir/w/s/qtbase/src/widgets/widgets/qlineedit.h non slot false false  void void undo() [] }
&{validator QLineEdit::validator commendable public /work/build/qt5_workdir/w/s/qtbase/src/widgets/widgets/qlineedit.h non plain false false  const QValidator * const QValidator * validator() const [] }
&{~QLineEdit QLineEdit::~QLineEdit commendable public /work/build/qt5_workdir/w/s/qtbase/src/widgets/widgets/qlineedit.h non destructor false false   ~QLineEdit() [] }
########################################			ENUMS			########################################
&{ActionPosition QLineEdit::ActionPosition commendable public  [0xc821cde260 0xc821cde3e0] false}
&{EchoMode QLineEdit::EchoMode commendable public  [0xc821cde720 0xc821cde7e0 0xc821cde960 0xc821cdeb00] false}
