########################################			FUNCTIONS			########################################
&{QSqlDriver QSqlDriver::QSqlDriver commendable public /work/build/qt5_workdir/w/s/qtbase/src/sql/kernel/qsqldriver.h non constructor false false   QSqlDriver(QObject *parent) [0xc826a7b360] }
&{beginTransaction QSqlDriver::beginTransaction commendable public /work/build/qt5_workdir/w/s/qtbase/src/sql/kernel/qsqldriver.h impure plain false false  bool bool beginTransaction() [] }
&{close QSqlDriver::close commendable public /work/build/qt5_workdir/w/s/qtbase/src/sql/kernel/qsqldriver.h pure plain false false  void void close() [] }
&{commitTransaction QSqlDriver::commitTransaction commendable public /work/build/qt5_workdir/w/s/qtbase/src/sql/kernel/qsqldriver.h impure plain false false  bool bool commitTransaction() [] }
&{createResult QSqlDriver::createResult commendable public /work/build/qt5_workdir/w/s/qtbase/src/sql/kernel/qsqldriver.h pure plain false false  QSqlResult * QSqlResult * createResult() const [] }
&{dbmsType QSqlDriver::dbmsType commendable public /work/build/qt5_workdir/w/s/qtbase/src/sql/kernel/qsqldriver.h non plain false false  DbmsType DbmsType dbmsType() const [] }
&{escapeIdentifier QSqlDriver::escapeIdentifier commendable public /work/build/qt5_workdir/w/s/qtbase/src/sql/kernel/qsqldriver.h impure plain false false  QString QString escapeIdentifier(const QString &identifier, IdentifierType type) const [0xc8224127c0 0xc8224128a0] }
&{formatValue QSqlDriver::formatValue commendable public /work/build/qt5_workdir/w/s/qtbase/src/sql/kernel/qsqldriver.h impure plain false false  QString QString formatValue(const QSqlField &field, bool trimStrings) const [0xc822412ba0 0xc822412ca0] }
&{handle QSqlDriver::handle commendable public /work/build/qt5_workdir/w/s/qtbase/src/sql/kernel/qsqldriver.h impure plain false false  QVariant QVariant handle() const [] }
&{hasFeature QSqlDriver::hasFeature commendable public /work/build/qt5_workdir/w/s/qtbase/src/sql/kernel/qsqldriver.h pure plain false false  bool bool hasFeature(DriverFeature feature) const [0xc822413140] }
&{isIdentifierEscaped QSqlDriver::isIdentifierEscaped commendable public /work/build/qt5_workdir/w/s/qtbase/src/sql/kernel/qsqldriver.h impure plain false false  bool bool isIdentifierEscaped(const QString &identifier, IdentifierType type) const [0xc8224134a0 0xc822413520] }
&{isOpen QSqlDriver::isOpen commendable public /work/build/qt5_workdir/w/s/qtbase/src/sql/kernel/qsqldriver.h impure plain false false  bool bool isOpen() const [] }
&{isOpenError QSqlDriver::isOpenError commendable public /work/build/qt5_workdir/w/s/qtbase/src/sql/kernel/qsqldriver.h non plain false false  bool bool isOpenError() const [] }
&{lastError QSqlDriver::lastError commendable unsupported_cppOutput /work/build/qt5_workdir/w/s/qtbase/src/sql/kernel/qsqldriver.h non plain false false  QSqlError QSqlError lastError() const [] }
&{notification QSqlDriver::notification commendable public /work/build/qt5_workdir/w/s/qtbase/src/sql/kernel/qsqldriver.h non signal false false  void void notification(const QString &name) [0xc822413e20] }
&{notification QSqlDriver::notification commendable public /work/build/qt5_workdir/w/s/qtbase/src/sql/kernel/qsqldriver.h non signal false true 2 void void notification(const QString &name, QSqlDriver::NotificationSource source, const QVariant &payload) [0xc82241e140 0xc82241e220 0xc82241e360] }
&{numericalPrecisionPolicy QSqlDriver::numericalPrecisionPolicy commendable unsupported_goEnum /work/build/qt5_workdir/w/s/qtbase/src/sql/kernel/qsqldriver.h non plain false false  QSql::NumericalPrecisionPolicy QSql::NumericalPrecisionPolicy numericalPrecisionPolicy() const [] }
&{open QSqlDriver::open commendable public /work/build/qt5_workdir/w/s/qtbase/src/sql/kernel/qsqldriver.h pure plain false false  bool bool open(const QString &db, const QString &user, const QString &password, const QString &host, int port, const QString &options) [0xc82241e7a0 0xc82241e860 0xc82241e920 0xc82241e9c0 0xc82241eb00 0xc82241ec00] }
&{primaryIndex QSqlDriver::primaryIndex commendable unsupported_cppOutput /work/build/qt5_workdir/w/s/qtbase/src/sql/kernel/qsqldriver.h impure plain false false  QSqlIndex QSqlIndex primaryIndex(const QString &tableName) const [0xc82241eec0] }
&{record QSqlDriver::record commendable unsupported_cppOutput /work/build/qt5_workdir/w/s/qtbase/src/sql/kernel/qsqldriver.h impure plain false false  QSqlRecord QSqlRecord record(const QString &tableName) const [0xc82241f1a0] }
&{rollbackTransaction QSqlDriver::rollbackTransaction commendable public /work/build/qt5_workdir/w/s/qtbase/src/sql/kernel/qsqldriver.h impure plain false false  bool bool rollbackTransaction() [] }
&{setLastError QSqlDriver::setLastError commendable protected /work/build/qt5_workdir/w/s/qtbase/src/sql/kernel/qsqldriver.h impure plain false false  void void setLastError(const QSqlError &error) [0xc82241f700] }
&{setNumericalPrecisionPolicy QSqlDriver::setNumericalPrecisionPolicy commendable unsupported_goEnum /work/build/qt5_workdir/w/s/qtbase/src/sql/kernel/qsqldriver.h non plain false false  void void setNumericalPrecisionPolicy(QSql::NumericalPrecisionPolicy precisionPolicy) [0xc82241fa20] }
&{setOpen QSqlDriver::setOpen commendable protected /work/build/qt5_workdir/w/s/qtbase/src/sql/kernel/qsqldriver.h impure plain false false  void void setOpen(bool open) [0xc82241fe40] }
&{setOpenError QSqlDriver::setOpenError commendable protected /work/build/qt5_workdir/w/s/qtbase/src/sql/kernel/qsqldriver.h impure plain false false  void void setOpenError(bool error) [0xc8209e0200] }
&{sqlStatement QSqlDriver::sqlStatement commendable public /work/build/qt5_workdir/w/s/qtbase/src/sql/kernel/qsqldriver.h impure plain false false  QString QString sqlStatement(StatementType type, const QString &tableName, const QSqlRecord &rec, bool preparedStatement) const [0xc8209e06e0 0xc8209e0820 0xc8209e0980 0xc8209e0ba0] }
&{stripDelimiters QSqlDriver::stripDelimiters commendable public /work/build/qt5_workdir/w/s/qtbase/src/sql/kernel/qsqldriver.h impure plain false false  QString QString stripDelimiters(const QString &identifier, IdentifierType type) const [0xc8209e10c0 0xc8209e1220] }
&{subscribeToNotification QSqlDriver::subscribeToNotification commendable public /work/build/qt5_workdir/w/s/qtbase/src/sql/kernel/qsqldriver.h impure plain false false  bool bool subscribeToNotification(const QString &name) [0xc8209e1680] }
&{subscribedToNotifications QSqlDriver::subscribedToNotifications commendable public /work/build/qt5_workdir/w/s/qtbase/src/sql/kernel/qsqldriver.h impure plain false false  QStringList QStringList subscribedToNotifications() const [] }
&{tables QSqlDriver::tables commendable unsupported_goEnum /work/build/qt5_workdir/w/s/qtbase/src/sql/kernel/qsqldriver.h impure plain false false  QStringList QStringList tables(QSql::TableType tableType) const [0xc8209e1c60] }
&{unsubscribeFromNotification QSqlDriver::unsubscribeFromNotification commendable public /work/build/qt5_workdir/w/s/qtbase/src/sql/kernel/qsqldriver.h impure plain false false  bool bool unsubscribeFromNotification(const QString &name) [0xc826a5e020] }
&{~QSqlDriver QSqlDriver::~QSqlDriver commendable public /work/build/qt5_workdir/w/s/qtbase/src/sql/kernel/qsqldriver.h non destructor false false   ~QSqlDriver() [] }
########################################			ENUMS			########################################
&{DbmsType QSqlDriver::DbmsType commendable public  [0xc820802740 0xc820802820 0xc8208028c0 0xc8208029a0 0xc820802a40 0xc820802b60 0xc820802c40 0xc820802cc0 0xc820802da0] false}
&{DriverFeature QSqlDriver::DriverFeature commendable public  [0xc820803020 0xc8208030a0 0xc820803180 0xc820803200 0xc820803360 0xc820803420 0xc820803580 0xc8208036e0 0xc8208037c0 0xc820803840 0xc820803920 0xc820803ae0 0xc820803be0 0xc820803cc0 0xc820803da0] false}
&{IdentifierType QSqlDriver::IdentifierType commendable public  [0xc826a7a040 0xc826a7a0e0] false}
&{NotificationSource QSqlDriver::NotificationSource commendable public  [0xc826a7a580 0xc826a7a620 0xc826a7a6e0] false}
&{StatementType QSqlDriver::StatementType commendable public  [0xc826a7aae0 0xc826a7aba0 0xc826a7aca0 0xc826a7ad40 0xc826a7af00] false}
