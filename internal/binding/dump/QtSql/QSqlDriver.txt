########################################			FUNCTIONS			########################################
&{QSqlDriver QSqlDriver::QSqlDriver commendable public /work/build/qt5_workdir/w/s/qtbase/src/sql/kernel/qsqldriver.h non constructor false false   QSqlDriver(QObject *parent) [0xc820c88340] }
&{beginTransaction QSqlDriver::beginTransaction commendable public /work/build/qt5_workdir/w/s/qtbase/src/sql/kernel/qsqldriver.h impure plain false false  bool bool beginTransaction() [] }
&{close QSqlDriver::close commendable public /work/build/qt5_workdir/w/s/qtbase/src/sql/kernel/qsqldriver.h pure plain false false  void void close() [] }
&{commitTransaction QSqlDriver::commitTransaction commendable public /work/build/qt5_workdir/w/s/qtbase/src/sql/kernel/qsqldriver.h impure plain false false  bool bool commitTransaction() [] }
&{createResult QSqlDriver::createResult commendable public /work/build/qt5_workdir/w/s/qtbase/src/sql/kernel/qsqldriver.h pure plain false false  QSqlResult * QSqlResult * createResult() const [] }
&{dbmsType QSqlDriver::dbmsType commendable public /work/build/qt5_workdir/w/s/qtbase/src/sql/kernel/qsqldriver.h non plain false false  DbmsType DbmsType dbmsType() const [] }
&{escapeIdentifier QSqlDriver::escapeIdentifier commendable public /work/build/qt5_workdir/w/s/qtbase/src/sql/kernel/qsqldriver.h impure plain false false  QString QString escapeIdentifier(const QString &identifier, IdentifierType type) const [0xc820c85080 0xc820c85280] }
&{formatValue QSqlDriver::formatValue commendable public /work/build/qt5_workdir/w/s/qtbase/src/sql/kernel/qsqldriver.h impure plain false false  QString QString formatValue(const QSqlField &field, bool trimStrings) const [0xc820c85a60 0xc820c85da0] }
&{handle QSqlDriver::handle commendable public /work/build/qt5_workdir/w/s/qtbase/src/sql/kernel/qsqldriver.h impure plain false false  QVariant QVariant handle() const [] }
&{hasFeature QSqlDriver::hasFeature commendable public /work/build/qt5_workdir/w/s/qtbase/src/sql/kernel/qsqldriver.h pure plain false false  bool bool hasFeature(DriverFeature feature) const [0xc820c7eac0] }
&{isIdentifierEscaped QSqlDriver::isIdentifierEscaped commendable public /work/build/qt5_workdir/w/s/qtbase/src/sql/kernel/qsqldriver.h impure plain false false  bool bool isIdentifierEscaped(const QString &identifier, IdentifierType type) const [0xc820c7f240 0xc820c7f460] }
&{isOpen QSqlDriver::isOpen commendable public /work/build/qt5_workdir/w/s/qtbase/src/sql/kernel/qsqldriver.h impure plain false false  bool bool isOpen() const [] }
&{isOpenError QSqlDriver::isOpenError commendable public /work/build/qt5_workdir/w/s/qtbase/src/sql/kernel/qsqldriver.h non plain false false  bool bool isOpenError() const [] }
&{lastError QSqlDriver::lastError commendable unsupported_cppOutput /work/build/qt5_workdir/w/s/qtbase/src/sql/kernel/qsqldriver.h non plain false false  QSqlError QSqlError lastError() const [] }
&{notification QSqlDriver::notification commendable public /work/build/qt5_workdir/w/s/qtbase/src/sql/kernel/qsqldriver.h non signal false false  void void notification(const QString &name) [0xc820c78aa0] }
&{notification QSqlDriver::notification commendable public /work/build/qt5_workdir/w/s/qtbase/src/sql/kernel/qsqldriver.h non signal false true 2 void void notification(const QString &name, QSqlDriver::NotificationSource source, const QVariant &payload) [0xc820c79120 0xc820c792e0 0xc820c79640] }
&{numericalPrecisionPolicy QSqlDriver::numericalPrecisionPolicy commendable unsupported_goEnum /work/build/qt5_workdir/w/s/qtbase/src/sql/kernel/qsqldriver.h non plain false false  QSql::NumericalPrecisionPolicy QSql::NumericalPrecisionPolicy numericalPrecisionPolicy() const [] }
&{open QSqlDriver::open commendable public /work/build/qt5_workdir/w/s/qtbase/src/sql/kernel/qsqldriver.h pure plain false false  bool bool open(const QString &db, const QString &user, const QString &password, const QString &host, int port, const QString &options) [0xc820c79f80 0xc820e8e0e0 0xc820e8e200 0xc820e8e3a0 0xc820e8e540 0xc820e8e660] }
&{primaryIndex QSqlDriver::primaryIndex commendable unsupported_cppOutput /work/build/qt5_workdir/w/s/qtbase/src/sql/kernel/qsqldriver.h impure plain false false  QSqlIndex QSqlIndex primaryIndex(const QString &tableName) const [0xc820e8eaa0] }
&{record QSqlDriver::record commendable unsupported_cppOutput /work/build/qt5_workdir/w/s/qtbase/src/sql/kernel/qsqldriver.h impure plain false false  QSqlRecord QSqlRecord record(const QString &tableName) const [0xc820e8eee0] }
&{rollbackTransaction QSqlDriver::rollbackTransaction commendable public /work/build/qt5_workdir/w/s/qtbase/src/sql/kernel/qsqldriver.h impure plain false false  bool bool rollbackTransaction() [] }
&{setLastError QSqlDriver::setLastError commendable protected /work/build/qt5_workdir/w/s/qtbase/src/sql/kernel/qsqldriver.h impure plain false false  void void setLastError(const QSqlError &error) [0xc820e8f780] }
&{setNumericalPrecisionPolicy QSqlDriver::setNumericalPrecisionPolicy commendable unsupported_goEnum /work/build/qt5_workdir/w/s/qtbase/src/sql/kernel/qsqldriver.h non plain false false  void void setNumericalPrecisionPolicy(QSql::NumericalPrecisionPolicy precisionPolicy) [0xc820e8fca0] }
&{setOpen QSqlDriver::setOpen commendable protected /work/build/qt5_workdir/w/s/qtbase/src/sql/kernel/qsqldriver.h impure plain false false  void void setOpen(bool open) [0xc820c5c240] }
&{setOpenError QSqlDriver::setOpenError commendable protected /work/build/qt5_workdir/w/s/qtbase/src/sql/kernel/qsqldriver.h impure plain false false  void void setOpenError(bool error) [0xc820c5c900] }
&{sqlStatement QSqlDriver::sqlStatement commendable public /work/build/qt5_workdir/w/s/qtbase/src/sql/kernel/qsqldriver.h impure plain false false  QString QString sqlStatement(StatementType type, const QString &tableName, const QSqlRecord &rec, bool preparedStatement) const [0xc820c5cde0 0xc820c5ce80 0xc820c5d160 0xc820c5d360] }
&{stripDelimiters QSqlDriver::stripDelimiters commendable public /work/build/qt5_workdir/w/s/qtbase/src/sql/kernel/qsqldriver.h impure plain false false  QString QString stripDelimiters(const QString &identifier, IdentifierType type) const [0xc820c5d8e0 0xc820c5daa0] }
&{subscribeToNotification QSqlDriver::subscribeToNotification commendable public /work/build/qt5_workdir/w/s/qtbase/src/sql/kernel/qsqldriver.h impure plain false false  bool bool subscribeToNotification(const QString &name) [0xc820c5df80] }
&{subscribedToNotifications QSqlDriver::subscribedToNotifications commendable public /work/build/qt5_workdir/w/s/qtbase/src/sql/kernel/qsqldriver.h impure plain false false  QStringList QStringList subscribedToNotifications() const [] }
&{tables QSqlDriver::tables commendable unsupported_goEnum /work/build/qt5_workdir/w/s/qtbase/src/sql/kernel/qsqldriver.h impure plain false false  QStringList QStringList tables(QSql::TableType tableType) const [0xc820c506c0] }
&{unsubscribeFromNotification QSqlDriver::unsubscribeFromNotification commendable public /work/build/qt5_workdir/w/s/qtbase/src/sql/kernel/qsqldriver.h impure plain false false  bool bool unsubscribeFromNotification(const QString &name) [0xc820c50c60] }
&{~QSqlDriver QSqlDriver::~QSqlDriver commendable public /work/build/qt5_workdir/w/s/qtbase/src/sql/kernel/qsqldriver.h non destructor false false   ~QSqlDriver() [] }
########################################			ENUMS			########################################
&{DbmsType QSqlDriver::DbmsType commendable public  [0xc820ca0760 0xc820ca08e0 0xc820ca0a80 0xc820ca0c60 0xc820ca0e60 0xc820ca1060 0xc820ca11e0 0xc820ca13a0 0xc820ca15a0] false}
&{DriverFeature QSqlDriver::DriverFeature commendable public  [0xc820ca1920 0xc820ca1ae0 0xc820ca1d60 0xc820ca1e20 0xc820c98060 0xc820c98260 0xc820c98580 0xc820c987a0 0xc820c98a60 0xc820c98b60 0xc820c98e00 0xc820c99100 0xc820c994c0 0xc820c99760 0xc820c999e0] false}
&{IdentifierType QSqlDriver::IdentifierType commendable public  [0xc820c8e060 0xc820c8e200] false}
&{NotificationSource QSqlDriver::NotificationSource commendable public  [0xc820c8e880 0xc820c8e9e0 0xc820c8ec00] false}
&{StatementType QSqlDriver::StatementType commendable public  [0xc820c8f280 0xc820c8f4a0 0xc820c8f700 0xc820c8f8e0 0xc820c8fa80] false}
