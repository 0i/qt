########################################			FUNCTIONS			########################################
&{QSqlDriver QSqlDriver::QSqlDriver commendable public /work/build/qt5_workdir/w/s/qtbase/src/sql/kernel/qsqldriver.h non constructor false false   QSqlDriver(QObject *parent) [0xc82120b240] }
&{beginTransaction QSqlDriver::beginTransaction commendable public /work/build/qt5_workdir/w/s/qtbase/src/sql/kernel/qsqldriver.h impure plain false false  bool bool beginTransaction() [] }
&{close QSqlDriver::close commendable public /work/build/qt5_workdir/w/s/qtbase/src/sql/kernel/qsqldriver.h pure plain false false  void void close() [] }
&{commitTransaction QSqlDriver::commitTransaction commendable public /work/build/qt5_workdir/w/s/qtbase/src/sql/kernel/qsqldriver.h impure plain false false  bool bool commitTransaction() [] }
&{createResult QSqlDriver::createResult commendable public /work/build/qt5_workdir/w/s/qtbase/src/sql/kernel/qsqldriver.h pure plain false false  QSqlResult * QSqlResult * createResult() const [] }
&{dbmsType QSqlDriver::dbmsType commendable public /work/build/qt5_workdir/w/s/qtbase/src/sql/kernel/qsqldriver.h non plain false false  DbmsType DbmsType dbmsType() const [] }
&{escapeIdentifier QSqlDriver::escapeIdentifier commendable public /work/build/qt5_workdir/w/s/qtbase/src/sql/kernel/qsqldriver.h impure plain false false  QString QString escapeIdentifier(const QString &identifier, IdentifierType type) const [0xc82120bde0 0xc82120be60] }
&{formatValue QSqlDriver::formatValue commendable public /work/build/qt5_workdir/w/s/qtbase/src/sql/kernel/qsqldriver.h impure plain false false  QString QString formatValue(const QSqlField &field, bool trimStrings) const [0xc8211cc040 0xc8211cc100] }
&{handle QSqlDriver::handle commendable public /work/build/qt5_workdir/w/s/qtbase/src/sql/kernel/qsqldriver.h impure plain false false  QVariant QVariant handle() const [] }
&{hasFeature QSqlDriver::hasFeature commendable public /work/build/qt5_workdir/w/s/qtbase/src/sql/kernel/qsqldriver.h pure plain false false  bool bool hasFeature(DriverFeature feature) const [0xc8211cc400] }
&{isIdentifierEscaped QSqlDriver::isIdentifierEscaped commendable public /work/build/qt5_workdir/w/s/qtbase/src/sql/kernel/qsqldriver.h impure plain false false  bool bool isIdentifierEscaped(const QString &identifier, IdentifierType type) const [0xc8211cc600 0xc8211cc680] }
&{isOpen QSqlDriver::isOpen commendable public /work/build/qt5_workdir/w/s/qtbase/src/sql/kernel/qsqldriver.h impure plain false false  bool bool isOpen() const [] }
&{isOpenError QSqlDriver::isOpenError commendable public /work/build/qt5_workdir/w/s/qtbase/src/sql/kernel/qsqldriver.h non plain false false  bool bool isOpenError() const [] }
&{lastError QSqlDriver::lastError commendable unsupported_cppOutput /work/build/qt5_workdir/w/s/qtbase/src/sql/kernel/qsqldriver.h non plain false false  QSqlError QSqlError lastError() const [] }
&{notification QSqlDriver::notification commendable public /work/build/qt5_workdir/w/s/qtbase/src/sql/kernel/qsqldriver.h non signal false false  void void notification(const QString &name) [0xc8211ccc20] }
&{notification QSqlDriver::notification commendable public /work/build/qt5_workdir/w/s/qtbase/src/sql/kernel/qsqldriver.h non signal false true 2 void void notification(const QString &name, QSqlDriver::NotificationSource source, const QVariant &payload) [0xc8211ccde0 0xc8211cce80 0xc8211ccf40] }
&{numericalPrecisionPolicy QSqlDriver::numericalPrecisionPolicy commendable unsupported_goEnum /work/build/qt5_workdir/w/s/qtbase/src/sql/kernel/qsqldriver.h non plain false false  QSql::NumericalPrecisionPolicy QSql::NumericalPrecisionPolicy numericalPrecisionPolicy() const [] }
&{open QSqlDriver::open commendable public /work/build/qt5_workdir/w/s/qtbase/src/sql/kernel/qsqldriver.h pure plain false false  bool bool open(const QString &db, const QString &user, const QString &password, const QString &host, int port, const QString &options) [0xc8211cd1c0 0xc8211cd240 0xc8211cd2c0 0xc8211cd340 0xc8211cd3e0 0xc8211cd460] }
&{primaryIndex QSqlDriver::primaryIndex commendable unsupported_cppOutput /work/build/qt5_workdir/w/s/qtbase/src/sql/kernel/qsqldriver.h impure plain false false  QSqlIndex QSqlIndex primaryIndex(const QString &tableName) const [0xc8211cd620] }
&{record QSqlDriver::record commendable unsupported_cppOutput /work/build/qt5_workdir/w/s/qtbase/src/sql/kernel/qsqldriver.h impure plain false false  QSqlRecord QSqlRecord record(const QString &tableName) const [0xc8211cd7e0] }
&{rollbackTransaction QSqlDriver::rollbackTransaction commendable public /work/build/qt5_workdir/w/s/qtbase/src/sql/kernel/qsqldriver.h impure plain false false  bool bool rollbackTransaction() [] }
&{setLastError QSqlDriver::setLastError commendable protected /work/build/qt5_workdir/w/s/qtbase/src/sql/kernel/qsqldriver.h impure plain false false  void void setLastError(const QSqlError &error) [0xc8211cdb40] }
&{setNumericalPrecisionPolicy QSqlDriver::setNumericalPrecisionPolicy commendable unsupported_goEnum /work/build/qt5_workdir/w/s/qtbase/src/sql/kernel/qsqldriver.h non plain false false  void void setNumericalPrecisionPolicy(QSql::NumericalPrecisionPolicy precisionPolicy) [0xc8211cdd40] }
&{setOpen QSqlDriver::setOpen commendable protected /work/build/qt5_workdir/w/s/qtbase/src/sql/kernel/qsqldriver.h impure plain false false  void void setOpen(bool open) [0xc8211cdfa0] }
&{setOpenError QSqlDriver::setOpenError commendable protected /work/build/qt5_workdir/w/s/qtbase/src/sql/kernel/qsqldriver.h impure plain false false  void void setOpenError(bool error) [0xc820d101c0] }
&{sqlStatement QSqlDriver::sqlStatement commendable public /work/build/qt5_workdir/w/s/qtbase/src/sql/kernel/qsqldriver.h impure plain false false  QString QString sqlStatement(StatementType type, const QString &tableName, const QSqlRecord &rec, bool preparedStatement) const [0xc820d10380 0xc820d10400 0xc820d104a0 0xc820d10580] }
&{stripDelimiters QSqlDriver::stripDelimiters commendable public /work/build/qt5_workdir/w/s/qtbase/src/sql/kernel/qsqldriver.h impure plain false false  QString QString stripDelimiters(const QString &identifier, IdentifierType type) const [0xc820d10780 0xc820d10800] }
&{subscribeToNotification QSqlDriver::subscribeToNotification commendable public /work/build/qt5_workdir/w/s/qtbase/src/sql/kernel/qsqldriver.h impure plain false false  bool bool subscribeToNotification(const QString &name) [0xc820d109a0] }
&{subscribedToNotifications QSqlDriver::subscribedToNotifications commendable public /work/build/qt5_workdir/w/s/qtbase/src/sql/kernel/qsqldriver.h impure plain false false  QStringList QStringList subscribedToNotifications() const [] }
&{tables QSqlDriver::tables commendable unsupported_goEnum /work/build/qt5_workdir/w/s/qtbase/src/sql/kernel/qsqldriver.h impure plain false false  QStringList QStringList tables(QSql::TableType tableType) const [0xc820d10c20] }
&{unsubscribeFromNotification QSqlDriver::unsubscribeFromNotification commendable public /work/build/qt5_workdir/w/s/qtbase/src/sql/kernel/qsqldriver.h impure plain false false  bool bool unsubscribeFromNotification(const QString &name) [0xc820d10de0] }
&{~QSqlDriver QSqlDriver::~QSqlDriver commendable public /work/build/qt5_workdir/w/s/qtbase/src/sql/kernel/qsqldriver.h non destructor false false   ~QSqlDriver() [] }
########################################			ENUMS			########################################
&{DbmsType QSqlDriver::DbmsType commendable public  [0xc8212597e0 0xc821259860 0xc8212598e0 0xc821259960 0xc821259a00 0xc821259a80 0xc821259b00 0xc821259b80 0xc821259c20] false}
&{DriverFeature QSqlDriver::DriverFeature commendable public  [0xc821259dc0 0xc821259e40 0xc821259ec0 0xc821259f40 0xc821259fe0 0xc82120a080 0xc82120a160 0xc82120a220 0xc82120a2c0 0xc82120a340 0xc82120a3e0 0xc82120a4c0 0xc82120a580 0xc82120a620 0xc82120a6e0] false}
&{IdentifierType QSqlDriver::IdentifierType commendable public  [0xc82120a880 0xc82120a900] false}
&{NotificationSource QSqlDriver::NotificationSource commendable public  [0xc82120ab00 0xc82120ab80 0xc82120ac00] false}
&{StatementType QSqlDriver::StatementType commendable public  [0xc82120adc0 0xc82120ae40 0xc82120aec0 0xc82120af40 0xc82120afe0] false}
