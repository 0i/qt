########################################			FUNCTIONS			########################################
&{QLinkedListIterator QLinkedListIterator::QLinkedListIterator commendable public qlinkedlist.h non constructor false false   QLinkedListIterator(const QLinkedList<T> &list) [0xc8202dcce0] }
&{findNext QLinkedListIterator::findNext commendable public qlinkedlist.h non plain false false  bool bool findNext(const T &value) [0xc8202dd240] }
&{findPrevious QLinkedListIterator::findPrevious commendable public qlinkedlist.h non plain false false  bool bool findPrevious(const T &value) [0xc8202dd4e0] }
&{hasNext QLinkedListIterator::hasNext commendable public qlinkedlist.h non plain false false  bool bool hasNext() const [] }
&{hasPrevious QLinkedListIterator::hasPrevious commendable public qlinkedlist.h non plain false false  bool bool hasPrevious() const [] }
&{next QLinkedListIterator::next commendable public qlinkedlist.h non plain false false  const T & const T & next() [] }
&{operator= QLinkedListIterator::operator= commendable public qlinkedlist.h non plain false false  QLinkedListIterator & QLinkedListIterator & operator=(const QLinkedList<T> &list) [0xc820558360] }
&{peekNext QLinkedListIterator::peekNext commendable public qlinkedlist.h non plain false false  const T & const T & peekNext() const [] }
&{peekPrevious QLinkedListIterator::peekPrevious commendable public qlinkedlist.h non plain false false  const T & const T & peekPrevious() const [] }
&{previous QLinkedListIterator::previous commendable public qlinkedlist.h non plain false false  const T & const T & previous() [] }
&{toBack QLinkedListIterator::toBack commendable public qlinkedlist.h non plain false false  void void toBack() [] }
&{toFront QLinkedListIterator::toFront commendable public qlinkedlist.h non plain false false  void void toFront() [] }
########################################			ENUMS			########################################
