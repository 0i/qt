########################################			FUNCTIONS			########################################
&{setComparisonFunction QOpenGLTexture::setComparisonFunction commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.cpp non plain false false  void void setComparisonFunction(ComparisonFunction function) [0xc822063c60] }
&{~QOpenGLTexture QOpenGLTexture::~QOpenGLTexture commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.cpp non destructor false false   ~QOpenGLTexture() [] }
&{QOpenGLTexture QOpenGLTexture::QOpenGLTexture commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non constructor false false   QOpenGLTexture(Target target) [0xc82209d5c0] }
&{QOpenGLTexture QOpenGLTexture::QOpenGLTexture commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non constructor false true 2  QOpenGLTexture(const QImage &image, MipMapGeneration genMipMaps) [0xc82209d760 0xc82209d7e0] }
&{allocateStorage QOpenGLTexture::allocateStorage commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  void void allocateStorage() [] }
&{allocateStorage QOpenGLTexture::allocateStorage commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false true 2 void void allocateStorage(PixelFormat pixelFormat, PixelType pixelType) [0xc82209dac0 0xc82209db40] }
&{bind QOpenGLTexture::bind commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  void void bind() [] }
&{bind QOpenGLTexture::bind commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false true 2 void void bind(uint unit, TextureUnitReset reset) [0xc82209dde0 0xc82209de80] }
&{borderColor QOpenGLTexture::borderColor commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  QColor QColor borderColor() const [] }
&{borderColor QOpenGLTexture::borderColor commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false true 2 void void borderColor(float *border) const [0xc8220ac180] }
&{borderColor QOpenGLTexture::borderColor commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false true 3 void void borderColor(int *border) const [0xc8220ac320] }
&{borderColor QOpenGLTexture::borderColor commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false true 4 void void borderColor(unsigned int *border) const [0xc8220ac4c0] }
&{boundTextureId QOpenGLTexture::boundTextureId commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain true false  GLuint GLuint boundTextureId(BindingTarget target) [0xc8220ac660] }
&{boundTextureId QOpenGLTexture::boundTextureId commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain true true 2 GLuint GLuint boundTextureId(uint unit, BindingTarget target) [0xc8220ac800 0xc8220ac880] }
&{comparisonFunction QOpenGLTexture::comparisonFunction commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  ComparisonFunction ComparisonFunction comparisonFunction() const [] }
&{comparisonMode QOpenGLTexture::comparisonMode commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  ComparisonMode ComparisonMode comparisonMode() const [] }
&{create QOpenGLTexture::create commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  bool bool create() [] }
&{createTextureView QOpenGLTexture::createTextureView commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  QOpenGLTexture * QOpenGLTexture * createTextureView(Target target, TextureFormat viewFormat, int minimumMipmapLevel, int maximumMipmapLevel, int minimumLayer, int maximumLayer) const [0xc8220acd00 0xc8220acd80 0xc8220ace20 0xc8220acf00 0xc8220acfe0 0xc8220ad060] }
&{depth QOpenGLTexture::depth commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  int int depth() const [] }
&{depthStencilMode QOpenGLTexture::depthStencilMode commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  DepthStencilMode DepthStencilMode depthStencilMode() const [] }
&{destroy QOpenGLTexture::destroy commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  void void destroy() [] }
&{faces QOpenGLTexture::faces commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  int int faces() const [] }
&{format QOpenGLTexture::format commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  TextureFormat TextureFormat format() const [] }
&{generateMipMaps QOpenGLTexture::generateMipMaps commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  void void generateMipMaps() [] }
&{generateMipMaps QOpenGLTexture::generateMipMaps commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false true 2 void void generateMipMaps(int baseLevel, bool resetBaseLevel) [0xc8220ad880 0xc8220ad900] }
&{hasFeature QOpenGLTexture::hasFeature commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain true false  bool bool hasFeature(Feature feature) [0xc8220adb20] }
&{height QOpenGLTexture::height commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  int int height() const [] }
&{isAutoMipMapGenerationEnabled QOpenGLTexture::isAutoMipMapGenerationEnabled commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  bool bool isAutoMipMapGenerationEnabled() const [] }
&{isBound QOpenGLTexture::isBound commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false true 2 bool bool isBound(uint unit) [0xc8220adf40] }
&{isBound QOpenGLTexture::isBound commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  bool bool isBound() const [] }
&{isCreated QOpenGLTexture::isCreated commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  bool bool isCreated() const [] }
&{isFixedSamplePositions QOpenGLTexture::isFixedSamplePositions commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  bool bool isFixedSamplePositions() const [] }
&{isStorageAllocated QOpenGLTexture::isStorageAllocated commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  bool bool isStorageAllocated() const [] }
&{isTextureView QOpenGLTexture::isTextureView commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  bool bool isTextureView() const [] }
&{layers QOpenGLTexture::layers commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  int int layers() const [] }
&{levelOfDetailRange QOpenGLTexture::levelOfDetailRange commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  QPair<float, float> QPair<float, float> levelOfDetailRange() const [] }
&{levelofDetailBias QOpenGLTexture::levelofDetailBias commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  float float levelofDetailBias() const [] }
&{magnificationFilter QOpenGLTexture::magnificationFilter commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  Filter Filter magnificationFilter() const [] }
&{maximumAnisotropy QOpenGLTexture::maximumAnisotropy commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  float float maximumAnisotropy() const [] }
&{maximumLevelOfDetail QOpenGLTexture::maximumLevelOfDetail commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  float float maximumLevelOfDetail() const [] }
&{maximumMipLevels QOpenGLTexture::maximumMipLevels commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  int int maximumMipLevels() const [] }
&{minMagFilters QOpenGLTexture::minMagFilters commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  QPair<Filter, Filter> QPair<Filter, Filter> minMagFilters() const [] }
&{minificationFilter QOpenGLTexture::minificationFilter commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  Filter Filter minificationFilter() const [] }
&{minimumLevelOfDetail QOpenGLTexture::minimumLevelOfDetail commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  float float minimumLevelOfDetail() const [] }
&{mipBaseLevel QOpenGLTexture::mipBaseLevel commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  int int mipBaseLevel() const [] }
&{mipLevelRange QOpenGLTexture::mipLevelRange commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  QPair<int, int> QPair<int, int> mipLevelRange() const [] }
&{mipLevels QOpenGLTexture::mipLevels commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  int int mipLevels() const [] }
&{mipMaxLevel QOpenGLTexture::mipMaxLevel commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  int int mipMaxLevel() const [] }
&{release QOpenGLTexture::release commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  void void release() [] }
&{release QOpenGLTexture::release commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false true 2 void void release(uint unit, TextureUnitReset reset) [0xc8220c55e0 0xc8220c5680] }
&{samples QOpenGLTexture::samples commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  int int samples() const [] }
&{setAutoMipMapGenerationEnabled QOpenGLTexture::setAutoMipMapGenerationEnabled commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  void void setAutoMipMapGenerationEnabled(bool enabled) [0xc8220c5960] }
&{setBorderColor QOpenGLTexture::setBorderColor commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  void void setBorderColor(QColor color) [0xc8220c5b00] }
&{setBorderColor QOpenGLTexture::setBorderColor commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false true 2 void void setBorderColor(float r, float g, float b, float a) [0xc8220c5ca0 0xc8220c5d20 0xc8220c5da0 0xc8220c5e20] }
&{setBorderColor QOpenGLTexture::setBorderColor commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false true 3 void void setBorderColor(int r, int g, int b, int a) [0xc8220c5fc0 0xc821de2040 0xc821de20c0 0xc821de2140] }
&{setBorderColor QOpenGLTexture::setBorderColor commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false true 4 void void setBorderColor(uint r, uint g, uint b, uint a) [0xc821de22e0 0xc821de2360 0xc821de23e0 0xc821de2460] }
&{setComparisonMode QOpenGLTexture::setComparisonMode commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  void void setComparisonMode(ComparisonMode mode) [0xc821de2600] }
&{setCompressedData QOpenGLTexture::setCompressedData commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false true 4 void void setCompressedData(int dataSize, const void *data, const QOpenGLPixelTransferOptions * const options) [0xc821de27a0 0xc821de2820 0xc821de28a0] }
&{setCompressedData QOpenGLTexture::setCompressedData commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false true 3 void void setCompressedData(int mipLevel, int dataSize, const void *data, const QOpenGLPixelTransferOptions * const options) [0xc821de2ce0 0xc821de2d60 0xc821de2de0 0xc821de2e60] }
&{setCompressedData QOpenGLTexture::setCompressedData commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  void void setCompressedData(int mipLevel, int layer, CubeMapFace cubeFace, int dataSize, const void *data, const QOpenGLPixelTransferOptions * const options) [0xc821de3320 0xc821de33a0 0xc821de3420 0xc821de34a0 0xc821de3540 0xc821de35c0] }
&{setCompressedData QOpenGLTexture::setCompressedData commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false true 2 void void setCompressedData(int mipLevel, int layer, int dataSize, const void *data, const QOpenGLPixelTransferOptions * const options) [0xc821de3ba0 0xc821de3c20 0xc821de3ca0 0xc821de3d20 0xc821de3dc0] }
&{setData QOpenGLTexture::setData commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false true 4 void void setData(PixelFormat sourceFormat, PixelType sourceType, const void *data, const QOpenGLPixelTransferOptions * const options) [0xc821df4360 0xc821df43e0 0xc821df4460 0xc821df44e0] }
&{setData QOpenGLTexture::setData commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false true 9 void void setData(const QImage &image, MipMapGeneration genMipMaps) [0xc821df49c0 0xc821df4a40] }
&{setData QOpenGLTexture::setData commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false true 3 void void setData(int mipLevel, PixelFormat sourceFormat, PixelType sourceType, const void *data, const QOpenGLPixelTransferOptions * const options) [0xc821df4c00 0xc821df4c80 0xc821df4d00 0xc821df4d80 0xc821df4e20] }
&{setData QOpenGLTexture::setData commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  void void setData(int mipLevel, int layer, CubeMapFace cubeFace, PixelFormat sourceFormat, PixelType sourceType, const void *data, const QOpenGLPixelTransferOptions * const options) [0xc821df53a0 0xc821df5420 0xc821df54a0 0xc821df5520 0xc821df55c0 0xc821df5640 0xc821df56c0] }
&{setData QOpenGLTexture::setData commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false true 2 void void setData(int mipLevel, int layer, PixelFormat sourceFormat, PixelType sourceType, const void *data, const QOpenGLPixelTransferOptions * const options) [0xc821df5d40 0xc821df5dc0 0xc821df5e40 0xc821df5ec0 0xc821df5f60 0xc821df5fe0] }
&{setDepthStencilMode QOpenGLTexture::setDepthStencilMode commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  void void setDepthStencilMode(DepthStencilMode mode) [0xc821e065c0] }
&{setFixedSamplePositions QOpenGLTexture::setFixedSamplePositions commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  void void setFixedSamplePositions(bool fixed) [0xc821e06760] }
&{setFormat QOpenGLTexture::setFormat commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  void void setFormat(TextureFormat format) [0xc821e06920] }
&{setLayers QOpenGLTexture::setLayers commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  void void setLayers(int layers) [0xc821e06b40] }
&{setLevelOfDetailRange QOpenGLTexture::setLevelOfDetailRange commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  void void setLevelOfDetailRange(float min, float max) [0xc821e06ce0 0xc821e06d60] }
&{setLevelofDetailBias QOpenGLTexture::setLevelofDetailBias commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  void void setLevelofDetailBias(float bias) [0xc821e06f00] }
&{setMagnificationFilter QOpenGLTexture::setMagnificationFilter commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  void void setMagnificationFilter(Filter filter) [0xc821e070a0] }
&{setMaximumAnisotropy QOpenGLTexture::setMaximumAnisotropy commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  void void setMaximumAnisotropy(float anisotropy) [0xc821e07240] }
&{setMaximumLevelOfDetail QOpenGLTexture::setMaximumLevelOfDetail commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  void void setMaximumLevelOfDetail(float value) [0xc821e073e0] }
&{setMinMagFilters QOpenGLTexture::setMinMagFilters commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  void void setMinMagFilters(Filter minificationFilter, Filter magnificationFilter) [0xc821e075a0 0xc821e07680] }
&{setMinificationFilter QOpenGLTexture::setMinificationFilter commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  void void setMinificationFilter(Filter filter) [0xc821e07860] }
&{setMinimumLevelOfDetail QOpenGLTexture::setMinimumLevelOfDetail commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  void void setMinimumLevelOfDetail(float value) [0xc821e07a00] }
&{setMipBaseLevel QOpenGLTexture::setMipBaseLevel commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  void void setMipBaseLevel(int baseLevel) [0xc821e07ba0] }
&{setMipLevelRange QOpenGLTexture::setMipLevelRange commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  void void setMipLevelRange(int baseLevel, int maxLevel) [0xc821e07d40 0xc821e07dc0] }
&{setMipLevels QOpenGLTexture::setMipLevels commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  void void setMipLevels(int levels) [0xc821e07fe0] }
&{setMipMaxLevel QOpenGLTexture::setMipMaxLevel commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  void void setMipMaxLevel(int maxLevel) [0xc821e18180] }
&{setSamples QOpenGLTexture::setSamples commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  void void setSamples(int samples) [0xc821e183a0] }
&{setSize QOpenGLTexture::setSize commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  void void setSize(int width, int height, int depth) [0xc821e18560 0xc821e185e0 0xc821e18660] }
&{setSwizzleMask QOpenGLTexture::setSwizzleMask commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  void void setSwizzleMask(SwizzleComponent component, SwizzleValue value) [0xc821e18800 0xc821e18880] }
&{setSwizzleMask QOpenGLTexture::setSwizzleMask commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false true 2 void void setSwizzleMask(SwizzleValue r, SwizzleValue g, SwizzleValue b, SwizzleValue a) [0xc821e18a20 0xc821e18aa0 0xc821e18b20 0xc821e18ba0] }
&{setWrapMode QOpenGLTexture::setWrapMode commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false true 2 void void setWrapMode(CoordinateDirection direction, WrapMode mode) [0xc821e18d60 0xc821e18e20] }
&{setWrapMode QOpenGLTexture::setWrapMode commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  void void setWrapMode(WrapMode mode) [0xc821e19040] }
&{swizzleMask QOpenGLTexture::swizzleMask commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  SwizzleValue SwizzleValue swizzleMask(SwizzleComponent component) const [0xc821e19200] }
&{target QOpenGLTexture::target commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  Target Target target() const [] }
&{textureId QOpenGLTexture::textureId commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  GLuint GLuint textureId() const [] }
&{width QOpenGLTexture::width commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  int int width() const [] }
&{wrapMode QOpenGLTexture::wrapMode commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  WrapMode WrapMode wrapMode(CoordinateDirection direction) const [0xc821e197a0] }
########################################			ENUMS			########################################
&{BindingTarget QOpenGLTexture::BindingTarget commendable public  [0xc822063fc0 0xc822072060 0xc822072120 0xc8220721c0 0xc8220722a0 0xc822072340 0xc822072420 0xc822072500 0xc822072600 0xc8220726e0 0xc8220727c0] false}
&{ComparisonFunction QOpenGLTexture::ComparisonFunction commendable public  [0xc8220729a0 0xc822072a40 0xc822072b00 0xc822072b80 0xc822072c20 0xc822072ca0 0xc822072d20 0xc822072da0] false}
&{ComparisonMode QOpenGLTexture::ComparisonMode commendable public  [0xc822072f60 0xc822073020] false}
&{CoordinateDirection QOpenGLTexture::CoordinateDirection commendable public  [0xc8220731c0 0xc822073240 0xc8220732c0] false}
&{CubeMapFace QOpenGLTexture::CubeMapFace commendable public  [0xc822073480 0xc822073500 0xc822073580 0xc822073600 0xc8220736a0 0xc822073720] false}
&{DepthStencilMode QOpenGLTexture::DepthStencilMode commendable public  [0xc8220738c0 0xc822073940] false}
&{Feature QOpenGLTexture::Feature commendable public QOpenGLTexture::Features [0xc822073b60 0xc822073c00 0xc822073cc0 0xc822073d40 0xc822073de0 0xc822073e80 0xc822073f40 0xc822073fe0 0xc82207c0c0 0xc82207c140 0xc82207c1e0 0xc82207c2a0 0xc82207c340 0xc82207c400 0xc82207c4a0 0xc82207c580] false}
&{Filter QOpenGLTexture::Filter commendable public  [0xc82207c780 0xc82207c800 0xc82207c8a0 0xc82207c980 0xc82207ca80 0xc82207cb60] false}
&{MipMapGeneration QOpenGLTexture::MipMapGeneration commendable public  [0xc82207cd60 0xc82207ce00] false}
&{PixelFormat QOpenGLTexture::PixelFormat commendable public  [0xc82207cfe0 0xc82207d060 0xc82207d0e0 0xc82207d160 0xc82207d200 0xc82207d280 0xc82207d300 0xc82207d380 0xc82207d420 0xc82207d4a0 0xc82207d520 0xc82207d5a0 0xc82207d620 0xc82207d6a0 0xc82207d720 0xc82207d7a0 0xc82207d840 0xc82207d8c0 0xc82207d940] false}
&{PixelType QOpenGLTexture::PixelType commendable public  [0xc82207dae0 0xc82207db60 0xc82207dbe0 0xc82207dc60 0xc82207dd00 0xc82207dd80 0xc82207de00 0xc82207de80 0xc82207df20 0xc82207dfa0 0xc822084020 0xc8220840a0 0xc822084120 0xc8220841a0 0xc822084220 0xc8220842c0 0xc8220843a0 0xc822084440 0xc822084500 0xc822084580 0xc822084600 0xc822084680 0xc822084700 0xc8220847a0 0xc822084860 0xc822084900] false}
&{SwizzleComponent QOpenGLTexture::SwizzleComponent commendable public  [0xc822084ae0 0xc822084b60 0xc822084be0 0xc822084c60] false}
&{SwizzleValue QOpenGLTexture::SwizzleValue commendable public  [0xc822084e00 0xc822084e80 0xc822084f00 0xc822084f80 0xc822085020 0xc8220850a0] false}
&{Target QOpenGLTexture::Target commendable public  [0xc822085260 0xc8220852e0 0xc822085360 0xc8220853e0 0xc822085480 0xc822085500 0xc8220855a0 0xc822085680 0xc822085780 0xc822085840 0xc8220858c0] false}
&{TextureFormat QOpenGLTexture::TextureFormat commendable public  [0xc822085a60 0xc822085ae0 0xc822085b60 0xc822085be0 0xc822085c80 0xc822085d00 0xc822085d80 0xc822085e00 0xc822085ea0 0xc822085f20 0xc822085fa0 0xc822092020 0xc8220920a0 0xc822092120 0xc8220921a0 0xc822092220 0xc8220922c0 0xc822092340 0xc8220923c0 0xc822092440 0xc8220924c0 0xc822092540 0xc8220925c0 0xc822092640 0xc8220926c0 0xc822092740 0xc8220927c0 0xc822092840 0xc8220928c0 0xc822092940 0xc8220929c0 0xc822092a40 0xc822092ae0 0xc822092b60 0xc822092be0 0xc822092c60 0xc822092ce0 0xc822092d60 0xc822092de0 0xc822092e60 0xc822092ee0 0xc822092f60 0xc822092fe0 0xc822093060 0xc8220930e0 0xc822093160 0xc8220931e0 0xc822093260 0xc8220932e0 0xc822093360 0xc8220933e0 0xc822093460 0xc8220934e0 0xc822093560 0xc8220935e0 0xc822093660 0xc8220936e0 0xc822093760 0xc8220937e0 0xc822093860 0xc8220938e0 0xc822093960 0xc8220939e0 0xc822093a60 0xc822093b00 0xc822093b80 0xc822093c00 0xc822093c80 0xc822093d00 0xc822093d80 0xc822093e00 0xc822093ea0 0xc822093f80 0xc82209c040 0xc82209c0c0 0xc82209c140 0xc82209c1c0 0xc82209c240 0xc82209c2c0 0xc82209c340 0xc82209c3e0 0xc82209c4c0 0xc82209c580 0xc82209c620 0xc82209c6e0 0xc82209c760 0xc82209c7e0 0xc82209c860 0xc82209c8e0 0xc82209c960 0xc82209c9e0 0xc82209ca60 0xc82209cae0 0xc82209cb60 0xc82209cbe0 0xc82209cc60 0xc82209cd00] false}
&{TextureUnitReset QOpenGLTexture::TextureUnitReset commendable public  [0xc82209cee0 0xc82209cf80] false}
&{WrapMode QOpenGLTexture::WrapMode commendable public  [0xc82209d180 0xc82209d200 0xc82209d280 0xc82209d300] false}
