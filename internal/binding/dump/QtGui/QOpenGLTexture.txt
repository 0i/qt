########################################			FUNCTIONS			########################################
&{setComparisonFunction QOpenGLTexture::setComparisonFunction commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.cpp non plain false false  void void setComparisonFunction(ComparisonFunction function) [0xc822aa6cc0] }
&{~QOpenGLTexture QOpenGLTexture::~QOpenGLTexture commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.cpp non destructor false false   ~QOpenGLTexture() [] }
&{QOpenGLTexture QOpenGLTexture::QOpenGLTexture commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non constructor false false   QOpenGLTexture(Target target) [0xc822b92620] }
&{QOpenGLTexture QOpenGLTexture::QOpenGLTexture commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non constructor false true 2  QOpenGLTexture(const QImage &image, MipMapGeneration genMipMaps) [0xc822b927c0 0xc822b92840] }
&{allocateStorage QOpenGLTexture::allocateStorage commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  void void allocateStorage() [] }
&{allocateStorage QOpenGLTexture::allocateStorage commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false true 2 void void allocateStorage(PixelFormat pixelFormat, PixelType pixelType) [0xc822b92b20 0xc822b92ba0] }
&{bind QOpenGLTexture::bind commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  void void bind() [] }
&{bind QOpenGLTexture::bind commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false true 2 void void bind(uint unit, TextureUnitReset reset) [0xc822b92e40 0xc822b92ee0] }
&{borderColor QOpenGLTexture::borderColor commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  QColor QColor borderColor() const [] }
&{borderColor QOpenGLTexture::borderColor commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false true 2 void void borderColor(float *border) const [0xc822b931e0] }
&{borderColor QOpenGLTexture::borderColor commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false true 3 void void borderColor(int *border) const [0xc822b93380] }
&{borderColor QOpenGLTexture::borderColor commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false true 4 void void borderColor(unsigned int *border) const [0xc822b93520] }
&{boundTextureId QOpenGLTexture::boundTextureId commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain true false  GLuint GLuint boundTextureId(BindingTarget target) [0xc822b936c0] }
&{boundTextureId QOpenGLTexture::boundTextureId commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain true true 2 GLuint GLuint boundTextureId(uint unit, BindingTarget target) [0xc822b93860 0xc822b938e0] }
&{comparisonFunction QOpenGLTexture::comparisonFunction commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  ComparisonFunction ComparisonFunction comparisonFunction() const [] }
&{comparisonMode QOpenGLTexture::comparisonMode commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  ComparisonMode ComparisonMode comparisonMode() const [] }
&{create QOpenGLTexture::create commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  bool bool create() [] }
&{createTextureView QOpenGLTexture::createTextureView commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  QOpenGLTexture * QOpenGLTexture * createTextureView(Target target, TextureFormat viewFormat, int minimumMipmapLevel, int maximumMipmapLevel, int minimumLayer, int maximumLayer) const [0xc822b93d60 0xc822b93de0 0xc822b93e80 0xc822b93f60 0xc822baa040 0xc822baa0c0] }
&{depth QOpenGLTexture::depth commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  int int depth() const [] }
&{depthStencilMode QOpenGLTexture::depthStencilMode commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  DepthStencilMode DepthStencilMode depthStencilMode() const [] }
&{destroy QOpenGLTexture::destroy commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  void void destroy() [] }
&{faces QOpenGLTexture::faces commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  int int faces() const [] }
&{format QOpenGLTexture::format commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  TextureFormat TextureFormat format() const [] }
&{generateMipMaps QOpenGLTexture::generateMipMaps commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  void void generateMipMaps() [] }
&{generateMipMaps QOpenGLTexture::generateMipMaps commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false true 2 void void generateMipMaps(int baseLevel, bool resetBaseLevel) [0xc822baa8e0 0xc822baa960] }
&{hasFeature QOpenGLTexture::hasFeature commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain true false  bool bool hasFeature(Feature feature) [0xc822baab80] }
&{height QOpenGLTexture::height commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  int int height() const [] }
&{isAutoMipMapGenerationEnabled QOpenGLTexture::isAutoMipMapGenerationEnabled commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  bool bool isAutoMipMapGenerationEnabled() const [] }
&{isBound QOpenGLTexture::isBound commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false true 2 bool bool isBound(uint unit) [0xc822baafa0] }
&{isBound QOpenGLTexture::isBound commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  bool bool isBound() const [] }
&{isCreated QOpenGLTexture::isCreated commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  bool bool isCreated() const [] }
&{isFixedSamplePositions QOpenGLTexture::isFixedSamplePositions commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  bool bool isFixedSamplePositions() const [] }
&{isStorageAllocated QOpenGLTexture::isStorageAllocated commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  bool bool isStorageAllocated() const [] }
&{isTextureView QOpenGLTexture::isTextureView commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  bool bool isTextureView() const [] }
&{layers QOpenGLTexture::layers commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  int int layers() const [] }
&{levelOfDetailRange QOpenGLTexture::levelOfDetailRange commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  QPair<float, float> QPair<float, float> levelOfDetailRange() const [] }
&{levelofDetailBias QOpenGLTexture::levelofDetailBias commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  float float levelofDetailBias() const [] }
&{magnificationFilter QOpenGLTexture::magnificationFilter commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  Filter Filter magnificationFilter() const [] }
&{maximumAnisotropy QOpenGLTexture::maximumAnisotropy commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  float float maximumAnisotropy() const [] }
&{maximumLevelOfDetail QOpenGLTexture::maximumLevelOfDetail commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  float float maximumLevelOfDetail() const [] }
&{maximumMipLevels QOpenGLTexture::maximumMipLevels commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  int int maximumMipLevels() const [] }
&{minMagFilters QOpenGLTexture::minMagFilters commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  QPair<Filter, Filter> QPair<Filter, Filter> minMagFilters() const [] }
&{minificationFilter QOpenGLTexture::minificationFilter commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  Filter Filter minificationFilter() const [] }
&{minimumLevelOfDetail QOpenGLTexture::minimumLevelOfDetail commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  float float minimumLevelOfDetail() const [] }
&{mipBaseLevel QOpenGLTexture::mipBaseLevel commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  int int mipBaseLevel() const [] }
&{mipLevelRange QOpenGLTexture::mipLevelRange commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  QPair<int, int> QPair<int, int> mipLevelRange() const [] }
&{mipLevels QOpenGLTexture::mipLevels commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  int int mipLevels() const [] }
&{mipMaxLevel QOpenGLTexture::mipMaxLevel commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  int int mipMaxLevel() const [] }
&{release QOpenGLTexture::release commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  void void release() [] }
&{release QOpenGLTexture::release commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false true 2 void void release(uint unit, TextureUnitReset reset) [0xc8223ea640 0xc8223ea6e0] }
&{samples QOpenGLTexture::samples commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  int int samples() const [] }
&{setAutoMipMapGenerationEnabled QOpenGLTexture::setAutoMipMapGenerationEnabled commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  void void setAutoMipMapGenerationEnabled(bool enabled) [0xc8223ea9c0] }
&{setBorderColor QOpenGLTexture::setBorderColor commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  void void setBorderColor(QColor color) [0xc8223eab60] }
&{setBorderColor QOpenGLTexture::setBorderColor commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false true 2 void void setBorderColor(float r, float g, float b, float a) [0xc8223ead00 0xc8223ead80 0xc8223eae00 0xc8223eae80] }
&{setBorderColor QOpenGLTexture::setBorderColor commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false true 3 void void setBorderColor(int r, int g, int b, int a) [0xc8223eb020 0xc8223eb0a0 0xc8223eb120 0xc8223eb1a0] }
&{setBorderColor QOpenGLTexture::setBorderColor commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false true 4 void void setBorderColor(uint r, uint g, uint b, uint a) [0xc8223eb340 0xc8223eb3c0 0xc8223eb440 0xc8223eb4c0] }
&{setComparisonMode QOpenGLTexture::setComparisonMode commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  void void setComparisonMode(ComparisonMode mode) [0xc8223eb660] }
&{setCompressedData QOpenGLTexture::setCompressedData commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false true 4 void void setCompressedData(int dataSize, const void *data, const QOpenGLPixelTransferOptions * const options) [0xc8223eb800 0xc8223eb880 0xc8223eb900] }
&{setCompressedData QOpenGLTexture::setCompressedData commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false true 3 void void setCompressedData(int mipLevel, int dataSize, const void *data, const QOpenGLPixelTransferOptions * const options) [0xc8223ebd40 0xc8223ebdc0 0xc8223ebe40 0xc8223ebec0] }
&{setCompressedData QOpenGLTexture::setCompressedData commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  void void setCompressedData(int mipLevel, int layer, CubeMapFace cubeFace, int dataSize, const void *data, const QOpenGLPixelTransferOptions * const options) [0xc8223fe380 0xc8223fe400 0xc8223fe480 0xc8223fe500 0xc8223fe5a0 0xc8223fe620] }
&{setCompressedData QOpenGLTexture::setCompressedData commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false true 2 void void setCompressedData(int mipLevel, int layer, int dataSize, const void *data, const QOpenGLPixelTransferOptions * const options) [0xc8223fec00 0xc8223fec80 0xc8223fed00 0xc8223fed80 0xc8223fee20] }
&{setData QOpenGLTexture::setData commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false true 4 void void setData(PixelFormat sourceFormat, PixelType sourceType, const void *data, const QOpenGLPixelTransferOptions * const options) [0xc8223ff3c0 0xc8223ff440 0xc8223ff4c0 0xc8223ff540] }
&{setData QOpenGLTexture::setData commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false true 9 void void setData(const QImage &image, MipMapGeneration genMipMaps) [0xc8223ffa20 0xc8223ffaa0] }
&{setData QOpenGLTexture::setData commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false true 3 void void setData(int mipLevel, PixelFormat sourceFormat, PixelType sourceType, const void *data, const QOpenGLPixelTransferOptions * const options) [0xc8223ffc60 0xc8223ffce0 0xc8223ffd60 0xc8223ffde0 0xc8223ffe80] }
&{setData QOpenGLTexture::setData commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  void void setData(int mipLevel, int layer, CubeMapFace cubeFace, PixelFormat sourceFormat, PixelType sourceType, const void *data, const QOpenGLPixelTransferOptions * const options) [0xc822414400 0xc822414480 0xc822414500 0xc822414580 0xc822414620 0xc8224146a0 0xc822414720] }
&{setData QOpenGLTexture::setData commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false true 2 void void setData(int mipLevel, int layer, PixelFormat sourceFormat, PixelType sourceType, const void *data, const QOpenGLPixelTransferOptions * const options) [0xc822414da0 0xc822414e20 0xc822414ea0 0xc822414f20 0xc822414fc0 0xc822415040] }
&{setDepthStencilMode QOpenGLTexture::setDepthStencilMode commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  void void setDepthStencilMode(DepthStencilMode mode) [0xc822415620] }
&{setFixedSamplePositions QOpenGLTexture::setFixedSamplePositions commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  void void setFixedSamplePositions(bool fixed) [0xc8224157c0] }
&{setFormat QOpenGLTexture::setFormat commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  void void setFormat(TextureFormat format) [0xc822415980] }
&{setLayers QOpenGLTexture::setLayers commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  void void setLayers(int layers) [0xc822415ba0] }
&{setLevelOfDetailRange QOpenGLTexture::setLevelOfDetailRange commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  void void setLevelOfDetailRange(float min, float max) [0xc822415d40 0xc822415dc0] }
&{setLevelofDetailBias QOpenGLTexture::setLevelofDetailBias commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  void void setLevelofDetailBias(float bias) [0xc822415f60] }
&{setMagnificationFilter QOpenGLTexture::setMagnificationFilter commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  void void setMagnificationFilter(Filter filter) [0xc822420100] }
&{setMaximumAnisotropy QOpenGLTexture::setMaximumAnisotropy commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  void void setMaximumAnisotropy(float anisotropy) [0xc8224202a0] }
&{setMaximumLevelOfDetail QOpenGLTexture::setMaximumLevelOfDetail commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  void void setMaximumLevelOfDetail(float value) [0xc822420440] }
&{setMinMagFilters QOpenGLTexture::setMinMagFilters commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  void void setMinMagFilters(Filter minificationFilter, Filter magnificationFilter) [0xc822420600 0xc8224206e0] }
&{setMinificationFilter QOpenGLTexture::setMinificationFilter commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  void void setMinificationFilter(Filter filter) [0xc8224208c0] }
&{setMinimumLevelOfDetail QOpenGLTexture::setMinimumLevelOfDetail commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  void void setMinimumLevelOfDetail(float value) [0xc822420a60] }
&{setMipBaseLevel QOpenGLTexture::setMipBaseLevel commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  void void setMipBaseLevel(int baseLevel) [0xc822420c00] }
&{setMipLevelRange QOpenGLTexture::setMipLevelRange commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  void void setMipLevelRange(int baseLevel, int maxLevel) [0xc822420da0 0xc822420e20] }
&{setMipLevels QOpenGLTexture::setMipLevels commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  void void setMipLevels(int levels) [0xc822421040] }
&{setMipMaxLevel QOpenGLTexture::setMipMaxLevel commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  void void setMipMaxLevel(int maxLevel) [0xc8224211e0] }
&{setSamples QOpenGLTexture::setSamples commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  void void setSamples(int samples) [0xc822421400] }
&{setSize QOpenGLTexture::setSize commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  void void setSize(int width, int height, int depth) [0xc8224215c0 0xc822421640 0xc8224216c0] }
&{setSwizzleMask QOpenGLTexture::setSwizzleMask commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  void void setSwizzleMask(SwizzleComponent component, SwizzleValue value) [0xc822421860 0xc8224218e0] }
&{setSwizzleMask QOpenGLTexture::setSwizzleMask commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false true 2 void void setSwizzleMask(SwizzleValue r, SwizzleValue g, SwizzleValue b, SwizzleValue a) [0xc822421a80 0xc822421b00 0xc822421b80 0xc822421c00] }
&{setWrapMode QOpenGLTexture::setWrapMode commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false true 2 void void setWrapMode(CoordinateDirection direction, WrapMode mode) [0xc822421dc0 0xc822421e80] }
&{setWrapMode QOpenGLTexture::setWrapMode commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  void void setWrapMode(WrapMode mode) [0xc8224320a0] }
&{swizzleMask QOpenGLTexture::swizzleMask commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  SwizzleValue SwizzleValue swizzleMask(SwizzleComponent component) const [0xc822432260] }
&{target QOpenGLTexture::target commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  Target Target target() const [] }
&{textureId QOpenGLTexture::textureId commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  GLuint GLuint textureId() const [] }
&{width QOpenGLTexture::width commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  int int width() const [] }
&{wrapMode QOpenGLTexture::wrapMode commendable public /work/build/qt5_workdir/w/s/qtbase/src/gui/opengl/qopengltexture.h non plain false false  WrapMode WrapMode wrapMode(CoordinateDirection direction) const [0xc822432800] }
########################################			ENUMS			########################################
&{BindingTarget QOpenGLTexture::BindingTarget commendable public  [0xc822aa7020 0xc822aa70c0 0xc822aa7180 0xc822aa7220 0xc822aa7300 0xc822aa73a0 0xc822aa7480 0xc822aa7560 0xc822aa7660 0xc822aa7740 0xc822aa7820] false}
&{ComparisonFunction QOpenGLTexture::ComparisonFunction commendable public  [0xc822aa7a00 0xc822aa7aa0 0xc822aa7b60 0xc822aa7be0 0xc822aa7c80 0xc822aa7d00 0xc822aa7d80 0xc822aa7e00] false}
&{ComparisonMode QOpenGLTexture::ComparisonMode commendable public  [0xc822aa7fc0 0xc822b6a080] false}
&{CoordinateDirection QOpenGLTexture::CoordinateDirection commendable public  [0xc822b6a220 0xc822b6a2a0 0xc822b6a320] false}
&{CubeMapFace QOpenGLTexture::CubeMapFace commendable public  [0xc822b6a4e0 0xc822b6a560 0xc822b6a5e0 0xc822b6a660 0xc822b6a700 0xc822b6a780] false}
&{DepthStencilMode QOpenGLTexture::DepthStencilMode commendable public  [0xc822b6a920 0xc822b6a9a0] false}
&{Feature QOpenGLTexture::Feature commendable public QOpenGLTexture::Features [0xc822b6abc0 0xc822b6ac60 0xc822b6ad20 0xc822b6ada0 0xc822b6ae40 0xc822b6aee0 0xc822b6afa0 0xc822b6b040 0xc822b6b120 0xc822b6b1a0 0xc822b6b240 0xc822b6b300 0xc822b6b3a0 0xc822b6b460 0xc822b6b500 0xc822b6b5e0] false}
&{Filter QOpenGLTexture::Filter commendable public  [0xc822b6b7e0 0xc822b6b860 0xc822b6b900 0xc822b6b9e0 0xc822b6bae0 0xc822b6bbc0] false}
&{MipMapGeneration QOpenGLTexture::MipMapGeneration commendable public  [0xc822b6bdc0 0xc822b6be60] false}
&{PixelFormat QOpenGLTexture::PixelFormat commendable public  [0xc822b74040 0xc822b740c0 0xc822b74140 0xc822b741c0 0xc822b74260 0xc822b742e0 0xc822b74360 0xc822b743e0 0xc822b74480 0xc822b74500 0xc822b74580 0xc822b74600 0xc822b74680 0xc822b74700 0xc822b74780 0xc822b74800 0xc822b748a0 0xc822b74920 0xc822b749a0] false}
&{PixelType QOpenGLTexture::PixelType commendable public  [0xc822b74b40 0xc822b74bc0 0xc822b74c40 0xc822b74cc0 0xc822b74d60 0xc822b74de0 0xc822b74e60 0xc822b74ee0 0xc822b74f80 0xc822b75000 0xc822b75080 0xc822b75100 0xc822b75180 0xc822b75200 0xc822b75280 0xc822b75320 0xc822b75400 0xc822b754a0 0xc822b75560 0xc822b755e0 0xc822b75660 0xc822b756e0 0xc822b75760 0xc822b75800 0xc822b758c0 0xc822b75960] false}
&{SwizzleComponent QOpenGLTexture::SwizzleComponent commendable public  [0xc822b75b40 0xc822b75bc0 0xc822b75c40 0xc822b75cc0] false}
&{SwizzleValue QOpenGLTexture::SwizzleValue commendable public  [0xc822b75e60 0xc822b75ee0 0xc822b75f60 0xc822b75fe0 0xc822b7c080 0xc822b7c100] false}
&{Target QOpenGLTexture::Target commendable public  [0xc822b7c2c0 0xc822b7c340 0xc822b7c3c0 0xc822b7c440 0xc822b7c4e0 0xc822b7c560 0xc822b7c600 0xc822b7c6e0 0xc822b7c7e0 0xc822b7c8a0 0xc822b7c920] false}
&{TextureFormat QOpenGLTexture::TextureFormat commendable public  [0xc822b7cac0 0xc822b7cb40 0xc822b7cbc0 0xc822b7cc40 0xc822b7cce0 0xc822b7cd60 0xc822b7cde0 0xc822b7ce60 0xc822b7cf00 0xc822b7cf80 0xc822b7d000 0xc822b7d080 0xc822b7d100 0xc822b7d180 0xc822b7d200 0xc822b7d280 0xc822b7d320 0xc822b7d3a0 0xc822b7d420 0xc822b7d4a0 0xc822b7d520 0xc822b7d5a0 0xc822b7d620 0xc822b7d6a0 0xc822b7d720 0xc822b7d7a0 0xc822b7d820 0xc822b7d8a0 0xc822b7d920 0xc822b7d9a0 0xc822b7da20 0xc822b7daa0 0xc822b7db40 0xc822b7dbc0 0xc822b7dc40 0xc822b7dcc0 0xc822b7dd40 0xc822b7ddc0 0xc822b7de40 0xc822b7dec0 0xc822b7df40 0xc822b7dfc0 0xc822b88040 0xc822b880c0 0xc822b88140 0xc822b881c0 0xc822b88240 0xc822b882c0 0xc822b88340 0xc822b883c0 0xc822b88440 0xc822b884c0 0xc822b88540 0xc822b885c0 0xc822b88640 0xc822b886c0 0xc822b88740 0xc822b887c0 0xc822b88840 0xc822b888c0 0xc822b88940 0xc822b889c0 0xc822b88a40 0xc822b88ac0 0xc822b88b60 0xc822b88be0 0xc822b88c60 0xc822b88ce0 0xc822b88d60 0xc822b88de0 0xc822b88e60 0xc822b88f00 0xc822b88fe0 0xc822b890a0 0xc822b89120 0xc822b891a0 0xc822b89220 0xc822b892a0 0xc822b89320 0xc822b893a0 0xc822b89440 0xc822b89520 0xc822b895e0 0xc822b89680 0xc822b89740 0xc822b897c0 0xc822b89840 0xc822b898c0 0xc822b89940 0xc822b899c0 0xc822b89a40 0xc822b89ac0 0xc822b89b40 0xc822b89bc0 0xc822b89c40 0xc822b89cc0 0xc822b89d60] false}
&{TextureUnitReset QOpenGLTexture::TextureUnitReset commendable public  [0xc822b89f40 0xc822b89fe0] false}
&{WrapMode QOpenGLTexture::WrapMode commendable public  [0xc822b921e0 0xc822b92260 0xc822b922e0 0xc822b92360] false}
