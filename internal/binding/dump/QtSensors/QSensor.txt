########################################			FUNCTIONS			########################################
&{availableDataRates QSensor::availableDataRates commendable unsupported_GoBodyOutputFailed /work/build/qt5_workdir/w/s/qtsensors/src/sensors/qsensor.cpp non plain false false  qrangelist qrangelist availableDataRates() const [] }
&{axesOrientationMode QSensor::axesOrientationMode commendable public /work/build/qt5_workdir/w/s/qtsensors/src/sensors/qsensor.cpp non plain false false  AxesOrientationMode AxesOrientationMode axesOrientationMode() const [] }
&{bufferSize QSensor::bufferSize commendable public /work/build/qt5_workdir/w/s/qtsensors/src/sensors/qsensor.cpp non plain false false  int int bufferSize() const [] }
&{currentOrientation QSensor::currentOrientation commendable public /work/build/qt5_workdir/w/s/qtsensors/src/sensors/qsensor.cpp non plain false false  int int currentOrientation() const [] }
&{dataRate QSensor::dataRate commendable public /work/build/qt5_workdir/w/s/qtsensors/src/sensors/qsensor.cpp non plain false false  int int dataRate() const [] }
&{description QSensor::description commendable public /work/build/qt5_workdir/w/s/qtsensors/src/sensors/qsensor.cpp non plain false false  QString QString description() const [] }
&{efficientBufferSize QSensor::efficientBufferSize commendable public /work/build/qt5_workdir/w/s/qtsensors/src/sensors/qsensor.cpp non plain false false  int int efficientBufferSize() const [] }
&{error QSensor::error commendable public /work/build/qt5_workdir/w/s/qtsensors/src/sensors/qsensor.cpp non plain false false  int int error() const [] }
&{identifier QSensor::identifier commendable public /work/build/qt5_workdir/w/s/qtsensors/src/sensors/qsensor.cpp non plain false false  QByteArray QByteArray identifier() const [] }
&{isActive QSensor::isActive commendable public /work/build/qt5_workdir/w/s/qtsensors/src/sensors/qsensor.cpp non plain false false  bool bool isActive() const [] }
&{isAlwaysOn QSensor::isAlwaysOn commendable public /work/build/qt5_workdir/w/s/qtsensors/src/sensors/qsensor.cpp non plain false false  bool bool isAlwaysOn() const [] }
&{isBusy QSensor::isBusy commendable public /work/build/qt5_workdir/w/s/qtsensors/src/sensors/qsensor.cpp non plain false false  bool bool isBusy() const [] }
&{isConnectedToBackend QSensor::isConnectedToBackend commendable public /work/build/qt5_workdir/w/s/qtsensors/src/sensors/qsensor.cpp non plain false false  bool bool isConnectedToBackend() const [] }
&{maxBufferSize QSensor::maxBufferSize commendable public /work/build/qt5_workdir/w/s/qtsensors/src/sensors/qsensor.cpp non plain false false  int int maxBufferSize() const [] }
&{outputRange QSensor::outputRange commendable public /work/build/qt5_workdir/w/s/qtsensors/src/sensors/qsensor.cpp non plain false false  int int outputRange() const [] }
&{outputRanges QSensor::outputRanges commendable unsupported_GoBodyOutputFailed /work/build/qt5_workdir/w/s/qtsensors/src/sensors/qsensor.cpp non plain false false  qoutputrangelist qoutputrangelist outputRanges() const [] }
&{reading QSensor::reading commendable public /work/build/qt5_workdir/w/s/qtsensors/src/sensors/qsensor.cpp non plain false false  QSensorReading * QSensorReading * reading() const [] }
&{setActive QSensor::setActive commendable public /work/build/qt5_workdir/w/s/qtsensors/src/sensors/qsensor.cpp non plain false false  void void setActive(bool active) [0xc82356ec40] }
&{setAlwaysOn QSensor::setAlwaysOn commendable public /work/build/qt5_workdir/w/s/qtsensors/src/sensors/qsensor.cpp non plain false false  void void setAlwaysOn(bool alwaysOn) [0xc82356f060] }
&{setAxesOrientationMode QSensor::setAxesOrientationMode commendable public /work/build/qt5_workdir/w/s/qtsensors/src/sensors/qsensor.cpp non plain false false  void void setAxesOrientationMode(AxesOrientationMode axesOrientationMode) [0xc82356f4a0] }
&{setBufferSize QSensor::setBufferSize commendable public /work/build/qt5_workdir/w/s/qtsensors/src/sensors/qsensor.cpp non plain false false  void void setBufferSize(int bufferSize) [0xc82356f900] }
&{setDataRate QSensor::setDataRate commendable public /work/build/qt5_workdir/w/s/qtsensors/src/sensors/qsensor.cpp non plain false false  void void setDataRate(int rate) [0xc82356fd20] }
&{setIdentifier QSensor::setIdentifier commendable public /work/build/qt5_workdir/w/s/qtsensors/src/sensors/qsensor.cpp non plain false false  void void setIdentifier(const QByteArray &identifier) [0xc82355a080] }
&{setOutputRange QSensor::setOutputRange commendable public /work/build/qt5_workdir/w/s/qtsensors/src/sensors/qsensor.cpp non plain false false  void void setOutputRange(int index) [0xc82355a4c0] }
&{setUserOrientation QSensor::setUserOrientation commendable public /work/build/qt5_workdir/w/s/qtsensors/src/sensors/qsensor.cpp non plain false false  void void setUserOrientation(int userOrientation) [0xc82355a880] }
&{skipDuplicates QSensor::skipDuplicates commendable public /work/build/qt5_workdir/w/s/qtsensors/src/sensors/qsensor.cpp non plain false false  bool bool skipDuplicates() const [] }
&{type QSensor::type commendable public /work/build/qt5_workdir/w/s/qtsensors/src/sensors/qsensor.cpp non plain false false  QByteArray QByteArray type() const [] }
&{userOrientation QSensor::userOrientation commendable public /work/build/qt5_workdir/w/s/qtsensors/src/sensors/qsensor.cpp non plain false false  int int userOrientation() const [] }
&{QSensor QSensor::QSensor commendable public /work/build/qt5_workdir/w/s/qtsensors/src/sensors/qsensor.h non constructor false false   QSensor(const QByteArray &type, QObject *parent) [0xc823548700 0xc823548860] }
&{activeChanged QSensor::activeChanged commendable public /work/build/qt5_workdir/w/s/qtsensors/src/sensors/qsensor.h non signal false false  void void activeChanged() [] }
&{addFilter QSensor::addFilter commendable public /work/build/qt5_workdir/w/s/qtsensors/src/sensors/qsensor.h non plain false false  void void addFilter(QSensorFilter *filter) [0xc823549240] }
&{alwaysOnChanged QSensor::alwaysOnChanged commendable public /work/build/qt5_workdir/w/s/qtsensors/src/sensors/qsensor.h non signal false false  void void alwaysOnChanged() [] }
&{availableSensorsChanged QSensor::availableSensorsChanged commendable public /work/build/qt5_workdir/w/s/qtsensors/src/sensors/qsensor.h non signal false false  void void availableSensorsChanged() [] }
&{axesOrientationModeChanged QSensor::axesOrientationModeChanged commendable public /work/build/qt5_workdir/w/s/qtsensors/src/sensors/qsensor.h non signal false false  void void axesOrientationModeChanged(AxesOrientationMode axesOrientationMode) [0xc823549b80] }
&{bufferSizeChanged QSensor::bufferSizeChanged commendable public /work/build/qt5_workdir/w/s/qtsensors/src/sensors/qsensor.h non signal false false  void void bufferSizeChanged(int bufferSize) [0xc823534300] }
&{busyChanged QSensor::busyChanged commendable public /work/build/qt5_workdir/w/s/qtsensors/src/sensors/qsensor.h non signal false false  void void busyChanged() [] }
&{connectToBackend QSensor::connectToBackend commendable public /work/build/qt5_workdir/w/s/qtsensors/src/sensors/qsensor.h non plain false false  bool bool connectToBackend() [] }
&{currentOrientationChanged QSensor::currentOrientationChanged commendable public /work/build/qt5_workdir/w/s/qtsensors/src/sensors/qsensor.h non signal false false  void void currentOrientationChanged(int currentOrientation) [0xc823534c40] }
&{dataRateChanged QSensor::dataRateChanged commendable public /work/build/qt5_workdir/w/s/qtsensors/src/sensors/qsensor.h non signal false false  void void dataRateChanged() [] }
&{defaultSensorForType QSensor::defaultSensorForType commendable public /work/build/qt5_workdir/w/s/qtsensors/src/sensors/qsensor.h non plain true false  QByteArray QByteArray defaultSensorForType(const QByteArray &type) [0xc823535220] }
&{efficientBufferSizeChanged QSensor::efficientBufferSizeChanged commendable public /work/build/qt5_workdir/w/s/qtsensors/src/sensors/qsensor.h non signal false false  void void efficientBufferSizeChanged(int efficientBufferSize) [0xc8235356a0] }
&{filters QSensor::filters commendable unsupported_GoBodyOutputFailed /work/build/qt5_workdir/w/s/qtsensors/src/sensors/qsensor.h non plain false false  QList<QSensorFilter *> QList<QSensorFilter *> filters() const [] }
&{isFeatureSupported QSensor::isFeatureSupported commendable public /work/build/qt5_workdir/w/s/qtsensors/src/sensors/qsensor.h non plain false false  bool bool isFeatureSupported(Feature feature) const [0xc823535d20] }
&{maxBufferSizeChanged QSensor::maxBufferSizeChanged commendable public /work/build/qt5_workdir/w/s/qtsensors/src/sensors/qsensor.h non signal false false  void void maxBufferSizeChanged(int maxBufferSize) [0xc823524100] }
&{readingChanged QSensor::readingChanged commendable public /work/build/qt5_workdir/w/s/qtsensors/src/sensors/qsensor.h non signal false false  void void readingChanged() [] }
&{removeFilter QSensor::removeFilter commendable public /work/build/qt5_workdir/w/s/qtsensors/src/sensors/qsensor.h non plain false false  void void removeFilter(QSensorFilter *filter) [0xc8235246c0] }
&{sensorError QSensor::sensorError commendable public /work/build/qt5_workdir/w/s/qtsensors/src/sensors/qsensor.h non signal false false  void void sensorError(int error) [0xc823524ba0] }
&{sensorTypes QSensor::sensorTypes commendable unsupported_goOutput /work/build/qt5_workdir/w/s/qtsensors/src/sensors/qsensor.h non plain true false  QList<QByteArray> QList<QByteArray> sensorTypes() [] }
&{sensorsForType QSensor::sensorsForType commendable unsupported_goOutput /work/build/qt5_workdir/w/s/qtsensors/src/sensors/qsensor.h non plain true false  QList<QByteArray> QList<QByteArray> sensorsForType(const QByteArray &type) [0xc823525260] }
&{setCurrentOrientation QSensor::setCurrentOrientation commendable public /work/build/qt5_workdir/w/s/qtsensors/src/sensors/qsensor.h non plain false false  void void setCurrentOrientation(int currentOrientation) [0xc8235256a0] }
&{setEfficientBufferSize QSensor::setEfficientBufferSize commendable public /work/build/qt5_workdir/w/s/qtsensors/src/sensors/qsensor.h non plain false false  void void setEfficientBufferSize(int efficientBufferSize) [0xc823525b80] }
&{setMaxBufferSize QSensor::setMaxBufferSize commendable public /work/build/qt5_workdir/w/s/qtsensors/src/sensors/qsensor.h non plain false false  void void setMaxBufferSize(int maxBufferSize) [0xc823525fa0] }
&{setSkipDuplicates QSensor::setSkipDuplicates commendable public /work/build/qt5_workdir/w/s/qtsensors/src/sensors/qsensor.h non plain false false  void void setSkipDuplicates(bool skipDuplicates) [0xc8234f8380] }
&{skipDuplicatesChanged QSensor::skipDuplicatesChanged commendable public /work/build/qt5_workdir/w/s/qtsensors/src/sensors/qsensor.h non signal false false  void void skipDuplicatesChanged(bool skipDuplicates) [0xc8234f86e0] }
&{start QSensor::start commendable public /work/build/qt5_workdir/w/s/qtsensors/src/sensors/qsensor.h non slot false false  bool bool start() [] }
&{stop QSensor::stop commendable public /work/build/qt5_workdir/w/s/qtsensors/src/sensors/qsensor.h non slot false false  void void stop() [] }
&{userOrientationChanged QSensor::userOrientationChanged commendable public /work/build/qt5_workdir/w/s/qtsensors/src/sensors/qsensor.h non signal false false  void void userOrientationChanged(int userOrientation) [0xc8234f8d80] }
&{~QSensor QSensor::~QSensor commendable public /work/build/qt5_workdir/w/s/qtsensors/src/sensors/qsensor.h impure destructor false false   ~QSensor() [] }
########################################			ENUMS			########################################
&{AxesOrientationMode QSensor::AxesOrientationMode commendable public  [0xc82355b5e0 0xc82355b6c0 0xc82355b840] false}
&{Feature QSensor::Feature commendable public  [0xc82355bae0 0xc82355bc00 0xc82355bce0 0xc82355be40 0xc82355bf80 0xc823548040 0xc823548140 0xc823548220 0xc8235483a0] false}
