########################################			FUNCTIONS			########################################
&{QSslCertificate QSslCertificate::QSslCertificate commendable unsupported_goEnum /work/build/qt5_workdir/w/s/qtbase/src/network/ssl/qsslcertificate.h non constructor false false   QSslCertificate(QIODevice *device, QSsl::EncodingFormat format) [0xc8231d1780 0xc8231d18a0] }
&{QSslCertificate QSslCertificate::QSslCertificate commendable unsupported_goEnum /work/build/qt5_workdir/w/s/qtbase/src/network/ssl/qsslcertificate.h non constructor false true 2  QSslCertificate(const QByteArray &data, QSsl::EncodingFormat format) [0xc8231d1c20 0xc8231d1d80] }
&{QSslCertificate QSslCertificate::QSslCertificate commendable public /work/build/qt5_workdir/w/s/qtbase/src/network/ssl/qsslcertificate.h non constructor false true 3  QSslCertificate(const QSslCertificate &other) [0xc8231ba0e0] }
&{clear QSslCertificate::clear commendable public /work/build/qt5_workdir/w/s/qtbase/src/network/ssl/qsslcertificate.h non plain false false  void void clear() [] }
&{digest QSslCertificate::digest commendable public /work/build/qt5_workdir/w/s/qtbase/src/network/ssl/qsslcertificate.h non plain false false  QByteArray QByteArray digest(QCryptographicHash::Algorithm algorithm) const [0xc8231ba8a0] }
&{fromData QSslCertificate::fromData commendable unsupported_goOutput /work/build/qt5_workdir/w/s/qtbase/src/network/ssl/qsslcertificate.h non plain true false  QList<QSslCertificate> QList<QSslCertificate> fromData(const QByteArray &data, QSsl::EncodingFormat format) [0xc8231bace0 0xc8231bae20] }
&{fromDevice QSslCertificate::fromDevice commendable unsupported_goOutput /work/build/qt5_workdir/w/s/qtbase/src/network/ssl/qsslcertificate.h non plain true false  QList<QSslCertificate> QList<QSslCertificate> fromDevice(QIODevice *device, QSsl::EncodingFormat format) [0xc8231bb260 0xc8231bb3a0] }
&{fromPath QSslCertificate::fromPath commendable unsupported_goOutput /work/build/qt5_workdir/w/s/qtbase/src/network/ssl/qsslcertificate.h non plain true false  QList<QSslCertificate> QList<QSslCertificate> fromPath(const QString &path, QSsl::EncodingFormat format, QRegExp::PatternSyntax syntax) [0xc8231bb800 0xc8231bb920 0xc8231bba80] }
&{importPkcs12 QSslCertificate::importPkcs12 commendable unsupported_goInput /work/build/qt5_workdir/w/s/qtbase/src/network/ssl/qsslcertificate.h non plain true false  bool bool importPkcs12(QIODevice *device, QSslKey *key, QSslCertificate *certificate, QList<QSslCertificate> *caCertificates, const QByteArray &passPhrase) [0xc8231bbdc0 0xc8231bbec0 0xc8231bbf80 0xc8231a8100 0xc8231a82e0] }
&{isBlacklisted QSslCertificate::isBlacklisted commendable public /work/build/qt5_workdir/w/s/qtbase/src/network/ssl/qsslcertificate.h non plain false false  bool bool isBlacklisted() const [] }
&{operator!= QSslCertificate::operator!= commendable unsupported_GoHeaderName /work/build/qt5_workdir/w/s/qtbase/src/network/ssl/qsslcertificate.h non plain false false  bool bool operator!=(const QSslCertificate &other) const [0xc8231a8a40] }
&{operator= QSslCertificate::operator= commendable unsupported_GoHeaderName /work/build/qt5_workdir/w/s/qtbase/src/network/ssl/qsslcertificate.h non plain false false  QSslCertificate & QSslCertificate & operator=(const QSslCertificate &other) [0xc8231a8e60] }
&{swap QSslCertificate::swap commendable public /work/build/qt5_workdir/w/s/qtbase/src/network/ssl/qsslcertificate.h non plain false false  void void swap(QSslCertificate &other) [0xc8231a91c0] }
&{verify QSslCertificate::verify commendable unsupported_goOutput /work/build/qt5_workdir/w/s/qtbase/src/network/ssl/qsslcertificate.h non plain true false  QList<QSslError> QList<QSslError> verify(const QList<QSslCertificate> &certificateChain, const QString &hostName) [0xc8231a95a0 0xc8231a96c0] }
&{~QSslCertificate QSslCertificate::~QSslCertificate commendable public /work/build/qt5_workdir/w/s/qtbase/src/network/ssl/qsslcertificate.h non destructor false false   ~QSslCertificate() [] }
&{effectiveDate QSslCertificate::effectiveDate commendable public /work/build/qt5_workdir/w/s/qtbase/src/network/ssl/qsslcertificate_qt.cpp non plain false false  QDateTime QDateTime effectiveDate() const [] }
&{expiryDate QSslCertificate::expiryDate commendable public /work/build/qt5_workdir/w/s/qtbase/src/network/ssl/qsslcertificate_qt.cpp non plain false false  QDateTime QDateTime expiryDate() const [] }
&{extensions QSslCertificate::extensions commendable unsupported_GoBodyOutputFailed /work/build/qt5_workdir/w/s/qtbase/src/network/ssl/qsslcertificate_qt.cpp non plain false false  QList<QSslCertificateExtension> QList<QSslCertificateExtension> extensions() const [] }
&{isNull QSslCertificate::isNull commendable public /work/build/qt5_workdir/w/s/qtbase/src/network/ssl/qsslcertificate_qt.cpp non plain false false  bool bool isNull() const [] }
&{isSelfSigned QSslCertificate::isSelfSigned commendable public /work/build/qt5_workdir/w/s/qtbase/src/network/ssl/qsslcertificate_qt.cpp non plain false false  bool bool isSelfSigned() const [] }
&{issuerInfo QSslCertificate::issuerInfo commendable public /work/build/qt5_workdir/w/s/qtbase/src/network/ssl/qsslcertificate_qt.cpp non plain false false  QStringList QStringList issuerInfo(SubjectInfo subject) const [0xc8231985e0] }
&{issuerInfo QSslCertificate::issuerInfo commendable public /work/build/qt5_workdir/w/s/qtbase/src/network/ssl/qsslcertificate_qt.cpp non plain false true 2 QStringList QStringList issuerInfo(const QByteArray &attribute) const [0xc8231988a0] }
&{issuerInfoAttributes QSslCertificate::issuerInfoAttributes commendable unsupported_GoBodyOutputFailed /work/build/qt5_workdir/w/s/qtbase/src/network/ssl/qsslcertificate_qt.cpp non plain false false  QList<QByteArray> QList<QByteArray> issuerInfoAttributes() const [] }
&{operator== QSslCertificate::operator== commendable unsupported_GoHeaderName /work/build/qt5_workdir/w/s/qtbase/src/network/ssl/qsslcertificate_qt.cpp non plain false false  bool bool operator==(const QSslCertificate &other) const [0xc823198da0] }
&{publicKey QSslCertificate::publicKey commendable unsupported_cppOutput /work/build/qt5_workdir/w/s/qtbase/src/network/ssl/qsslcertificate_qt.cpp non plain false false  QSslKey QSslKey publicKey() const [] }
&{serialNumber QSslCertificate::serialNumber commendable public /work/build/qt5_workdir/w/s/qtbase/src/network/ssl/qsslcertificate_qt.cpp non plain false false  QByteArray QByteArray serialNumber() const [] }
&{subjectAlternativeNames QSslCertificate::subjectAlternativeNames commendable unsupported_goEnum /work/build/qt5_workdir/w/s/qtbase/src/network/ssl/qsslcertificate_qt.cpp non plain false false  QMultiMap<QSsl::AlternativeNameEntryType, QString> QMultiMap<QSsl::AlternativeNameEntryType, QString> subjectAlternativeNames() const [] }
&{subjectInfo QSslCertificate::subjectInfo commendable public /work/build/qt5_workdir/w/s/qtbase/src/network/ssl/qsslcertificate_qt.cpp non plain false false  QStringList QStringList subjectInfo(SubjectInfo subject) const [0xc823199720] }
&{subjectInfo QSslCertificate::subjectInfo commendable public /work/build/qt5_workdir/w/s/qtbase/src/network/ssl/qsslcertificate_qt.cpp non plain false true 2 QStringList QStringList subjectInfo(const QByteArray &attribute) const [0xc823199a60] }
&{subjectInfoAttributes QSslCertificate::subjectInfoAttributes commendable unsupported_GoBodyOutputFailed /work/build/qt5_workdir/w/s/qtbase/src/network/ssl/qsslcertificate_qt.cpp non plain false false  QList<QByteArray> QList<QByteArray> subjectInfoAttributes() const [] }
&{toDer QSslCertificate::toDer commendable public /work/build/qt5_workdir/w/s/qtbase/src/network/ssl/qsslcertificate_qt.cpp non plain false false  QByteArray QByteArray toDer() const [] }
&{toPem QSslCertificate::toPem commendable public /work/build/qt5_workdir/w/s/qtbase/src/network/ssl/qsslcertificate_qt.cpp non plain false false  QByteArray QByteArray toPem() const [] }
&{toText QSslCertificate::toText commendable public /work/build/qt5_workdir/w/s/qtbase/src/network/ssl/qsslcertificate_qt.cpp non plain false false  QString QString toText() const [] }
&{version QSslCertificate::version commendable public /work/build/qt5_workdir/w/s/qtbase/src/network/ssl/qsslcertificate_qt.cpp non plain false false  QByteArray QByteArray version() const [] }
&{handle QSslCertificate::handle commendable unsupported_goEnum /work/build/qt5_workdir/w/s/qtbase/src/network/ssl/qsslcertificate_winrt.cpp non plain false false  Qt::HANDLE Qt::HANDLE handle() const [] }
########################################			ENUMS			########################################
&{SubjectInfo QSslCertificate::SubjectInfo commendable public  [0xc8231d0bc0 0xc8231d0c60 0xc8231d0d20 0xc8231d0e40 0xc8231d0fc0 0xc8231d1080 0xc8231d1240 0xc8231d1380 0xc8231d1480] false}
