########################################			FUNCTIONS			########################################
&{QSslCertificate QSslCertificate::QSslCertificate commendable unsupported_goEnum /work/build/qt5_workdir/w/s/qtbase/src/network/ssl/qsslcertificate.h non constructor false false   QSslCertificate(QIODevice *device, QSsl::EncodingFormat format) [0xc820ed8a20 0xc820ed8ae0] }
&{QSslCertificate QSslCertificate::QSslCertificate commendable unsupported_goEnum /work/build/qt5_workdir/w/s/qtbase/src/network/ssl/qsslcertificate.h non constructor false true 2  QSslCertificate(const QByteArray &data, QSsl::EncodingFormat format) [0xc820ed8da0 0xc820ed8f00] }
&{QSslCertificate QSslCertificate::QSslCertificate commendable public /work/build/qt5_workdir/w/s/qtbase/src/network/ssl/qsslcertificate.h non constructor false true 3  QSslCertificate(const QSslCertificate &other) [0xc820ed91c0] }
&{clear QSslCertificate::clear commendable public /work/build/qt5_workdir/w/s/qtbase/src/network/ssl/qsslcertificate.h non plain false false  void void clear() [] }
&{digest QSslCertificate::digest commendable public /work/build/qt5_workdir/w/s/qtbase/src/network/ssl/qsslcertificate.h non plain false false  QByteArray QByteArray digest(QCryptographicHash::Algorithm algorithm) const [0xc820ed9720] }
&{fromData QSslCertificate::fromData commendable unsupported_goOutput /work/build/qt5_workdir/w/s/qtbase/src/network/ssl/qsslcertificate.h non plain true false  QList<QSslCertificate> QList<QSslCertificate> fromData(const QByteArray &data, QSsl::EncodingFormat format) [0xc820ed9a80 0xc820ed9b80] }
&{fromDevice QSslCertificate::fromDevice commendable unsupported_goOutput /work/build/qt5_workdir/w/s/qtbase/src/network/ssl/qsslcertificate.h non plain true false  QList<QSslCertificate> QList<QSslCertificate> fromDevice(QIODevice *device, QSsl::EncodingFormat format) [0xc820ed9ec0 0xc820ed9fa0] }
&{fromPath QSslCertificate::fromPath commendable unsupported_goOutput /work/build/qt5_workdir/w/s/qtbase/src/network/ssl/qsslcertificate.h non plain true false  QList<QSslCertificate> QList<QSslCertificate> fromPath(const QString &path, QSsl::EncodingFormat format, QRegExp::PatternSyntax syntax) [0xc820e4e2e0 0xc820e4e3c0 0xc820e4e500] }
&{importPkcs12 QSslCertificate::importPkcs12 commendable unsupported_goInput /work/build/qt5_workdir/w/s/qtbase/src/network/ssl/qsslcertificate.h non plain true false  bool bool importPkcs12(QIODevice *device, QSslKey *key, QSslCertificate *certificate, QList<QSslCertificate> *caCertificates, const QByteArray &passPhrase) [0xc820e4e7a0 0xc820e4e820 0xc820e4e8e0 0xc820e4ea00 0xc820e4eb40] }
&{isBlacklisted QSslCertificate::isBlacklisted commendable public /work/build/qt5_workdir/w/s/qtbase/src/network/ssl/qsslcertificate.h non plain false false  bool bool isBlacklisted() const [] }
&{operator!= QSslCertificate::operator!= commendable unsupported_GoHeaderName /work/build/qt5_workdir/w/s/qtbase/src/network/ssl/qsslcertificate.h non plain false false  bool bool operator!=(const QSslCertificate &other) const [0xc820e4f120] }
&{operator= QSslCertificate::operator= commendable unsupported_GoHeaderName /work/build/qt5_workdir/w/s/qtbase/src/network/ssl/qsslcertificate.h non plain false false  QSslCertificate & QSslCertificate & operator=(const QSslCertificate &other) [0xc820e4f4a0] }
&{swap QSslCertificate::swap commendable public /work/build/qt5_workdir/w/s/qtbase/src/network/ssl/qsslcertificate.h non plain false false  void void swap(QSslCertificate &other) [0xc820e4f780] }
&{verify QSslCertificate::verify commendable unsupported_goOutput /work/build/qt5_workdir/w/s/qtbase/src/network/ssl/qsslcertificate.h non plain true false  QList<QSslError> QList<QSslError> verify(const QList<QSslCertificate> &certificateChain, const QString &hostName) [0xc820e4fa60 0xc820e4fb40] }
&{~QSslCertificate QSslCertificate::~QSslCertificate commendable public /work/build/qt5_workdir/w/s/qtbase/src/network/ssl/qsslcertificate.h non destructor false false   ~QSslCertificate() [] }
&{effectiveDate QSslCertificate::effectiveDate commendable public /work/build/qt5_workdir/w/s/qtbase/src/network/ssl/qsslcertificate_qt.cpp non plain false false  QDateTime QDateTime effectiveDate() const [] }
&{expiryDate QSslCertificate::expiryDate commendable public /work/build/qt5_workdir/w/s/qtbase/src/network/ssl/qsslcertificate_qt.cpp non plain false false  QDateTime QDateTime expiryDate() const [] }
&{extensions QSslCertificate::extensions commendable unsupported_GoBodyOutputFailed /work/build/qt5_workdir/w/s/qtbase/src/network/ssl/qsslcertificate_qt.cpp non plain false false  QList<QSslCertificateExtension> QList<QSslCertificateExtension> extensions() const [] }
&{isNull QSslCertificate::isNull commendable public /work/build/qt5_workdir/w/s/qtbase/src/network/ssl/qsslcertificate_qt.cpp non plain false false  bool bool isNull() const [] }
&{isSelfSigned QSslCertificate::isSelfSigned commendable public /work/build/qt5_workdir/w/s/qtbase/src/network/ssl/qsslcertificate_qt.cpp non plain false false  bool bool isSelfSigned() const [] }
&{issuerInfo QSslCertificate::issuerInfo commendable public /work/build/qt5_workdir/w/s/qtbase/src/network/ssl/qsslcertificate_qt.cpp non plain false false  QStringList QStringList issuerInfo(SubjectInfo subject) const [0xc8209fc780] }
&{issuerInfo QSslCertificate::issuerInfo commendable public /work/build/qt5_workdir/w/s/qtbase/src/network/ssl/qsslcertificate_qt.cpp non plain false true 2 QStringList QStringList issuerInfo(const QByteArray &attribute) const [0xc8209fca00] }
&{issuerInfoAttributes QSslCertificate::issuerInfoAttributes commendable unsupported_GoBodyOutputFailed /work/build/qt5_workdir/w/s/qtbase/src/network/ssl/qsslcertificate_qt.cpp non plain false false  QList<QByteArray> QList<QByteArray> issuerInfoAttributes() const [] }
&{operator== QSslCertificate::operator== commendable unsupported_GoHeaderName /work/build/qt5_workdir/w/s/qtbase/src/network/ssl/qsslcertificate_qt.cpp non plain false false  bool bool operator==(const QSslCertificate &other) const [0xc8209fce40] }
&{publicKey QSslCertificate::publicKey commendable unsupported_cppOutput /work/build/qt5_workdir/w/s/qtbase/src/network/ssl/qsslcertificate_qt.cpp non plain false false  QSslKey QSslKey publicKey() const [] }
&{serialNumber QSslCertificate::serialNumber commendable public /work/build/qt5_workdir/w/s/qtbase/src/network/ssl/qsslcertificate_qt.cpp non plain false false  QByteArray QByteArray serialNumber() const [] }
&{subjectAlternativeNames QSslCertificate::subjectAlternativeNames commendable unsupported_goEnum /work/build/qt5_workdir/w/s/qtbase/src/network/ssl/qsslcertificate_qt.cpp non plain false false  QMultiMap<QSsl::AlternativeNameEntryType, QString> QMultiMap<QSsl::AlternativeNameEntryType, QString> subjectAlternativeNames() const [] }
&{subjectInfo QSslCertificate::subjectInfo commendable public /work/build/qt5_workdir/w/s/qtbase/src/network/ssl/qsslcertificate_qt.cpp non plain false false  QStringList QStringList subjectInfo(SubjectInfo subject) const [0xc8209fd560] }
&{subjectInfo QSslCertificate::subjectInfo commendable public /work/build/qt5_workdir/w/s/qtbase/src/network/ssl/qsslcertificate_qt.cpp non plain false true 2 QStringList QStringList subjectInfo(const QByteArray &attribute) const [0xc8209fd7c0] }
&{subjectInfoAttributes QSslCertificate::subjectInfoAttributes commendable unsupported_GoBodyOutputFailed /work/build/qt5_workdir/w/s/qtbase/src/network/ssl/qsslcertificate_qt.cpp non plain false false  QList<QByteArray> QList<QByteArray> subjectInfoAttributes() const [] }
&{toDer QSslCertificate::toDer commendable public /work/build/qt5_workdir/w/s/qtbase/src/network/ssl/qsslcertificate_qt.cpp non plain false false  QByteArray QByteArray toDer() const [] }
&{toPem QSslCertificate::toPem commendable public /work/build/qt5_workdir/w/s/qtbase/src/network/ssl/qsslcertificate_qt.cpp non plain false false  QByteArray QByteArray toPem() const [] }
&{toText QSslCertificate::toText commendable public /work/build/qt5_workdir/w/s/qtbase/src/network/ssl/qsslcertificate_qt.cpp non plain false false  QString QString toText() const [] }
&{version QSslCertificate::version commendable public /work/build/qt5_workdir/w/s/qtbase/src/network/ssl/qsslcertificate_qt.cpp non plain false false  QByteArray QByteArray version() const [] }
&{handle QSslCertificate::handle commendable unsupported_goEnum /work/build/qt5_workdir/w/s/qtbase/src/network/ssl/qsslcertificate_winrt.cpp non plain false false  Qt::HANDLE Qt::HANDLE handle() const [] }
########################################			ENUMS			########################################
&{SubjectInfo QSslCertificate::SubjectInfo commendable public  [0xc820ed80a0 0xc820ed8120 0xc820ed8200 0xc820ed82a0 0xc820ed83e0 0xc820ed84c0 0xc820ed85a0 0xc820ed86a0 0xc820ed87a0] false}
