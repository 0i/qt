########################################			FUNCTIONS			########################################
&{QSslCertificate QSslCertificate::QSslCertificate commendable unsupported_goEnum /work/build/qt5_workdir/w/s/qtbase/src/network/ssl/qsslcertificate.h non constructor false false   QSslCertificate(QIODevice *device, QSsl::EncodingFormat format) [0xc82368ae00 0xc82368aee0] }
&{QSslCertificate QSslCertificate::QSslCertificate commendable unsupported_goEnum /work/build/qt5_workdir/w/s/qtbase/src/network/ssl/qsslcertificate.h non constructor false true 2  QSslCertificate(const QByteArray &data, QSsl::EncodingFormat format) [0xc82368b160 0xc82368b260] }
&{QSslCertificate QSslCertificate::QSslCertificate commendable public /work/build/qt5_workdir/w/s/qtbase/src/network/ssl/qsslcertificate.h non constructor false true 3  QSslCertificate(const QSslCertificate &other) [0xc82368b500] }
&{clear QSslCertificate::clear commendable public /work/build/qt5_workdir/w/s/qtbase/src/network/ssl/qsslcertificate.h non plain false false  void void clear() [] }
&{digest QSslCertificate::digest commendable public /work/build/qt5_workdir/w/s/qtbase/src/network/ssl/qsslcertificate.h non plain false false  QByteArray QByteArray digest(QCryptographicHash::Algorithm algorithm) const [0xc82368b9c0] }
&{fromData QSslCertificate::fromData commendable unsupported_goOutput /work/build/qt5_workdir/w/s/qtbase/src/network/ssl/qsslcertificate.h non plain true false  QList<QSslCertificate> QList<QSslCertificate> fromData(const QByteArray &data, QSsl::EncodingFormat format) [0xc82368bc80 0xc82368bd80] }
&{fromDevice QSslCertificate::fromDevice commendable unsupported_goOutput /work/build/qt5_workdir/w/s/qtbase/src/network/ssl/qsslcertificate.h non plain true false  QList<QSslCertificate> QList<QSslCertificate> fromDevice(QIODevice *device, QSsl::EncodingFormat format) [0xc82367a0a0 0xc82367a140] }
&{fromPath QSslCertificate::fromPath commendable unsupported_goOutput /work/build/qt5_workdir/w/s/qtbase/src/network/ssl/qsslcertificate.h non plain true false  QList<QSslCertificate> QList<QSslCertificate> fromPath(const QString &path, QSsl::EncodingFormat format, QRegExp::PatternSyntax syntax) [0xc82367a480 0xc82367a560 0xc82367a680] }
&{importPkcs12 QSslCertificate::importPkcs12 commendable unsupported_goInput /work/build/qt5_workdir/w/s/qtbase/src/network/ssl/qsslcertificate.h non plain true false  bool bool importPkcs12(QIODevice *device, QSslKey *key, QSslCertificate *certificate, QList<QSslCertificate> *caCertificates, const QByteArray &passPhrase) [0xc82367a8a0 0xc82367a980 0xc82367aa20 0xc82367ab80 0xc82367ac80] }
&{isBlacklisted QSslCertificate::isBlacklisted commendable public /work/build/qt5_workdir/w/s/qtbase/src/network/ssl/qsslcertificate.h non plain false false  bool bool isBlacklisted() const [] }
&{operator!= QSslCertificate::operator!= commendable unsupported_GoHeaderName /work/build/qt5_workdir/w/s/qtbase/src/network/ssl/qsslcertificate.h non plain false false  bool bool operator!=(const QSslCertificate &other) const [0xc82367b1e0] }
&{operator= QSslCertificate::operator= commendable unsupported_GoHeaderName /work/build/qt5_workdir/w/s/qtbase/src/network/ssl/qsslcertificate.h non plain false false  QSslCertificate & QSslCertificate & operator=(const QSslCertificate &other) [0xc82367b4e0] }
&{swap QSslCertificate::swap commendable public /work/build/qt5_workdir/w/s/qtbase/src/network/ssl/qsslcertificate.h non plain false false  void void swap(QSslCertificate &other) [0xc82367b7a0] }
&{verify QSslCertificate::verify commendable unsupported_goOutput /work/build/qt5_workdir/w/s/qtbase/src/network/ssl/qsslcertificate.h non plain true false  QList<QSslError> QList<QSslError> verify(const QList<QSslCertificate> &certificateChain, const QString &hostName) [0xc82367bac0 0xc82367bba0] }
&{~QSslCertificate QSslCertificate::~QSslCertificate commendable public /work/build/qt5_workdir/w/s/qtbase/src/network/ssl/qsslcertificate.h non destructor false false   ~QSslCertificate() [] }
&{effectiveDate QSslCertificate::effectiveDate commendable public /work/build/qt5_workdir/w/s/qtbase/src/network/ssl/qsslcertificate_qt.cpp non plain false false  QDateTime QDateTime effectiveDate() const [] }
&{expiryDate QSslCertificate::expiryDate commendable public /work/build/qt5_workdir/w/s/qtbase/src/network/ssl/qsslcertificate_qt.cpp non plain false false  QDateTime QDateTime expiryDate() const [] }
&{extensions QSslCertificate::extensions commendable unsupported_GoBodyOutputFailed /work/build/qt5_workdir/w/s/qtbase/src/network/ssl/qsslcertificate_qt.cpp non plain false false  QList<QSslCertificateExtension> QList<QSslCertificateExtension> extensions() const [] }
&{isNull QSslCertificate::isNull commendable public /work/build/qt5_workdir/w/s/qtbase/src/network/ssl/qsslcertificate_qt.cpp non plain false false  bool bool isNull() const [] }
&{isSelfSigned QSslCertificate::isSelfSigned commendable public /work/build/qt5_workdir/w/s/qtbase/src/network/ssl/qsslcertificate_qt.cpp non plain false false  bool bool isSelfSigned() const [] }
&{issuerInfo QSslCertificate::issuerInfo commendable public /work/build/qt5_workdir/w/s/qtbase/src/network/ssl/qsslcertificate_qt.cpp non plain false false  QStringList QStringList issuerInfo(SubjectInfo subject) const [0xc823666660] }
&{issuerInfo QSslCertificate::issuerInfo commendable public /work/build/qt5_workdir/w/s/qtbase/src/network/ssl/qsslcertificate_qt.cpp non plain false true 2 QStringList QStringList issuerInfo(const QByteArray &attribute) const [0xc8236668c0] }
&{issuerInfoAttributes QSslCertificate::issuerInfoAttributes commendable unsupported_GoBodyOutputFailed /work/build/qt5_workdir/w/s/qtbase/src/network/ssl/qsslcertificate_qt.cpp non plain false false  QList<QByteArray> QList<QByteArray> issuerInfoAttributes() const [] }
&{operator== QSslCertificate::operator== commendable unsupported_GoHeaderName /work/build/qt5_workdir/w/s/qtbase/src/network/ssl/qsslcertificate_qt.cpp non plain false false  bool bool operator==(const QSslCertificate &other) const [0xc823666d00] }
&{publicKey QSslCertificate::publicKey commendable unsupported_cppOutput /work/build/qt5_workdir/w/s/qtbase/src/network/ssl/qsslcertificate_qt.cpp non plain false false  QSslKey QSslKey publicKey() const [] }
&{serialNumber QSslCertificate::serialNumber commendable public /work/build/qt5_workdir/w/s/qtbase/src/network/ssl/qsslcertificate_qt.cpp non plain false false  QByteArray QByteArray serialNumber() const [] }
&{subjectAlternativeNames QSslCertificate::subjectAlternativeNames commendable unsupported_goEnum /work/build/qt5_workdir/w/s/qtbase/src/network/ssl/qsslcertificate_qt.cpp non plain false false  QMultiMap<QSsl::AlternativeNameEntryType, QString> QMultiMap<QSsl::AlternativeNameEntryType, QString> subjectAlternativeNames() const [] }
&{subjectInfo QSslCertificate::subjectInfo commendable public /work/build/qt5_workdir/w/s/qtbase/src/network/ssl/qsslcertificate_qt.cpp non plain false false  QStringList QStringList subjectInfo(SubjectInfo subject) const [0xc823667420] }
&{subjectInfo QSslCertificate::subjectInfo commendable public /work/build/qt5_workdir/w/s/qtbase/src/network/ssl/qsslcertificate_qt.cpp non plain false true 2 QStringList QStringList subjectInfo(const QByteArray &attribute) const [0xc823667680] }
&{subjectInfoAttributes QSslCertificate::subjectInfoAttributes commendable unsupported_GoBodyOutputFailed /work/build/qt5_workdir/w/s/qtbase/src/network/ssl/qsslcertificate_qt.cpp non plain false false  QList<QByteArray> QList<QByteArray> subjectInfoAttributes() const [] }
&{toDer QSslCertificate::toDer commendable public /work/build/qt5_workdir/w/s/qtbase/src/network/ssl/qsslcertificate_qt.cpp non plain false false  QByteArray QByteArray toDer() const [] }
&{toPem QSslCertificate::toPem commendable public /work/build/qt5_workdir/w/s/qtbase/src/network/ssl/qsslcertificate_qt.cpp non plain false false  QByteArray QByteArray toPem() const [] }
&{toText QSslCertificate::toText commendable public /work/build/qt5_workdir/w/s/qtbase/src/network/ssl/qsslcertificate_qt.cpp non plain false false  QString QString toText() const [] }
&{version QSslCertificate::version commendable public /work/build/qt5_workdir/w/s/qtbase/src/network/ssl/qsslcertificate_qt.cpp non plain false false  QByteArray QByteArray version() const [] }
&{handle QSslCertificate::handle commendable unsupported_goEnum /work/build/qt5_workdir/w/s/qtbase/src/network/ssl/qsslcertificate_winrt.cpp non plain false false  Qt::HANDLE Qt::HANDLE handle() const [] }
########################################			ENUMS			########################################
&{SubjectInfo QSslCertificate::SubjectInfo commendable public  [0xc82368a620 0xc82368a6a0 0xc82368a720 0xc82368a7c0 0xc82368a8a0 0xc82368a940 0xc82368aa20 0xc82368aae0 0xc82368aba0] false}
