########################################			FUNCTIONS			########################################
&{ignoreSslErrorsImplementation QNetworkReply::ignoreSslErrorsImplementation commendable unsupported_CppInput /work/build/qt5_workdir/w/s/qtbase/src/network/access/qnetworkreply.cpp impure plain false false  void void ignoreSslErrorsImplementation(const QList<QSslError> &errors) [0xc8227ad480] }
&{setSslConfigurationImplementation QNetworkReply::setSslConfigurationImplementation commendable protected /work/build/qt5_workdir/w/s/qtbase/src/network/access/qnetworkreply.cpp impure plain false false  void void setSslConfigurationImplementation(const QSslConfiguration &configuration) [0xc8227ad6a0] }
&{sslConfigurationImplementation QNetworkReply::sslConfigurationImplementation commendable protected /work/build/qt5_workdir/w/s/qtbase/src/network/access/qnetworkreply.cpp impure plain false false  void void sslConfigurationImplementation(QSslConfiguration &configuration) const [0xc8227ad940] }
&{QNetworkReply QNetworkReply::QNetworkReply commendable protected /work/build/qt5_workdir/w/s/qtbase/src/network/access/qnetworkreply.h non constructor false false   QNetworkReply(QObject *parent) [0xc8227b9e00] }
&{abort QNetworkReply::abort commendable public /work/build/qt5_workdir/w/s/qtbase/src/network/access/qnetworkreply.h pure slot false false  void void abort() [] }
&{attribute QNetworkReply::attribute commendable public /work/build/qt5_workdir/w/s/qtbase/src/network/access/qnetworkreply.h non plain false false  QVariant QVariant attribute(QNetworkRequest::Attribute code) const [0xc821a144c0] }
&{close QNetworkReply::close commendable public /work/build/qt5_workdir/w/s/qtbase/src/network/access/qnetworkreply.h impure plain false false  void void close() [] }
&{downloadProgress QNetworkReply::downloadProgress commendable unsupported_cppOutput /work/build/qt5_workdir/w/s/qtbase/src/network/access/qnetworkreply.h non signal false false  void void downloadProgress(qint64 bytesReceived, qint64 bytesTotal) [0xc821a14860 0xc821a14920] }
&{encrypted QNetworkReply::encrypted commendable public /work/build/qt5_workdir/w/s/qtbase/src/network/access/qnetworkreply.h non signal false false  void void encrypted() [] }
&{error QNetworkReply::error commendable public /work/build/qt5_workdir/w/s/qtbase/src/network/access/qnetworkreply.h non signal false true 2 void void error(QNetworkReply::NetworkError code) [0xc821a14ca0] }
&{error QNetworkReply::error commendable public /work/build/qt5_workdir/w/s/qtbase/src/network/access/qnetworkreply.h non plain false false  NetworkError NetworkError error() const [] }
&{finished QNetworkReply::finished commendable public /work/build/qt5_workdir/w/s/qtbase/src/network/access/qnetworkreply.h non signal false false  void void finished() [] }
&{hasRawHeader QNetworkReply::hasRawHeader commendable public /work/build/qt5_workdir/w/s/qtbase/src/network/access/qnetworkreply.h non plain false false  bool bool hasRawHeader(const QByteArray &headerName) const [0xc821a151e0] }
&{header QNetworkReply::header commendable public /work/build/qt5_workdir/w/s/qtbase/src/network/access/qnetworkreply.h non plain false false  QVariant QVariant header(QNetworkRequest::KnownHeaders header) const [0xc821a154c0] }
&{ignoreSslErrors QNetworkReply::ignoreSslErrors commendable public /work/build/qt5_workdir/w/s/qtbase/src/network/access/qnetworkreply.h impure slot false false  void void ignoreSslErrors() [] }
&{ignoreSslErrors QNetworkReply::ignoreSslErrors commendable unsupported_CppInput /work/build/qt5_workdir/w/s/qtbase/src/network/access/qnetworkreply.h non plain false true 2 void void ignoreSslErrors(const QList<QSslError> &errors) [0xc821a158e0] }
&{isFinished QNetworkReply::isFinished commendable public /work/build/qt5_workdir/w/s/qtbase/src/network/access/qnetworkreply.h non plain false false  bool bool isFinished() const [] }
&{isRunning QNetworkReply::isRunning commendable public /work/build/qt5_workdir/w/s/qtbase/src/network/access/qnetworkreply.h non plain false false  bool bool isRunning() const [] }
&{manager QNetworkReply::manager commendable public /work/build/qt5_workdir/w/s/qtbase/src/network/access/qnetworkreply.h non plain false false  QNetworkAccessManager * QNetworkAccessManager * manager() const [] }
&{metaDataChanged QNetworkReply::metaDataChanged commendable public /work/build/qt5_workdir/w/s/qtbase/src/network/access/qnetworkreply.h non signal false false  void void metaDataChanged() [] }
&{operation QNetworkReply::operation commendable public /work/build/qt5_workdir/w/s/qtbase/src/network/access/qnetworkreply.h non plain false false  QNetworkAccessManager::Operation QNetworkAccessManager::Operation operation() const [] }
&{preSharedKeyAuthenticationRequired QNetworkReply::preSharedKeyAuthenticationRequired commendable public /work/build/qt5_workdir/w/s/qtbase/src/network/access/qnetworkreply.h non signal false false  void void preSharedKeyAuthenticationRequired(QSslPreSharedKeyAuthenticator *authenticator) [0xc821fda3e0] }
&{rawHeader QNetworkReply::rawHeader commendable public /work/build/qt5_workdir/w/s/qtbase/src/network/access/qnetworkreply.h non plain false false  QByteArray QByteArray rawHeader(const QByteArray &headerName) const [0xc821fda660] }
&{rawHeaderList QNetworkReply::rawHeaderList commendable unsupported_cppOutput /work/build/qt5_workdir/w/s/qtbase/src/network/access/qnetworkreply.h non plain false false  QList<QByteArray> QList<QByteArray> rawHeaderList() const [] }
&{rawHeaderPairs QNetworkReply::rawHeaderPairs commendable unsupported_cppOutput /work/build/qt5_workdir/w/s/qtbase/src/network/access/qnetworkreply.h non plain false false  const QList<RawHeaderPair> & const QList<RawHeaderPair> & rawHeaderPairs() const [] }
&{readBufferSize QNetworkReply::readBufferSize commendable unsupported_cppOutput /work/build/qt5_workdir/w/s/qtbase/src/network/access/qnetworkreply.h non plain false false  qint64 qint64 readBufferSize() const [] }
&{request QNetworkReply::request commendable unsupported_cppOutput /work/build/qt5_workdir/w/s/qtbase/src/network/access/qnetworkreply.h non plain false false  QNetworkRequest QNetworkRequest request() const [] }
&{setAttribute QNetworkReply::setAttribute commendable protected /work/build/qt5_workdir/w/s/qtbase/src/network/access/qnetworkreply.h non plain false false  void void setAttribute(QNetworkRequest::Attribute code, const QVariant &value) [0xc821fdae80 0xc821fdaf80] }
&{setError QNetworkReply::setError commendable protected /work/build/qt5_workdir/w/s/qtbase/src/network/access/qnetworkreply.h non plain false false  void void setError(NetworkError errorCode, const QString &errorString) [0xc821fdb160 0xc821fdb200] }
&{setFinished QNetworkReply::setFinished commendable protected /work/build/qt5_workdir/w/s/qtbase/src/network/access/qnetworkreply.h non plain false false  void void setFinished(bool finished) [0xc821fdb4a0] }
&{setHeader QNetworkReply::setHeader commendable protected /work/build/qt5_workdir/w/s/qtbase/src/network/access/qnetworkreply.h non plain false false  void void setHeader(QNetworkRequest::KnownHeaders header, const QVariant &value) [0xc821fdb6e0 0xc821fdb7e0] }
&{setOperation QNetworkReply::setOperation commendable protected /work/build/qt5_workdir/w/s/qtbase/src/network/access/qnetworkreply.h non plain false false  void void setOperation(QNetworkAccessManager::Operation operation) [0xc821fdba00] }
&{setRawHeader QNetworkReply::setRawHeader commendable protected /work/build/qt5_workdir/w/s/qtbase/src/network/access/qnetworkreply.h non plain false false  void void setRawHeader(const QByteArray &headerName, const QByteArray &value) [0xc821fdbc80 0xc821fdbda0] }
&{setReadBufferSize QNetworkReply::setReadBufferSize commendable unsupported_CppInput /work/build/qt5_workdir/w/s/qtbase/src/network/access/qnetworkreply.h impure plain false false  void void setReadBufferSize(qint64 size) [0xc821fe2020] }
&{setRequest QNetworkReply::setRequest commendable protected /work/build/qt5_workdir/w/s/qtbase/src/network/access/qnetworkreply.h non plain false false  void void setRequest(const QNetworkRequest &request) [0xc821fe2280] }
&{setSslConfiguration QNetworkReply::setSslConfiguration commendable public /work/build/qt5_workdir/w/s/qtbase/src/network/access/qnetworkreply.h non plain false false  void void setSslConfiguration(const QSslConfiguration &config) [0xc821fe24a0] }
&{setUrl QNetworkReply::setUrl commendable protected /work/build/qt5_workdir/w/s/qtbase/src/network/access/qnetworkreply.h non plain false false  void void setUrl(const QUrl &url) [0xc821fe27a0] }
&{sslConfiguration QNetworkReply::sslConfiguration commendable unsupported_cppOutput /work/build/qt5_workdir/w/s/qtbase/src/network/access/qnetworkreply.h non plain false false  QSslConfiguration QSslConfiguration sslConfiguration() const [] }
&{sslErrors QNetworkReply::sslErrors commendable unsupported_cppOutput /work/build/qt5_workdir/w/s/qtbase/src/network/access/qnetworkreply.h non signal false false  void void sslErrors(const QList<QSslError> &errors) [0xc821fe2b20] }
&{uploadProgress QNetworkReply::uploadProgress commendable unsupported_cppOutput /work/build/qt5_workdir/w/s/qtbase/src/network/access/qnetworkreply.h non signal false false  void void uploadProgress(qint64 bytesSent, qint64 bytesTotal) [0xc821fe2d60 0xc821fe2de0] }
&{url QNetworkReply::url commendable unsupported_cppOutput /work/build/qt5_workdir/w/s/qtbase/src/network/access/qnetworkreply.h non plain false false  QUrl QUrl url() const [] }
&{~QNetworkReply QNetworkReply::~QNetworkReply commendable public /work/build/qt5_workdir/w/s/qtbase/src/network/access/qnetworkreply.h non destructor false false   ~QNetworkReply() [] }
########################################			ENUMS			########################################
&{NetworkError QNetworkReply::NetworkError commendable public  [0xc8227adba0 0xc8227adc60 0xc8227add80 0xc8227adea0 0xc8227adfa0 0xc8227b8040 0xc8227b8160 0xc8227b8260 0xc8227b83a0 0xc8227b84a0 0xc8227b85a0 0xc8227b86e0 0xc8227b87e0 0xc8227b88e0 0xc8227b89e0 0xc8227b8ae0 0xc8227b8c20 0xc8227b8d40 0xc8227b8e20 0xc8227b8ec0 0xc8227b9000 0xc8227b9100 0xc8227b9220 0xc8227b92e0 0xc8227b93a0 0xc8227b94c0 0xc8227b95c0 0xc8227b96c0 0xc8227b9780 0xc8227b9860 0xc8227b9980 0xc8227b9aa0] false}
