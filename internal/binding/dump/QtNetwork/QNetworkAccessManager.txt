########################################			FUNCTIONS			########################################
&{proxyFactory QNetworkAccessManager::proxyFactory commendable public /work/build/qt5_workdir/w/s/qtbase/src/network/access/qnetworkaccessmanager.cpp non plain false false  QNetworkProxyFactory * QNetworkProxyFactory * proxyFactory() const [] }
&{QNetworkAccessManager QNetworkAccessManager::QNetworkAccessManager commendable public /work/build/qt5_workdir/w/s/qtbase/src/network/access/qnetworkaccessmanager.h non constructor false false   QNetworkAccessManager(QObject *parent) [0xc8221114a0] }
&{activeConfiguration QNetworkAccessManager::activeConfiguration commendable unsupported_cppOutput /work/build/qt5_workdir/w/s/qtbase/src/network/access/qnetworkaccessmanager.h non plain false false  QNetworkConfiguration QNetworkConfiguration activeConfiguration() const [] }
&{authenticationRequired QNetworkAccessManager::authenticationRequired commendable public /work/build/qt5_workdir/w/s/qtbase/src/network/access/qnetworkaccessmanager.h non signal false false  void void authenticationRequired(QNetworkReply *reply, QAuthenticator *authenticator) [0xc822111a20 0xc822111aa0] }
&{cache QNetworkAccessManager::cache commendable public /work/build/qt5_workdir/w/s/qtbase/src/network/access/qnetworkaccessmanager.h non plain false false  QAbstractNetworkCache * QAbstractNetworkCache * cache() const [] }
&{clearAccessCache QNetworkAccessManager::clearAccessCache commendable public /work/build/qt5_workdir/w/s/qtbase/src/network/access/qnetworkaccessmanager.h non plain false false  void void clearAccessCache() [] }
&{configuration QNetworkAccessManager::configuration commendable unsupported_cppOutput /work/build/qt5_workdir/w/s/qtbase/src/network/access/qnetworkaccessmanager.h non plain false false  QNetworkConfiguration QNetworkConfiguration configuration() const [] }
&{connectToHost QNetworkAccessManager::connectToHost commendable unsupported_goInput /work/build/qt5_workdir/w/s/qtbase/src/network/access/qnetworkaccessmanager.h non plain false false  void void connectToHost(const QString &hostName, quint16 port) [0xc822111fe0 0xc8221260c0] }
&{connectToHostEncrypted QNetworkAccessManager::connectToHostEncrypted commendable unsupported_goInput /work/build/qt5_workdir/w/s/qtbase/src/network/access/qnetworkaccessmanager.h non plain false false  void void connectToHostEncrypted(const QString &hostName, quint16 port, const QSslConfiguration &sslConfiguration) [0xc8221262e0 0xc822126360 0xc822126440] }
&{cookieJar QNetworkAccessManager::cookieJar commendable public /work/build/qt5_workdir/w/s/qtbase/src/network/access/qnetworkaccessmanager.h non plain false false  QNetworkCookieJar * QNetworkCookieJar * cookieJar() const [] }
&{createRequest QNetworkAccessManager::createRequest commendable protected /work/build/qt5_workdir/w/s/qtbase/src/network/access/qnetworkaccessmanager.h impure plain false false  QNetworkReply * QNetworkReply * createRequest(Operation op, const QNetworkRequest &req, QIODevice *outgoingData) [0xc8221267c0 0xc8221268c0 0xc822126980] }
&{deleteResource QNetworkAccessManager::deleteResource commendable public /work/build/qt5_workdir/w/s/qtbase/src/network/access/qnetworkaccessmanager.h non plain false false  QNetworkReply * QNetworkReply * deleteResource(const QNetworkRequest &request) [0xc822126b60] }
&{encrypted QNetworkAccessManager::encrypted commendable public /work/build/qt5_workdir/w/s/qtbase/src/network/access/qnetworkaccessmanager.h non signal false false  void void encrypted(QNetworkReply *reply) [0xc822126e00] }
&{finished QNetworkAccessManager::finished commendable public /work/build/qt5_workdir/w/s/qtbase/src/network/access/qnetworkaccessmanager.h non signal false false  void void finished(QNetworkReply *reply) [0xc822127020] }
&{get QNetworkAccessManager::get commendable public /work/build/qt5_workdir/w/s/qtbase/src/network/access/qnetworkaccessmanager.h non plain false false  QNetworkReply * QNetworkReply * get(const QNetworkRequest &request) [0xc8221272a0] }
&{head QNetworkAccessManager::head commendable public /work/build/qt5_workdir/w/s/qtbase/src/network/access/qnetworkaccessmanager.h non plain false false  QNetworkReply * QNetworkReply * head(const QNetworkRequest &request) [0xc822127580] }
&{networkAccessible QNetworkAccessManager::networkAccessible commendable public /work/build/qt5_workdir/w/s/qtbase/src/network/access/qnetworkaccessmanager.h non plain false false  NetworkAccessibility NetworkAccessibility networkAccessible() const [] }
&{networkAccessibleChanged QNetworkAccessManager::networkAccessibleChanged commendable public /work/build/qt5_workdir/w/s/qtbase/src/network/access/qnetworkaccessmanager.h non signal false false  void void networkAccessibleChanged(QNetworkAccessManager::NetworkAccessibility accessible) [0xc822127a00] }
&{post QNetworkAccessManager::post commendable public /work/build/qt5_workdir/w/s/qtbase/src/network/access/qnetworkaccessmanager.h non plain false true 3 QNetworkReply * QNetworkReply * post(const QNetworkRequest &request, QHttpMultiPart *multiPart) [0xc822127e40 0xc822127f00] }
&{post QNetworkAccessManager::post commendable public /work/build/qt5_workdir/w/s/qtbase/src/network/access/qnetworkaccessmanager.h non plain false false  QNetworkReply * QNetworkReply * post(const QNetworkRequest &request, QIODevice *data) [0xc82213c1a0 0xc82213c260] }
&{post QNetworkAccessManager::post commendable public /work/build/qt5_workdir/w/s/qtbase/src/network/access/qnetworkaccessmanager.h non plain false true 2 QNetworkReply * QNetworkReply * post(const QNetworkRequest &request, const QByteArray &data) [0xc82213c4c0 0xc82213c620] }
&{preSharedKeyAuthenticationRequired QNetworkAccessManager::preSharedKeyAuthenticationRequired commendable public /work/build/qt5_workdir/w/s/qtbase/src/network/access/qnetworkaccessmanager.h non signal false false  void void preSharedKeyAuthenticationRequired(QNetworkReply *reply, QSslPreSharedKeyAuthenticator *authenticator) [0xc82213c860 0xc82213c940] }
&{proxy QNetworkAccessManager::proxy commendable unsupported_cppOutput /work/build/qt5_workdir/w/s/qtbase/src/network/access/qnetworkaccessmanager.h non plain false false  QNetworkProxy QNetworkProxy proxy() const [] }
&{proxyAuthenticationRequired QNetworkAccessManager::proxyAuthenticationRequired commendable unsupported_cppOutput /work/build/qt5_workdir/w/s/qtbase/src/network/access/qnetworkaccessmanager.h non signal false false  void void proxyAuthenticationRequired(const QNetworkProxy &proxy, QAuthenticator *authenticator) [0xc82213cce0 0xc82213cda0] }
&{put QNetworkAccessManager::put commendable public /work/build/qt5_workdir/w/s/qtbase/src/network/access/qnetworkaccessmanager.h non plain false true 2 QNetworkReply * QNetworkReply * put(const QNetworkRequest &request, QHttpMultiPart *multiPart) [0xc82213d040 0xc82213d160] }
&{put QNetworkAccessManager::put commendable public /work/build/qt5_workdir/w/s/qtbase/src/network/access/qnetworkaccessmanager.h non plain false false  QNetworkReply * QNetworkReply * put(const QNetworkRequest &request, QIODevice *data) [0xc82213d3a0 0xc82213d480] }
&{put QNetworkAccessManager::put commendable public /work/build/qt5_workdir/w/s/qtbase/src/network/access/qnetworkaccessmanager.h non plain false true 3 QNetworkReply * QNetworkReply * put(const QNetworkRequest &request, const QByteArray &data) [0xc82213d680 0xc82213d7c0] }
&{sendCustomRequest QNetworkAccessManager::sendCustomRequest commendable public /work/build/qt5_workdir/w/s/qtbase/src/network/access/qnetworkaccessmanager.h non plain false false  QNetworkReply * QNetworkReply * sendCustomRequest(const QNetworkRequest &request, const QByteArray &verb, QIODevice *data) [0xc82213da80 0xc82213db80 0xc82213dca0] }
&{setCache QNetworkAccessManager::setCache commendable public /work/build/qt5_workdir/w/s/qtbase/src/network/access/qnetworkaccessmanager.h non plain false false  void void setCache(QAbstractNetworkCache *cache) [0xc82213de80] }
&{setConfiguration QNetworkAccessManager::setConfiguration commendable public /work/build/qt5_workdir/w/s/qtbase/src/network/access/qnetworkaccessmanager.h non plain false false  void void setConfiguration(const QNetworkConfiguration &config) [0xc821f24040] }
&{setCookieJar QNetworkAccessManager::setCookieJar commendable public /work/build/qt5_workdir/w/s/qtbase/src/network/access/qnetworkaccessmanager.h non plain false false  void void setCookieJar(QNetworkCookieJar *cookieJar) [0xc821f242c0] }
&{setNetworkAccessible QNetworkAccessManager::setNetworkAccessible commendable public /work/build/qt5_workdir/w/s/qtbase/src/network/access/qnetworkaccessmanager.h non plain false false  void void setNetworkAccessible(NetworkAccessibility accessible) [0xc821f245a0] }
&{setProxy QNetworkAccessManager::setProxy commendable public /work/build/qt5_workdir/w/s/qtbase/src/network/access/qnetworkaccessmanager.h non plain false false  void void setProxy(const QNetworkProxy &proxy) [0xc821f24860] }
&{setProxyFactory QNetworkAccessManager::setProxyFactory commendable public /work/build/qt5_workdir/w/s/qtbase/src/network/access/qnetworkaccessmanager.h non plain false false  void void setProxyFactory(QNetworkProxyFactory *factory) [0xc821f24aa0] }
&{sslErrors QNetworkAccessManager::sslErrors commendable unsupported_cgoOutput /work/build/qt5_workdir/w/s/qtbase/src/network/access/qnetworkaccessmanager.h non signal false false  void void sslErrors(QNetworkReply *reply, const QList<QSslError> &errors) [0xc821f24d20 0xc821f24e00] }
&{supportedSchemes QNetworkAccessManager::supportedSchemes commendable public /work/build/qt5_workdir/w/s/qtbase/src/network/access/qnetworkaccessmanager.h non plain false false  QStringList QStringList supportedSchemes() const [] }
&{supportedSchemesImplementation QNetworkAccessManager::supportedSchemesImplementation commendable protected /work/build/qt5_workdir/w/s/qtbase/src/network/access/qnetworkaccessmanager.h non slot false false  QStringList QStringList supportedSchemesImplementation() const [] }
&{~QNetworkAccessManager QNetworkAccessManager::~QNetworkAccessManager commendable public /work/build/qt5_workdir/w/s/qtbase/src/network/access/qnetworkaccessmanager.h non destructor false false   ~QNetworkAccessManager() [] }
########################################			ENUMS			########################################
&{NetworkAccessibility QNetworkAccessManager::NetworkAccessibility commendable public  [0xc822110ac0 0xc822110ba0 0xc822110c40] false}
&{Operation QNetworkAccessManager::Operation commendable public  [0xc822110ea0 0xc822110f20 0xc822110fa0 0xc822111080 0xc822111120 0xc8221111a0 0xc822111280] false}
