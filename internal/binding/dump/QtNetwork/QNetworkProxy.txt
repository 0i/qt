########################################			FUNCTIONS			########################################
&{QNetworkProxy QNetworkProxy::QNetworkProxy commendable public /work/build/qt5_workdir/w/s/qtbase/src/network/kernel/qnetworkproxy.h non constructor false false   QNetworkProxy() [] }
&{QNetworkProxy QNetworkProxy::QNetworkProxy commendable unsupported_CppInput /work/build/qt5_workdir/w/s/qtbase/src/network/kernel/qnetworkproxy.h non constructor false true 2  QNetworkProxy(ProxyType type, const QString &hostName, quint16 port, const QString &user, const QString &password) [0xc8225d6820 0xc8225d68c0 0xc8225d6960 0xc8225d6a00 0xc8225d6ac0] }
&{QNetworkProxy QNetworkProxy::QNetworkProxy commendable public /work/build/qt5_workdir/w/s/qtbase/src/network/kernel/qnetworkproxy.h non constructor false true 3  QNetworkProxy(const QNetworkProxy &other) [0xc8225d6ce0] }
&{applicationProxy QNetworkProxy::applicationProxy commendable unsupported_cppOutput /work/build/qt5_workdir/w/s/qtbase/src/network/kernel/qnetworkproxy.h non plain true false  QNetworkProxy QNetworkProxy applicationProxy() [] }
&{capabilities QNetworkProxy::capabilities commendable public /work/build/qt5_workdir/w/s/qtbase/src/network/kernel/qnetworkproxy.h non plain false false  Capabilities Capabilities capabilities() const [] }
&{hasRawHeader QNetworkProxy::hasRawHeader commendable public /work/build/qt5_workdir/w/s/qtbase/src/network/kernel/qnetworkproxy.h non plain false false  bool bool hasRawHeader(const QByteArray &headerName) const [0xc8225d7260] }
&{header QNetworkProxy::header commendable public /work/build/qt5_workdir/w/s/qtbase/src/network/kernel/qnetworkproxy.h non plain false false  QVariant QVariant header(QNetworkRequest::KnownHeaders header) const [0xc8225d74e0] }
&{hostName QNetworkProxy::hostName commendable public /work/build/qt5_workdir/w/s/qtbase/src/network/kernel/qnetworkproxy.h non plain false false  QString QString hostName() const [] }
&{isCachingProxy QNetworkProxy::isCachingProxy commendable public /work/build/qt5_workdir/w/s/qtbase/src/network/kernel/qnetworkproxy.h non plain false false  bool bool isCachingProxy() const [] }
&{isTransparentProxy QNetworkProxy::isTransparentProxy commendable public /work/build/qt5_workdir/w/s/qtbase/src/network/kernel/qnetworkproxy.h non plain false false  bool bool isTransparentProxy() const [] }
&{operator!= QNetworkProxy::operator!= commendable unsupported_GoHeaderName /work/build/qt5_workdir/w/s/qtbase/src/network/kernel/qnetworkproxy.h non plain false false  bool bool operator!=(const QNetworkProxy &other) const [0xc8225d7be0] }
&{operator= QNetworkProxy::operator= commendable unsupported_cppOutput /work/build/qt5_workdir/w/s/qtbase/src/network/kernel/qnetworkproxy.h non plain false false  QNetworkProxy & QNetworkProxy & operator=(const QNetworkProxy &other) [0xc8225d7e80] }
&{operator== QNetworkProxy::operator== commendable unsupported_GoHeaderName /work/build/qt5_workdir/w/s/qtbase/src/network/kernel/qnetworkproxy.h non plain false false  bool bool operator==(const QNetworkProxy &other) const [0xc822bfa120] }
&{password QNetworkProxy::password commendable public /work/build/qt5_workdir/w/s/qtbase/src/network/kernel/qnetworkproxy.h non plain false false  QString QString password() const [] }
&{port QNetworkProxy::port commendable unsupported_cppOutput /work/build/qt5_workdir/w/s/qtbase/src/network/kernel/qnetworkproxy.h non plain false false  quint16 quint16 port() const [] }
&{rawHeader QNetworkProxy::rawHeader commendable public /work/build/qt5_workdir/w/s/qtbase/src/network/kernel/qnetworkproxy.h non plain false false  QByteArray QByteArray rawHeader(const QByteArray &headerName) const [0xc822bfa720] }
&{rawHeaderList QNetworkProxy::rawHeaderList commendable unsupported_cppOutput /work/build/qt5_workdir/w/s/qtbase/src/network/kernel/qnetworkproxy.h non plain false false  QList<QByteArray> QList<QByteArray> rawHeaderList() const [] }
&{setApplicationProxy QNetworkProxy::setApplicationProxy commendable public /work/build/qt5_workdir/w/s/qtbase/src/network/kernel/qnetworkproxy.h non plain true false  void void setApplicationProxy(const QNetworkProxy &networkProxy) [0xc822bfab80] }
&{setCapabilities QNetworkProxy::setCapabilities commendable public /work/build/qt5_workdir/w/s/qtbase/src/network/kernel/qnetworkproxy.h non plain false false  void void setCapabilities(Capabilities capabilities) [0xc822bfade0] }
&{setHeader QNetworkProxy::setHeader commendable public /work/build/qt5_workdir/w/s/qtbase/src/network/kernel/qnetworkproxy.h non plain false false  void void setHeader(QNetworkRequest::KnownHeaders header, const QVariant &value) [0xc822bfb040 0xc822bfb140] }
&{setHostName QNetworkProxy::setHostName commendable public /work/build/qt5_workdir/w/s/qtbase/src/network/kernel/qnetworkproxy.h non plain false false  void void setHostName(const QString &hostName) [0xc822bfb3a0] }
&{setPassword QNetworkProxy::setPassword commendable public /work/build/qt5_workdir/w/s/qtbase/src/network/kernel/qnetworkproxy.h non plain false false  void void setPassword(const QString &password) [0xc822bfb5a0] }
&{setPort QNetworkProxy::setPort commendable unsupported_CppInput /work/build/qt5_workdir/w/s/qtbase/src/network/kernel/qnetworkproxy.h non plain false false  void void setPort(quint16 port) [0xc822bfb840] }
&{setRawHeader QNetworkProxy::setRawHeader commendable public /work/build/qt5_workdir/w/s/qtbase/src/network/kernel/qnetworkproxy.h non plain false false  void void setRawHeader(const QByteArray &headerName, const QByteArray &headerValue) [0xc822bfbac0 0xc822bfbba0] }
&{setType QNetworkProxy::setType commendable public /work/build/qt5_workdir/w/s/qtbase/src/network/kernel/qnetworkproxy.h non plain false false  void void setType(QNetworkProxy::ProxyType type) [0xc822bfbe80] }
&{setUser QNetworkProxy::setUser commendable public /work/build/qt5_workdir/w/s/qtbase/src/network/kernel/qnetworkproxy.h non plain false false  void void setUser(const QString &user) [0xc8225e00c0] }
&{swap QNetworkProxy::swap commendable public /work/build/qt5_workdir/w/s/qtbase/src/network/kernel/qnetworkproxy.h non plain false false  void void swap(QNetworkProxy &other) [0xc8225e0340] }
&{type QNetworkProxy::type commendable public /work/build/qt5_workdir/w/s/qtbase/src/network/kernel/qnetworkproxy.h non plain false false  QNetworkProxy::ProxyType QNetworkProxy::ProxyType type() const [] }
&{user QNetworkProxy::user commendable public /work/build/qt5_workdir/w/s/qtbase/src/network/kernel/qnetworkproxy.h non plain false false  QString QString user() const [] }
&{~QNetworkProxy QNetworkProxy::~QNetworkProxy commendable public /work/build/qt5_workdir/w/s/qtbase/src/network/kernel/qnetworkproxy.h non destructor false false   ~QNetworkProxy() [] }
########################################			ENUMS			########################################
&{Capability QNetworkProxy::Capability commendable public QNetworkProxy::Capabilities [0xc822befa80 0xc822befb60 0xc822befc40 0xc822befd20 0xc822befe60] false}
&{ProxyType QNetworkProxy::ProxyType commendable public  [0xc8225d6060 0xc8225d6100 0xc8225d61e0 0xc8225d6260 0xc8225d6320 0xc8225d6400] false}
