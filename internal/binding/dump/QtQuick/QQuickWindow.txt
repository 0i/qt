########################################			FUNCTIONS			########################################
&{activeFocusItem QQuickWindow::activeFocusItem commendable public /work/build/qt5_workdir/w/s/qtdeclarative/src/quick/items/qquickwindow.cpp non plain false false  QQuickItem * QQuickItem * activeFocusItem() const [] }
&{color QQuickWindow::color commendable public /work/build/qt5_workdir/w/s/qtdeclarative/src/quick/items/qquickwindow.cpp non plain false false  QColor QColor color() const [] }
&{contentItem QQuickWindow::contentItem commendable public /work/build/qt5_workdir/w/s/qtdeclarative/src/quick/items/qquickwindow.cpp non plain false false  QQuickItem * QQuickItem * contentItem() const [] }
&{setColor QQuickWindow::setColor commendable public /work/build/qt5_workdir/w/s/qtdeclarative/src/quick/items/qquickwindow.cpp non plain false false  void void setColor(const QColor &color) [0xc8220f52e0] }
&{QQuickWindow QQuickWindow::QQuickWindow commendable public /work/build/qt5_workdir/w/s/qtdeclarative/src/quick/items/qquickwindow.h non constructor false false   QQuickWindow(QWindow *parent) [0xc821da8e80] }
&{accessibleRoot QQuickWindow::accessibleRoot commendable public /work/build/qt5_workdir/w/s/qtdeclarative/src/quick/items/qquickwindow.h impure plain false false  QAccessibleInterface * QAccessibleInterface * accessibleRoot() const [] }
&{activeFocusItemChanged QQuickWindow::activeFocusItemChanged commendable public /work/build/qt5_workdir/w/s/qtdeclarative/src/quick/items/qquickwindow.h non signal false false  void void activeFocusItemChanged() [] }
&{afterAnimating QQuickWindow::afterAnimating commendable public /work/build/qt5_workdir/w/s/qtdeclarative/src/quick/items/qquickwindow.h non signal false false  void void afterAnimating() [] }
&{afterRendering QQuickWindow::afterRendering commendable public /work/build/qt5_workdir/w/s/qtdeclarative/src/quick/items/qquickwindow.h non signal false false  void void afterRendering() [] }
&{afterSynchronizing QQuickWindow::afterSynchronizing commendable public /work/build/qt5_workdir/w/s/qtdeclarative/src/quick/items/qquickwindow.h non signal false false  void void afterSynchronizing() [] }
&{beforeRendering QQuickWindow::beforeRendering commendable public /work/build/qt5_workdir/w/s/qtdeclarative/src/quick/items/qquickwindow.h non signal false false  void void beforeRendering() [] }
&{beforeSynchronizing QQuickWindow::beforeSynchronizing commendable public /work/build/qt5_workdir/w/s/qtdeclarative/src/quick/items/qquickwindow.h non signal false false  void void beforeSynchronizing() [] }
&{clearBeforeRendering QQuickWindow::clearBeforeRendering commendable public /work/build/qt5_workdir/w/s/qtdeclarative/src/quick/items/qquickwindow.h non plain false false  bool bool clearBeforeRendering() const [] }
&{closing QQuickWindow::closing commendable unsupported_cgoOutput /work/build/qt5_workdir/w/s/qtdeclarative/src/quick/items/qquickwindow.h non signal false false  void void closing(QQuickCloseEvent *close) [0xc821db8920] }
&{colorChanged QQuickWindow::colorChanged commendable public /work/build/qt5_workdir/w/s/qtdeclarative/src/quick/items/qquickwindow.h non signal false false  void void colorChanged(const QColor &) [0xc821db8c80] }
&{createTextureFromId QQuickWindow::createTextureFromId commendable unsupported_goInput /work/build/qt5_workdir/w/s/qtdeclarative/src/quick/items/qquickwindow.h non plain false false  QSGTexture * QSGTexture * createTextureFromId(uint id, const QSize &size, CreateTextureOptions options) const [0xc821db90e0 0xc821db9200 0xc821db92e0] }
&{createTextureFromImage QQuickWindow::createTextureFromImage commendable public /work/build/qt5_workdir/w/s/qtdeclarative/src/quick/items/qquickwindow.h non plain false true 2 QSGTexture * QSGTexture * createTextureFromImage(const QImage &image) const [0xc821db9720] }
&{createTextureFromImage QQuickWindow::createTextureFromImage commendable public /work/build/qt5_workdir/w/s/qtdeclarative/src/quick/items/qquickwindow.h non plain false false  QSGTexture * QSGTexture * createTextureFromImage(const QImage &image, CreateTextureOptions options) const [0xc821db9b00 0xc821db9cc0] }
&{effectiveDevicePixelRatio QQuickWindow::effectiveDevicePixelRatio commendable public /work/build/qt5_workdir/w/s/qtdeclarative/src/quick/items/qquickwindow.h non plain false false  qreal qreal effectiveDevicePixelRatio() const [] }
&{event QQuickWindow::event commendable protected /work/build/qt5_workdir/w/s/qtdeclarative/src/quick/items/qquickwindow.h impure plain false false  bool bool event(QEvent *e) [0xc821dcc3e0] }
&{exposeEvent QQuickWindow::exposeEvent commendable protected /work/build/qt5_workdir/w/s/qtdeclarative/src/quick/items/qquickwindow.h impure plain false false  void void exposeEvent(QExposeEvent *) [0xc821dcc820] }
&{focusInEvent QQuickWindow::focusInEvent commendable protected /work/build/qt5_workdir/w/s/qtdeclarative/src/quick/items/qquickwindow.h impure plain false false  void void focusInEvent(QFocusEvent *ev) [0xc821dccb60] }
&{focusOutEvent QQuickWindow::focusOutEvent commendable protected /work/build/qt5_workdir/w/s/qtdeclarative/src/quick/items/qquickwindow.h impure plain false false  void void focusOutEvent(QFocusEvent *ev) [0xc821dccee0] }
&{frameSwapped QQuickWindow::frameSwapped commendable public /work/build/qt5_workdir/w/s/qtdeclarative/src/quick/items/qquickwindow.h non signal false false  void void frameSwapped() [] }
&{grabWindow QQuickWindow::grabWindow commendable unsupported_cppOutput /work/build/qt5_workdir/w/s/qtdeclarative/src/quick/items/qquickwindow.h non plain false false  QImage QImage grabWindow() [] }
&{hasDefaultAlphaBuffer QQuickWindow::hasDefaultAlphaBuffer commendable public /work/build/qt5_workdir/w/s/qtdeclarative/src/quick/items/qquickwindow.h non plain true false  bool bool hasDefaultAlphaBuffer() [] }
&{hideEvent QQuickWindow::hideEvent commendable protected /work/build/qt5_workdir/w/s/qtdeclarative/src/quick/items/qquickwindow.h impure plain false false  void void hideEvent(QHideEvent *) [0xc821dcdea0] }
&{incubationController QQuickWindow::incubationController commendable public /work/build/qt5_workdir/w/s/qtdeclarative/src/quick/items/qquickwindow.h non plain false false  QQmlIncubationController * QQmlIncubationController * incubationController() const [] }
&{isPersistentOpenGLContext QQuickWindow::isPersistentOpenGLContext commendable public /work/build/qt5_workdir/w/s/qtdeclarative/src/quick/items/qquickwindow.h non plain false false  bool bool isPersistentOpenGLContext() const [] }
&{isPersistentSceneGraph QQuickWindow::isPersistentSceneGraph commendable public /work/build/qt5_workdir/w/s/qtdeclarative/src/quick/items/qquickwindow.h non plain false false  bool bool isPersistentSceneGraph() const [] }
&{isSceneGraphInitialized QQuickWindow::isSceneGraphInitialized commendable public /work/build/qt5_workdir/w/s/qtdeclarative/src/quick/items/qquickwindow.h non plain false false  bool bool isSceneGraphInitialized() const [] }
&{keyPressEvent QQuickWindow::keyPressEvent commendable protected /work/build/qt5_workdir/w/s/qtdeclarative/src/quick/items/qquickwindow.h impure plain false false  void void keyPressEvent(QKeyEvent *e) [0xc821ea4c60] }
&{keyReleaseEvent QQuickWindow::keyReleaseEvent commendable protected /work/build/qt5_workdir/w/s/qtdeclarative/src/quick/items/qquickwindow.h impure plain false false  void void keyReleaseEvent(QKeyEvent *e) [0xc821ea50a0] }
&{mouseDoubleClickEvent QQuickWindow::mouseDoubleClickEvent commendable protected /work/build/qt5_workdir/w/s/qtdeclarative/src/quick/items/qquickwindow.h impure plain false false  void void mouseDoubleClickEvent(QMouseEvent *event) [0xc821ea5540] }
&{mouseGrabberItem QQuickWindow::mouseGrabberItem commendable public /work/build/qt5_workdir/w/s/qtdeclarative/src/quick/items/qquickwindow.h non plain false false  QQuickItem * QQuickItem * mouseGrabberItem() const [] }
&{mouseMoveEvent QQuickWindow::mouseMoveEvent commendable protected /work/build/qt5_workdir/w/s/qtdeclarative/src/quick/items/qquickwindow.h impure plain false false  void void mouseMoveEvent(QMouseEvent *event) [0xc821ea5b80] }
&{mousePressEvent QQuickWindow::mousePressEvent commendable protected /work/build/qt5_workdir/w/s/qtdeclarative/src/quick/items/qquickwindow.h impure plain false false  void void mousePressEvent(QMouseEvent *event) [0xc821ea5f00] }
&{mouseReleaseEvent QQuickWindow::mouseReleaseEvent commendable protected /work/build/qt5_workdir/w/s/qtdeclarative/src/quick/items/qquickwindow.h impure plain false false  void void mouseReleaseEvent(QMouseEvent *event) [0xc821eb82e0] }
&{openglContext QQuickWindow::openglContext commendable public /work/build/qt5_workdir/w/s/qtdeclarative/src/quick/items/qquickwindow.h non plain false false  QOpenGLContext * QOpenGLContext * openglContext() const [] }
&{openglContextCreated QQuickWindow::openglContextCreated commendable public /work/build/qt5_workdir/w/s/qtdeclarative/src/quick/items/qquickwindow.h non signal false false  void void openglContextCreated(QOpenGLContext *context) [0xc821eb8760] }
&{releaseResources QQuickWindow::releaseResources commendable public /work/build/qt5_workdir/w/s/qtdeclarative/src/quick/items/qquickwindow.h non slot false false  void void releaseResources() [] }
&{renderTarget QQuickWindow::renderTarget commendable public /work/build/qt5_workdir/w/s/qtdeclarative/src/quick/items/qquickwindow.h non plain false false  QOpenGLFramebufferObject * QOpenGLFramebufferObject * renderTarget() const [] }
&{renderTargetId QQuickWindow::renderTargetId commendable unsupported_GoBodyOutputFailed /work/build/qt5_workdir/w/s/qtdeclarative/src/quick/items/qquickwindow.h non plain false false  uint uint renderTargetId() const [] }
&{renderTargetSize QQuickWindow::renderTargetSize commendable unsupported_cppOutput /work/build/qt5_workdir/w/s/qtdeclarative/src/quick/items/qquickwindow.h non plain false false  QSize QSize renderTargetSize() const [] }
&{resetOpenGLState QQuickWindow::resetOpenGLState commendable public /work/build/qt5_workdir/w/s/qtdeclarative/src/quick/items/qquickwindow.h non plain false false  void void resetOpenGLState() [] }
&{resizeEvent QQuickWindow::resizeEvent commendable protected /work/build/qt5_workdir/w/s/qtdeclarative/src/quick/items/qquickwindow.h impure plain false false  void void resizeEvent(QResizeEvent *ev) [0xc821eb93a0] }
&{sceneGraphAboutToStop QQuickWindow::sceneGraphAboutToStop commendable public /work/build/qt5_workdir/w/s/qtdeclarative/src/quick/items/qquickwindow.h non signal false false  void void sceneGraphAboutToStop() [] }
&{sceneGraphError QQuickWindow::sceneGraphError commendable public /work/build/qt5_workdir/w/s/qtdeclarative/src/quick/items/qquickwindow.h non signal false false  void void sceneGraphError(QQuickWindow::SceneGraphError error, const QString &message) [0xc821eb9880 0xc821eb99c0] }
&{sceneGraphInitialized QQuickWindow::sceneGraphInitialized commendable public /work/build/qt5_workdir/w/s/qtdeclarative/src/quick/items/qquickwindow.h non signal false false  void void sceneGraphInitialized() [] }
&{sceneGraphInvalidated QQuickWindow::sceneGraphInvalidated commendable public /work/build/qt5_workdir/w/s/qtdeclarative/src/quick/items/qquickwindow.h non signal false false  void void sceneGraphInvalidated() [] }
&{scheduleRenderJob QQuickWindow::scheduleRenderJob commendable public /work/build/qt5_workdir/w/s/qtdeclarative/src/quick/items/qquickwindow.h non plain false false  void void scheduleRenderJob(QRunnable *job, RenderStage stage) [0xc821ec83e0 0xc821ec8580] }
&{sendEvent QQuickWindow::sendEvent commendable public /work/build/qt5_workdir/w/s/qtdeclarative/src/quick/items/qquickwindow.h non plain false false  bool bool sendEvent(QQuickItem *item, QEvent *e) [0xc821ec89e0 0xc821ec8ae0] }
&{setClearBeforeRendering QQuickWindow::setClearBeforeRendering commendable public /work/build/qt5_workdir/w/s/qtdeclarative/src/quick/items/qquickwindow.h non plain false false  void void setClearBeforeRendering(bool enabled) [0xc821ec8f60] }
&{setDefaultAlphaBuffer QQuickWindow::setDefaultAlphaBuffer commendable public /work/build/qt5_workdir/w/s/qtdeclarative/src/quick/items/qquickwindow.h non plain true false  void void setDefaultAlphaBuffer(bool useAlpha) [0xc821ec93c0] }
&{setPersistentOpenGLContext QQuickWindow::setPersistentOpenGLContext commendable public /work/build/qt5_workdir/w/s/qtdeclarative/src/quick/items/qquickwindow.h non plain false false  void void setPersistentOpenGLContext(bool persistent) [0xc821ec9760] }
&{setPersistentSceneGraph QQuickWindow::setPersistentSceneGraph commendable public /work/build/qt5_workdir/w/s/qtdeclarative/src/quick/items/qquickwindow.h non plain false false  void void setPersistentSceneGraph(bool persistent) [0xc821ec9bc0] }
&{setRenderTarget QQuickWindow::setRenderTarget commendable public /work/build/qt5_workdir/w/s/qtdeclarative/src/quick/items/qquickwindow.h non plain false false  void void setRenderTarget(QOpenGLFramebufferObject *fbo) [0xc821ec9fe0] }
&{setRenderTarget QQuickWindow::setRenderTarget commendable unsupported_goInput /work/build/qt5_workdir/w/s/qtdeclarative/src/quick/items/qquickwindow.h non plain false true 2 void void setRenderTarget(uint fboId, const QSize &size) [0xc821ede5a0 0xc821ede660] }
&{showEvent QQuickWindow::showEvent commendable protected /work/build/qt5_workdir/w/s/qtdeclarative/src/quick/items/qquickwindow.h impure plain false false  void void showEvent(QShowEvent *) [0xc821eded60] }
&{update QQuickWindow::update commendable public /work/build/qt5_workdir/w/s/qtdeclarative/src/quick/items/qquickwindow.h non slot false false  void void update() [] }
&{wheelEvent QQuickWindow::wheelEvent commendable protected /work/build/qt5_workdir/w/s/qtdeclarative/src/quick/items/qquickwindow.h impure plain false false  void void wheelEvent(QWheelEvent *event) [0xc821edf480] }
&{~QQuickWindow QQuickWindow::~QQuickWindow commendable public /work/build/qt5_workdir/w/s/qtdeclarative/src/quick/items/qquickwindow.h impure destructor false false   ~QQuickWindow() [] }
########################################			ENUMS			########################################
&{CreateTextureOption QQuickWindow::CreateTextureOption commendable public QQuickWindow::CreateTextureOptions [0xc8220f5720 0xc8220f58a0 0xc8220f5b00 0xc8220f5ce0] false}
&{RenderStage QQuickWindow::RenderStage commendable public  [0xc821da80c0 0xc821da8280 0xc821da8400 0xc821da8540 0xc821da8700] false}
&{SceneGraphError QQuickWindow::SceneGraphError commendable public  [0xc821da89e0] false}
